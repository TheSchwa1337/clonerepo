Comprehensive Linting Report
Generated: 2025-07-03T02:20:30.549104

Total Checks: 3
Passed Checks: 0
Failed Checks: 3

Detailed Check Results:

FAILED - flake8 core schwabot utils config --max-line-length=100 --ignore=E203,W503
  STDOUT:
config\__init__.py:1:1: D104 Missing docstring in public package
config\cooldown_config.py:1:1: D100 Missing docstring in public module
config\io_utils.py:1:1: D100 Missing docstring in public module
config\mathematical_framework_config.py:163:23: ANN101 Missing type annotation for self in method
config\mathematical_framework_config.py:167:24: ANN101 Missing type annotation for self in method
config\mathematical_framework_config.py:194:21: ANN101 Missing type annotation for self in method
config\mathematical_framework_config.py:204:21: ANN101 Missing type annotation for self in method
config\mathematical_framework_config.py:218:18: ANN101 Missing type annotation for self in method
config\mathematical_framework_config.py:235:20: ANN101 Missing type annotation for self in method
config\matrix_response_schema.py:1:1: D100 Missing docstring in public module
config\risk_config.py:1:1: D100 Missing docstring in public module
config\schemas\__init__.py:45:18: ANN401 Dynamically typed expressions (typing.Any) are disallowed
config\schemas\quantization.py:1:1: D100 Missing docstring in public module
config\schwabot_config.py:41:18: ANN401 Dynamically typed expressions (typing.Any) are disallowed
config\schwabot_config.py:61:18: ANN101 Missing type annotation for self in method
core\__init__.py:3:1: D205 1 blank line required between summary line and description
core\__init__.py:100:24: ANN201 Missing return type annotation for public function
core\__init__.py:101:1: D202 No blank lines allowed after function docstring
core\__init__.py:115:33: ANN001 Missing type annotation for function argument 'initial_capital'
core\__init__.py:115:58: ANN201 Missing return type annotation for public function
core\__init__.py:116:1: D202 No blank lines allowed after function docstring
core\__init__.py:116:1: D205 1 blank line required between summary line and description
core\__init__.py:116:1: D412 No blank lines allowed between a section header and its content
core\adaptive_immunity_vector.py:1:1: D205 1 blank line required between summary line and description
core\adaptive_immunity_vector.py:1:1: D301 Use r""" if any backslashes in a docstring
core\adaptive_immunity_vector.py:1:1: D400 First line should end with a period
core\adaptive_immunity_vector.py:45:101: E501 line too long (119 > 100 characters)
core\adaptive_immunity_vector.py:61:101: E501 line too long (106 > 100 characters)
core\adaptive_immunity_vector.py:99:101: E501 line too long (189 > 100 characters)
core\adaptive_immunity_vector.py:241:101: E501 line too long (114 > 100 characters)
core\adaptive_immunity_vector.py:385:101: E501 line too long (128 > 100 characters)
core\adaptive_immunity_vector.py:411:101: E501 line too long (360 > 100 characters)
core\adaptive_immunity_vector.py:463:101: E501 line too long (146 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:1:1: D205 1 blank line required between summary line and description
core\advanced_dualistic_trading_execution_system.py:1:1: D301 Use r""" if any backslashes in a docstring
core\advanced_dualistic_trading_execution_system.py:1:1: D400 First line should end with a period
core\advanced_dualistic_trading_execution_system.py:183:101: E501 line too long (123 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:203:101: E501 line too long (150 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:223:101: E501 line too long (119 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:393:101: E501 line too long (109 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:477:101: E501 line too long (222 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:549:101: E501 line too long (126 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:577:101: E501 line too long (293 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:579:101: E501 line too long (145 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:581:101: E501 line too long (153 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:617:101: E501 line too long (120 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:975:101: E501 line too long (127 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:1077:101: E501 line too long (126 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:1165:101: E501 line too long (128 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:1267:101: E501 line too long (120 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:1357:101: E501 line too long (107 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:1401:101: E501 line too long (112 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:1503:101: E501 line too long (132 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:1795:101: E501 line too long (187 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:1803:101: E501 line too long (254 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:1805:101: E501 line too long (134 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:1821:101: E501 line too long (119 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:1827:101: E501 line too long (140 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:1831:101: E501 line too long (175 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:1853:101: E501 line too long (150 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:1889:101: E501 line too long (238 > 100 characters)
core\advanced_dualistic_trading_execution_system.py:1893:101: E501 line too long (320 > 100 characters)
core\advanced_settings_engine.py:3:1: D205 1 blank line required between summary line and description
core\advanced_settings_engine.py:46:18: ANN101 Missing type annotation for self in method
core\advanced_settings_engine.py:46:75: ANN204 Missing return type annotation for special method
core\advanced_settings_engine.py:47:1: D202 No blank lines allowed after function docstring
core\advanced_settings_engine.py:47:1: D401 First line should be in imperative mood
core\advanced_settings_engine.py:60:9: ANN101 Missing type annotation for self in method
core\advanced_settings_engine.py:63:9: ANN401 Dynamically typed expressions (typing.Any) are disallowed
core\advanced_settings_engine.py:67:1: D202 No blank lines allowed after function docstring
core\advanced_settings_engine.py:67:1: D401 First line should be in imperative mood
core\advanced_settings_engine.py:81:21: ANN101 Missing type annotation for self in method
core\advanced_settings_engine.py:82:1: D202 No blank lines allowed after function docstring
core\advanced_settings_engine.py:82:1: D401 First line should be in imperative mood
core\advanced_settings_engine.py:86:21: ANN101 Missing type annotation for self in method
core\advanced_settings_engine.py:86:38: ANN401 Dynamically typed expressions (typing.Any) are disallowed
core\advanced_settings_engine.py:87:1: D202 No blank lines allowed after function docstring
core\advanced_settings_engine.py:87:1: D401 First line should be in imperative mood
core\advanced_settings_engine.py:100:101: E501 line too long (108 > 100 characters)
core\advanced_settings_engine.py:117:29: ANN101 Missing type annotation for self in method
core\advanced_settings_engine.py:118:1: D202 No blank lines allowed after function docstring
core\advanced_settings_engine.py:138:28: ANN101 Missing type annotation for self in method
core\advanced_settings_engine.py:139:1: D202 No blank lines allowed after function docstring
core\advanced_tensor_algebra.py:3:1: D205 1 blank line required between summary line and description
core\advanced_tensor_algebra.py:33:1: D200 One-line docstring should fit on one line with quotes
core\advanced_tensor_algebra.py:33:1: D202 No blank lines allowed after function docstring
core\advanced_tensor_algebra.py:33:1: D401 First line should be in imperative mood
core\advanced_tensor_algebra.py:47:1: D200 One-line docstring should fit on one line with quotes
core\advanced_tensor_algebra.py:47:1: D202 No blank lines allowed after function docstring
core\advanced_tensor_algebra.py:47:1: D401 First line should be in imperative mood
core\advanced_tensor_algebra.py:71:1: D200 One-line docstring should fit on one line with quotes
core\advanced_tensor_algebra.py:71:1: D202 No blank lines allowed after function docstring
core\advanced_tensor_algebra.py:81:10: N806 variable 'U' in function should be lowercase
core\advanced_tensor_algebra.py:81:10: N806 variable 'Vh' in function should be lowercase
core\advanced_tensor_algebra.py:89:1: D202 No blank lines allowed after function docstring
core\advanced_tensor_algebra.py:89:1: D400 First line should end with a period
core\advanced_tensor_algebra.py:89:1: D401 First line should be in imperative mood
core\advanced_tensor_algebra.py:89:1: D402 First line should not be the function's "signature"
core\advanced_tensor_algebra.py:109:1: D202 No blank lines allowed after function docstring
core\advanced_tensor_algebra.py:109:1: D400 First line should end with a period
core\advanced_tensor_algebra.py:109:1: D401 First line should be in imperative mood
core\api\__init__.py:1:1: D104 Missing docstring in public package
core\api\cache_sync.py:47:18: ANN101 Missing type annotation for self in method
core\api\cache_sync.py:48:1: D202 No blank lines allowed after function docstring
core\api\cache_sync.py:48:1: D205 1 blank line required between summary line and description
core\api\cache_sync.py:48:1: D412 No blank lines allowed between a section header and its content
core\api\cache_sync.py:64:21: ANN101 Missing type annotation for self in method
core\api\cache_sync.py:65:1: D202 No blank lines allowed after function docstring
core\api\cache_sync.py:79:20: ANN101 Missing type annotation for self in method
core\api\cache_sync.py:80:1: D202 No blank lines allowed after function docstring
core\api\cache_sync.py:102:25: ANN101 Missing type annotation for self in method
core\api\cache_sync.py:103:1: D202 No blank lines allowed after function docstring
core\api\cache_sync.py:103:1: D401 First line should be in imperative mood; try rephrasing
core\api\cache_sync.py:117:34: ANN101 Missing type annotation for self in method
core\api\cache_sync.py:118:1: D202 No blank lines allowed after function docstring
core\api\data_models.py:5:1: D205 1 blank line required between summary line and description
core\api\data_models.py:5:1: D400 First line should end with a period
core\api\exchange_connection.py:1:1: D100 Missing docstring in public module
core\api\exchange_connection.py:37:18: ANN101 Missing type annotation for self in method
core\api\exchange_connection.py:37:76: ANN204 Missing return type annotation for special method
core\api\exchange_connection.py:38:1: D202 No blank lines allowed after function docstring
core\api\exchange_connection.py:38:1: D205 1 blank line required between summary line and description
core\api\exchange_connection.py:38:1: D401 First line should be in imperative mood
core\api\exchange_connection.py:38:1: D412 No blank lines allowed between a section header and its content
core\api\exchange_connection.py:84:23: ANN101 Missing type annotation for self in method
core\api\exchange_connection.py:85:1: D202 No blank lines allowed after function docstring
core\api\exchange_connection.py:85:1: D401 First line should be in imperative mood
core\api\exchange_connection.py:157:26: ANN101 Missing type annotation for self in method
core\api\exchange_connection.py:157:31: ANN201 Missing return type annotation for public function
core\api\exchange_connection.py:158:1: D202 No blank lines allowed after function docstring
core\api\exchange_connection.py:158:1: D401 First line should be in imperative mood
core\api\exchange_connection.py:178:31: ANN101 Missing type annotation for self in method
core\api\exchange_connection.py:179:1: D202 No blank lines allowed after function docstring
core\api\exchange_connection.py:179:1: D401 First line should be in imperative mood
core\api\exchange_connection.py:233:27: ANN101 Missing type annotation for self in method
core\api\exchange_connection.py:234:1: D202 No blank lines allowed after function docstring
core\api\exchange_connection.py:283:27: ANN101 Missing type annotation for self in method
core\api\exchange_connection.py:284:1: D202 No blank lines allowed after function docstring
core\api\exchange_connection.py:284:1: D401 First line should be in imperative mood
core\api\exchange_connection.py:316:34: ANN101 Missing type annotation for self in method
core\api\exchange_connection.py:317:1: D202 No blank lines allowed after function docstring
core\api\exchange_connection.py:317:1: D401 First line should be in imperative mood
core\api\exchange_connection.py:338:32: ANN101 Missing type annotation for self in method
core\api\exchange_connection.py:339:1: D202 No blank lines allowed after function docstring
core\api\exchange_connection.py:339:1: D401 First line should be in imperative mood
core\api\handlers\__init__.py:1:1: D205 1 blank line required between summary line and description
core\api\handlers\__init__.py:1:1: D400 First line should end with a period
core\api\handlers\__init__.py:7:101: E501 line too long (102 > 100 characters)
core\api\handlers\alt_fear_greed.py:1:1: D100 Missing docstring in public module
core\api\handlers\alt_fear_greed.py:9:1: I201 Missing newline between import groups. 'import requests' is identified as Third Party and 'import aiohttp' is identified as Third Party.
core\api\handlers\alt_fear_greed.py:28:5: F811 redefinition of unused 'aiohttp' from line 8
core\api\handlers\alt_fear_greed.py:37:5: F811 redefinition of unused 'requests' from line 9
core\api\handlers\alt_fear_greed.py:50:1: D101 Missing docstring in public class
core\api\handlers\alt_fear_greed.py:58:26: ANN101 Missing type annotation for self in method
core\api\handlers\alt_fear_greed.py:58:47: ANN401 Dynamically typed expressions (typing.Any) are disallowed
core\api\handlers\alt_fear_greed.py:59:1: D202 No blank lines allowed after function docstring
core\api\handlers\alt_fear_greed.py:83:26: ANN101 Missing type annotation for self in method
core\api\handlers\alt_fear_greed.py:83:32: ANN401 Dynamically typed expressions (typing.Any) are disallowed
core\api\handlers\alt_fear_greed.py:84:1: D202 No blank lines allowed after function docstring
core\api\handlers\base_handler.py:1:1: D100 Missing docstring in public module
core\api\handlers\base_handler.py:13:1: E265 block comment should start with '# '
core\api\handlers\base_handler.py:35:5: F811 redefinition of unused 'aiohttp' from line 11
core\api\handlers\base_handler.py:61:1: D107 Missing docstring in __init__
core\api\handlers\base_handler.py:61:18: ANN101 Missing type annotation for self in method
core\api\handlers\base_handler.py:61:49: B008 Do not perform function calls in argument defaults.  The call is performed only once at function definition time. All calls to your function will reuse the result of that definition-time function call.  If this is intended, assign the function call to a module-level variable and use that variable as a default value.
core\api\handlers\base_handler.py:71:24: ANN101 Missing type annotation for self in method
core\api\handlers\base_handler.py:72:1: D202 No blank lines allowed after function docstring
core\api\handlers\base_handler.py:101:26: ANN101 Missing type annotation for self in method
core\api\handlers\base_handler.py:101:49: ANN401 Dynamically typed expressions (typing.Any) are disallowed
core\api\handlers\base_handler.py:102:1: D202 No blank lines allowed after function docstring
core\api\handlers\base_handler.py:106:26: ANN101 Missing type annotation for self in method
core\api\handlers\base_handler.py:106:32: ANN401 Dynamically typed expressions (typing.Any) are disallowed
core\api\handlers\base_handler.py:107:1: D202 No blank lines allowed after function docstring
core\api\handlers\base_handler.py:107:1: D205 1 blank line required between summary line and description
core\api\handlers\base_handler.py:122:21: ANN101 Missing type annotation for self in method
core\api\handlers\base_handler.py:126:28: ANN101 Missing type annotation for self in method
core\api\handlers\base_handler.py:140:27: ANN101 Missing type annotation for self in method
core\api\handlers\base_handler.py:158:28: ANN101 Missing type annotation for self in method
core\api\handlers\base_handler.py:172:1: D102 Missing docstring in public method
core\api\handlers\base_handler.py:172:21: ANN101 Missing type annotation for self in method
core\api\handlers\coingecko.py:1:1: D205 1 blank line required between summary line and description
core\api\handlers\coingecko.py:1:1: D400 First line should end with a period
core\api\handlers\coingecko.py:17:1: I201 Missing newline between import groups. 'import requests' is identified as Third Party and 'import aiohttp' is identified as Third Party.
core\api\handlers\coingecko.py:23:5: F811 redefinition of unused 'aiohttp' from line 16
core\api\handlers\coingecko.py:32:5: F811 redefinition of unused 'requests' from line 17
core\api\handlers\coingecko.py:56:18: ANN101 Missing type annotation for self in method
core\api\handlers\coingecko.py:57:1: D202 No blank lines allowed after function docstring
core\api\handlers\coingecko.py:82:26: ANN101 Missing type annotation for self in method
core\api\handlers\coingecko.py:82:38: ANN401 Dynamically typed expressions (typing.Any) are disallowed
core\api\handlers\coingecko.py:83:1: D202 No blank lines allowed after function docstring
core\api\handlers\coingecko.py:129:34: ANN101 Missing type annotation for self in method
core\api\handlers\coingecko.py:130:1: D202 No blank lines allowed after function docstring
core\api\handlers\coingecko.py:163:33: ANN101 Missing type annotation for self in method
core\api\handlers\coingecko.py:164:1: D202 No blank lines allowed after function docstring
core\api\handlers\coingecko.py:217:36: ANN101 Missing type annotation for self in method
core\api\handlers\coingecko.py:218:1: D202 No blank lines allowed after function docstring
core\api\handlers\coingecko.py:253:37: ANN101 Missing type annotation for self in method
core\api\handlers\coingecko.py:254:1: D202 No blank lines allowed after function docstring
core\api\handlers\coingecko.py:302:26: ANN101 Missing type annotation for self in method
core\api\handlers\coingecko.py:302:32: ANN401 Dynamically typed expressions (typing.Any) are disallowed
core\api\handlers\coingecko.py:303:1: D202 No blank lines allowed after function docstring
core\api\handlers\coingecko.py:400:37: ANN101 Missing type annotation for self in method
core\api\handlers\coingecko.py:401:1: D202 No blank lines allowed after function docstring
core\api\handlers\coingecko.py:401:1: D401 First line should be in imperative mood
core\api\handlers\coingecko.py:450:1: D103 Missing docstring in public function
core\api\handlers\coingecko.py:451:0: ANN201 Missing return type annotation for public function
core\api\handlers\coingecko.py:458:25: F821 undefined name 'json'
core\api\handlers\glassnode.py:1:1: D100 Missing docstring in public module
core\api\handlers\glassnode.py:9:1: I201 Missing newline between import groups. 'import requests' is identified as Third Party and 'import aiohttp' is identified as Third Party.
core\api\handlers\glassnode.py:26:5: F811 redefinition of unused 'aiohttp' from line 8
core\api\handlers\glassnode.py:35:5: F811 redefinition of unused 'requests' from line 9
core\api\handlers\glassnode.py:59:18: ANN101 Missing type annotation for self in method
core\api\handlers\glassnode.py:59:77: ANN204 Missing return type annotation for special method
core\api\handlers\glassnode.py:60:1: D202 No blank lines allowed after function docstring
core\api\handlers\glassnode.py:60:1: D401 First line should be in imperative mood
core\api\handlers\glassnode.py:83:26: ANN101 Missing type annotation for self in method
core\api\handlers\glassnode.py:83:38: ANN401 Dynamically typed expressions (typing.Any) are disallowed
core\api\handlers\glassnode.py:84:1: D202 No blank lines allowed after function docstring
core\api\handlers\glassnode.py:132:60: B023 Function definition does not bind loop variable 'metric'.
core\api\handlers\glassnode.py:132:77: B023 Function definition does not bind loop variable 'params'.
core\api\handlers\glassnode.py:171:26: ANN101 Missing type annotation for self in method
core\api\handlers\glassnode.py:171:32: ANN401 Dynamically typed expressions (typing.Any) are disallowed
core\api\handlers\glassnode.py:172:1: D202 No blank lines allowed after function docstring
core\api\handlers\glassnode.py:271:37: ANN101 Missing type annotation for self in method
core\api\handlers\glassnode.py:272:1: D202 No blank lines allowed after function docstring
core\api\handlers\glassnode.py:379:1: D103 Missing docstring in public function
core\api\handlers\glassnode.py:380:0: ANN201 Missing return type annotation for public function
core\api\handlers\glassnode.py:387:25: F821 undefined name 'json'
core\api\handlers\whale_alert.py:5:1: D205 1 blank line required between summary line and description
core\api\handlers\whale_alert.py:5:1: D400 First line should end with a period
core\api\handlers\whale_alert.py:21:1: I201 Missing newline between import groups. 'import requests' is identified as Third Party and 'import aiohttp' is identified as Third Party.
core\api\handlers\whale_alert.py:27:5: F811 redefinition of unused 'aiohttp' from line 20
core\api\handlers\whale_alert.py:36:5: F811 redefinition of unused 'requests' from line 21
core\api\handlers\whale_alert.py:60:18: ANN101 Missing type annotation for self in method
core\api\handlers\whale_alert.py:61:1: D202 No blank lines allowed after function docstring
core\api\handlers\whale_alert.py:69:26: ANN101 Missing type annotation for self in method
core\api\handlers\whale_alert.py:69:38: ANN401 Dynamically typed expressions (typing.Any) are disallowed
core\api\handlers\whale_alert.py:70:1: D202 No blank lines allowed after function docstring
core\api\handlers\whale_alert.py:116:26: ANN101 Missing type annotation for self in method
core\api\handlers\whale_alert.py:116:32: ANN401 Dynamically typed expressions (typing.Any) are disallowed
core\api\handlers\whale_alert.py:117:1: D202 No blank lines allowed after function docstring
core\api\handlers\whale_alert.py:199:34: ANN101 Missing type annotation for self in method
core\api\handlers\whale_alert.py:200:1: D202 No blank lines allowed after function docstring
core\api\integration_manager.py:1:1: D100 Missing docstring in public module
core\api\integration_manager.py:30:1: D107 Missing docstring in __init__
core\api\integration_manager.py:30:18: ANN101 Missing type annotation for self in method
core\api\integration_manager.py:31:0: ANN204 Missing return type annotation for special method
core\api\integration_manager.py:58:28: ANN101 Missing type annotation for self in method
core\api\integration_manager.py:59:1: D202 No blank lines allowed after function docstring
core\api\integration_manager.py:68:101: E501 line too long (101 > 100 characters)
core\api\integration_manager.py:106:21: ANN101 Missing type annotation for self in method
core\api\integration_manager.py:107:1: D202 No blank lines allowed after function docstring
core\api\integration_manager.py:129:20: ANN101 Missing type annotation for self in method
core\api\integration_manager.py:130:1: D202 No blank lines allowed after function docstring
core\api\integration_manager.py:160:38: ANN101 Missing type annotation for self in method
core\api\integration_manager.py:161:1: D202 No blank lines allowed after function docstring
core\api\integration_manager.py:167:26: ANN101 Missing type annotation for self in method
core\api\integration_manager.py:168:1: D202 No blank lines allowed after function docstring
core\api\integration_manager.py:190:32: ANN101 Missing type annotation for self in method
core\api\integration_manager.py:191:1: D202 No blank lines allowed after function docstring
core\api\integration_manager.py:218:38: ANN101 Missing type annotation for self in method
core\api\integration_manager.py:226:9: ANN101 Missing type annotation for self in method
core\api\integration_manager.py:228:1: D202 No blank lines allowed after function docstring
core\api\integration_manager.py:240:31: ANN101 Missing type annotation for self in method
core\api\integration_manager.py:241:1: D202 No blank lines allowed after function docstring
core\api\integration_manager.py:253:27: ANN101 Missing type annotation for self in method
core\api\integration_manager.py:254:1: D202 No blank lines allowed after function docstring
core\basket_vector_linker.py:1:1: D205 1 blank line required between summary line and description
core\basket_vector_linker.py:1:1: D301 Use r""" if any backslashes in a docstring
core\basket_vector_linker.py:1:1: D400 First line should end with a period
core\basket_vector_linker.py:67:101: E501 line too long (144 > 100 characters)
core\basket_vector_linker.py:75:101: E501 line too long (136 > 100 characters)
core\basket_vector_linker.py:81:101: E501 line too long (131 > 100 characters)
core\basket_vector_linker.py:87:101: E501 line too long (208 > 100 characters)
core\basket_vector_linker.py:193:101: E501 line too long (101 > 100 characters)
core\basket_vector_linker.py:215:101: E501 line too long (152 > 100 characters)
core\biological_immune_error_handler.py:1:1: D205 1 blank line required between summary line and description
core\biological_immune_error_handler.py:1:1: D301 Use r""" if any backslashes in a docstring
core\biological_immune_error_handler.py:1:1: D400 First line should end with a period
core\biological_immune_error_handler.py:123:101: E501 line too long (107 > 100 characters)
core\biological_immune_error_handler.py:129:101: E501 line too long (122 > 100 characters)
core\biological_immune_error_handler.py:157:101: E501 line too long (119 > 100 characters)
core\biological_immune_error_handler.py:185:101: E501 line too long (108 > 100 characters)
core\biological_immune_error_handler.py:245:101: E501 line too long (115 > 100 characters)
core\biological_immune_error_handler.py:251:101: E501 line too long (119 > 100 characters)
core\biological_immune_error_handler.py:313:101: E501 line too long (144 > 100 characters)
core\biological_immune_error_handler.py:333:101: E501 line too long (161 > 100 characters)
core\biological_immune_error_handler.py:345:101: E501 line too long (121 > 100 characters)
core\biological_immune_error_handler.py:351:101: E501 line too long (113 > 100 characters)
core\biological_immune_error_handler.py:439:101: E501 line too long (151 > 100 characters)
core\biological_immune_error_handler.py:453:101: E501 line too long (110 > 100 characters)
core\biological_immune_error_handler.py:567:101: E501 line too long (123 > 100 characters)
core\biological_immune_error_handler.py:579:101: E501 line too long (111 > 100 characters)
core\biological_immune_error_handler.py:587:101: E501 line too long (147 > 100 characters)
core\biological_immune_error_handler.py:651:101: E501 line too long (200 > 100 characters)
core\biological_immune_error_handler.py:659:101: E501 line too long (177 > 100 characters)
core\biological_immune_error_handler.py:749:101: E501 line too long (114 > 100 characters)
core\biological_immune_error_handler.py:761:101: E501 line too long (109 > 100 characters)
core\biological_immune_error_handler.py:779:101: E501 line too long (133 > 100 characters)
core\biological_immune_error_handler.py:783:101: E501 line too long (134 > 100 characters)
core\biological_immune_error_handler.py:787:101: E501 line too long (135 > 100 characters)
core\biological_immune_error_handler.py:791:101: E501 line too long (137 > 100 characters)
core\biological_immune_error_handler.py:805:101: E501 line too long (153 > 100 characters)
core\biological_immune_error_handler.py:873:101: E501 line too long (256 > 100 characters)
core\biological_immune_error_handler.py:879:101: E501 line too long (143 > 100 characters)
core\biological_immune_error_handler.py:943:101: E501 line too long (103 > 100 characters)
core\biological_immune_error_handler.py:1089:101: E501 line too long (102 > 100 characters)
core\biological_immune_error_handler.py:1131:101: E501 line too long (132 > 100 characters)
core\biological_immune_error_handler.py:1181:101: E501 line too long (203 > 100 characters)
core\biological_immune_error_handler.py:1219:101: E501 line too long (226 > 100 characters)
core\biological_immune_error_handler.py:1221:101: E501 line too long (125 > 100 characters)
core\biological_immune_error_handler.py:1245:101: E501 line too long (159 > 100 characters)
core\biological_immune_error_handler.py:1247:101: E501 line too long (120 > 100 characters)
core\biological_immune_error_handler.py:1253:101: E501 line too long (213 > 100 characters)
core\biological_immune_error_handler.py:1265:101: E501 line too long (133 > 100 characters)
core\biological_immune_error_handler.py:1275:101: E501 line too long (132 > 100 characters)
core\biological_immune_error_handler.py:1353:101: E501 line too long (157 > 100 characters)
core\biological_immune_error_handler.py:1369:101: E501 line too long (169 > 100 characters)
core\biological_immune_error_handler.py:1377:101: E501 line too long (267 > 100 characters)
core\biological_immune_error_handler.py:1381:101: E501 line too long (263 > 100 characters)
core\biological_immune_error_handler.py:1395:101: E501 line too long (303 > 100 characters)
core\biological_immune_error_handler.py:1397:101: E501 line too long (247 > 100 characters)
core\biological_immune_error_handler.py:1399:101: E501 line too long (185 > 100 characters)
core\biological_immune_error_handler.py:1417:101: E501 line too long (113 > 100 characters)
core\biological_immune_error_handler.py:1427:101: E501 line too long (115 > 100 characters)
core\biological_immune_error_handler.py:1445:101: E501 line too long (101 > 100 characters)
core\biological_immune_error_handler.py:1493:101: E501 line too long (145 > 100 characters)
core\biological_immune_error_handler.py:1513:101: E501 line too long (116 > 100 characters)
core\biological_immune_error_handler.py:1523:101: E501 line too long (112 > 100 characters)
core\biological_immune_error_handler.py:1667:101: E501 line too long (103 > 100 characters)
core\brain_trading_engine.py:1:1: D205 1 blank line required between summary line and description
core\brain_trading_engine.py:1:1: D301 Use r""" if any backslashes in a docstring
core\brain_trading_engine.py:1:1: D400 First line should end with a period
core\brain_trading_engine.py:341:101: E501 line too long (132 > 100 characters)
core\brain_trading_engine.py:651:101: E501 line too long (103 > 100 characters)
core\brain_trading_engine.py:669:101: E501 line too long (114 > 100 characters)
core\brain_trading_engine.py:699:101: E501 line too long (297 > 100 characters)
core\brain_trading_engine.py:707:101: E501 line too long (185 > 100 characters)
core\brain_trading_engine.py:713:101: E501 line too long (441 > 100 characters)
core\brain_trading_engine.py:717:101: E501 line too long (379 > 100 characters)
core\brain_trading_engine.py:751:101: E501 line too long (119 > 100 characters)
core\brain_trading_engine.py:757:101: E501 line too long (104 > 100 characters)
core\brain_trading_engine.py:823:101: E501 line too long (233 > 100 characters)
core\brain_trading_engine.py:829:101: E501 line too long (112 > 100 characters)
core\brain_trading_engine.py:849:101: E501 line too long (168 > 100 characters)
core\brain_trading_engine.py:857:101: E501 line too long (225 > 100 characters)
core\ccxt_integration.py:1:1: D205 1 blank line required between summary line and description
core\ccxt_integration.py:1:1: D301 Use r""" if any backslashes in a docstring
core\ccxt_integration.py:1:1: D400 First line should end with a period
core\ccxt_integration.py:63:101: E501 line too long (105 > 100 characters)
core\ccxt_integration.py:199:101: E501 line too long (101 > 100 characters)
core\ccxt_integration.py:239:101: E501 line too long (120 > 100 characters)
core\ccxt_integration.py:253:101: E501 line too long (102 > 100 characters)
core\ccxt_integration.py:381:101: E501 line too long (163 > 100 characters)
core\ccxt_integration.py:659:101: E501 line too long (113 > 100 characters)
core\ccxt_trading_executor.py:1:1: D205 1 blank line required between summary line and description
core\ccxt_trading_executor.py:61:23: ANN101 Missing type annotation for self in method
core\ccxt_trading_executor.py:61:28: ANN204 Missing return type annotation for special method
core\ccxt_trading_executor.py:62:1: D202 No blank lines allowed after function docstring
core\ccxt_trading_executor.py:91:23: ANN101 Missing type annotation for self in method
core\ccxt_trading_executor.py:91:28: ANN204 Missing return type annotation for special method
core\ccxt_trading_executor.py:92:1: D202 No blank lines allowed after function docstring
core\ccxt_trading_executor.py:102:18: ANN101 Missing type annotation for self in method
core\ccxt_trading_executor.py:102:47: ANN204 Missing return type annotation for special method
core\ccxt_trading_executor.py:103:1: D202 No blank lines allowed after function docstring
core\ccxt_trading_executor.py:121:32: ANN101 Missing type annotation for self in method
core\ccxt_trading_executor.py:121:37: ANN201 Missing return type annotation for public function
core\ccxt_trading_executor.py:122:1: D202 No blank lines allowed after function docstring
core\ccxt_trading_executor.py:128:31: ANN101 Missing type annotation for self in method
core\ccxt_trading_executor.py:128:36: ANN201 Missing return type annotation for public function
core\ccxt_trading_executor.py:129:1: D202 No blank lines allowed after function docstring
core\ccxt_trading_executor.py:135:30: ANN101 Missing type annotation for self in method
core\ccxt_trading_executor.py:136:1: D202 No blank lines allowed after function docstring
core\ccxt_trading_executor.py:172:28: ANN101 Missing type annotation for self in method
core\ccxt_trading_executor.py:173:1: D202 No blank lines allowed after function docstring
core\ccxt_trading_executor.py:225:29: ANN101 Missing type annotation for self in method
core\ccxt_trading_executor.py:226:1: D202 No blank lines allowed after function docstring
core\chrono_resonance_weather_mapper.py:1:1: D205 1 blank line required between summary line and description
core\chrono_resonance_weather_mapper.py:1:1: D301 Use r""" if any backslashes in a docstring
core\chrono_resonance_weather_mapper.py:1:1: D400 First line should end with a period
core\chrono_resonance_weather_mapper.py:87:101: E501 line too long (155 > 100 characters)
core\chrono_resonance_weather_mapper.py:121:101: E501 line too long (509 > 100 characters)
core\chrono_resonance_weather_mapper.py:211:101: E501 line too long (162 > 100 characters)
core\chrono_resonance_weather_mapper.py:253:101: E501 line too long (361 > 100 characters)
core\chrono_resonance_weather_mapper.py:269:101: E501 line too long (465 > 100 characters)
core\chrono_resonance_weather_mapper.py:541:101: E501 line too long (151 > 100 characters)
core\chrono_resonance_weather_mapper.py:615:101: E501 line too long (153 > 100 characters)
core\chrono_resonance_weather_mapper.py:737:101: E501 line too long (101 > 100 characters)
core\chrono_resonance_weather_mapper.py:879:101: E501 line too long (103 > 100 characters)
core\chrono_resonance_weather_mapper.py:1075:101: E501 line too long (116 > 100 characters)
core\chrono_resonance_weather_mapper.py:1119:101: E501 line too long (126 > 100 characters)
core\chrono_resonance_weather_mapper.py:1253:101: E501 line too long (237 > 100 characters)
core\chrono_resonance_weather_mapper.py:1255:101: E501 line too long (187 > 100 characters)
core\chrono_resonance_weather_mapper.py:1343:101: E501 line too long (187 > 100 characters)
core\chrono_resonance_weather_mapper.py:1349:101: E501 line too long (148 > 100 characters)
core\chrono_resonance_weather_mapper.py:1363:101: E501 line too long (160 > 100 characters)
core\chrono_resonance_weather_mapper.py:1383:101: E501 line too long (105 > 100 characters)
core\chrono_resonance_weather_mapper.py:1391:101: E501 line too long (150 > 100 characters)
core\chrono_resonance_weather_mapper.py:1407:101: E501 line too long (105 > 100 characters)
core\chrono_resonance_weather_mapper.py:1431:101: E501 line too long (139 > 100 characters)
core\chrono_resonance_weather_mapper.py:1517:101: E501 line too long (187 > 100 characters)
core\chrono_resonance_weather_mapper.py:1547:101: E501 line too long (181 > 100 characters)
core\chrono_resonance_weather_mapper.py:1567:101: E501 line too long (229 > 100 characters)
core\chrono_resonance_weather_mapper.py:1605:101: E501 line too long (118 > 100 characters)
core\chrono_resonance_weather_mapper.py:1609:101: E501 line too long (400 > 100 characters)
core\chrono_resonance_weather_mapper.py:1615:101: E501 line too long (202 > 100 characters)
core\chrono_resonance_weather_mapper.py:1623:101: E501 line too long (217 > 100 characters)
core\chrono_resonance_weather_mapper.py:1763:101: E501 line too long (132 > 100 characters)
core\chrono_resonance_weather_mapper.py:1787:101: E501 line too long (125 > 100 characters)
core\chrono_resonance_weather_mapper.py:1799:101: E501 line too long (119 > 100 characters)
core\clean_math_foundation.py:3:1: D205 1 blank line required between summary line and description
core\clean_math_foundation.py:151:1: D205 1 blank line required between summary line and description
core\clean_math_foundation.py:163:18: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:163:95: ANN204 Missing return type annotation for special method
core\clean_math_foundation.py:164:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:190:27: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:190:60: ANN002 Missing type annotation for *args
core\clean_math_foundation.py:190:68: ANN003 Missing type annotation for **kwargs
core\clean_math_foundation.py:191:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:257:32: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:257:65: ANN002 Missing type annotation for *args
core\clean_math_foundation.py:257:73: ANN003 Missing type annotation for **kwargs
core\clean_math_foundation.py:257:87: ANN401 Dynamically typed expressions (typing.Any) are disallowed
core\clean_math_foundation.py:258:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:354:14: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:354:21: ANN002 Missing type annotation for *args
core\clean_math_foundation.py:355:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:375:19: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:375:25: ANN001 Missing type annotation for function argument 'a'
core\clean_math_foundation.py:375:28: ANN001 Missing type annotation for function argument 'b'
core\clean_math_foundation.py:376:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:384:19: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:384:26: ANN002 Missing type annotation for *args
core\clean_math_foundation.py:385:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:409:17: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:409:23: ANN001 Missing type annotation for function argument 'a'
core\clean_math_foundation.py:409:26: ANN001 Missing type annotation for function argument 'b'
core\clean_math_foundation.py:410:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:418:16: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:418:22: ANN001 Missing type annotation for function argument 'base'
core\clean_math_foundation.py:418:28: ANN001 Missing type annotation for function argument 'exponent'
core\clean_math_foundation.py:419:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:429:15: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:429:21: ANN001 Missing type annotation for function argument 'x'
core\clean_math_foundation.py:430:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:438:14: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:438:20: ANN001 Missing type annotation for function argument 'x'
core\clean_math_foundation.py:438:23: ANN001 Missing type annotation for function argument 'base'
core\clean_math_foundation.py:439:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:453:14: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:453:20: ANN001 Missing type annotation for function argument 'x'
core\clean_math_foundation.py:454:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:464:14: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:464:20: ANN001 Missing type annotation for function argument 'x'
core\clean_math_foundation.py:465:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:473:14: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:473:20: ANN001 Missing type annotation for function argument 'x'
core\clean_math_foundation.py:474:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:482:14: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:482:20: ANN001 Missing type annotation for function argument 'x'
core\clean_math_foundation.py:483:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:493:15: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:493:21: ANN001 Missing type annotation for function argument 'data'
core\clean_math_foundation.py:494:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:502:14: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:502:20: ANN001 Missing type annotation for function argument 'data'
core\clean_math_foundation.py:503:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:515:14: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:515:20: ANN001 Missing type annotation for function argument 'data'
core\clean_math_foundation.py:516:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:528:22: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:528:28: ANN001 Missing type annotation for function argument 'a'
core\clean_math_foundation.py:528:31: ANN001 Missing type annotation for function argument 'b'
core\clean_math_foundation.py:529:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:533:26: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:533:32: ANN001 Missing type annotation for function argument 'a'
core\clean_math_foundation.py:533:35: ANN001 Missing type annotation for function argument 'b'
core\clean_math_foundation.py:534:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:538:22: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:538:28: ANN001 Missing type annotation for function argument 'matrix'
core\clean_math_foundation.py:539:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:543:14: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:543:20: ANN001 Missing type annotation for function argument 'matrix'
core\clean_math_foundation.py:544:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:550:20: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:551:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:558:9: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:560:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:576:9: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:578:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:583:9: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:585:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:600:29: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:601:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:609:1: S324 Use of weak MD5 hash for security. Consider usedforsecurity=False
core\clean_math_foundation.py:611:27: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:612:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:622:23: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:623:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:633:21: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:634:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:648:21: ANN101 Missing type annotation for self in method
core\clean_math_foundation.py:649:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:662:1: D202 No blank lines allowed after function docstring
core\clean_math_foundation.py:667:50: ANN002 Missing type annotation for *args
core\clean_math_foundation.py:667:58: ANN003 Missing type annotation for **kwargs
core\clean_math_foundation.py:667:72: ANN401 Dynamically typed expressions (typing.Any) are disallowed
core\clean_math_foundation.py:668:1: D202 No blank lines allowed after function docstring
core\clean_profit_vectorization.py:3:1: D205 1 blank line required between summary line and description
core\clean_profit_vectorization.py:170:1: D205 1 blank line required between summary line and description
core\clean_profit_vectorization.py:183:9: ANN101 Missing type annotation for self in method
core\clean_profit_vectorization.py:186:6: ANN204 Missing return type annotation for special method
core\clean_profit_vectorization.py:187:1: D202 No blank lines allowed after function docstring
core\clean_profit_vectorization.py:243:9: ANN101 Missing type annotation for self in method
core\clean_profit_vectorization.py:249:1: D202 No blank lines allowed after function docstring
core\clean_profit_vectorization.py:249:1: D205 1 blank line required between summary line and description
core\clean_profit_vectorization.py:249:1: D412 No blank lines allowed between a section header and its content
core\clean_profit_vectorization.py:340:9: ANN101 Missing type annotation for self in method
core\clean_profit_vectorization.py:342:1: D202 No blank lines allowed after function docstring
core\clean_profit_vectorization.py:342:1: D401 First line should be in imperative mood; try rephrasing
core\clean_profit_vectorization.py:360:9: ANN101 Missing type annotation for self in method
core\clean_profit_vectorization.py:362:1: D202 No blank lines allowed after function docstring
core\clean_profit_vectorization.py:407:9: ANN101 Missing type annotation for self in method
core\clean_profit_vectorization.py:409:1: D202 No blank lines allowed after function docstring
core\clean_profit_vectorization.py:480:9: ANN101 Missing type annotation for self in method
core\clean_profit_vectorization.py:482:1: D202 No blank lines allowed after function docstring
core\clean_profit_vectorization.py:545:9: ANN101 Missing type annotation for self in method
core\clean_profit_vectorization.py:547:1: D202 No blank lines allowed after function docstring
core\clean_profit_vectorization.py:612:9: ANN101 Missing type annotation for self in method
core\clean_profit_vectorization.py:614:1: D202 No blank lines allowed after function docstring
core\clean_profit_vectorization.py:686:9: ANN101 Missing type annotation for self in method
core\clean_profit_vectorization.py:688:1: D202 No blank lines allowed after function docstring
core\clean_profit_vectorization.py:745:9: ANN101 Missing type annotation for self in method
core\clean_profit_vectorization.py:747:1: D202 No blank lines allowed after function docstring
core\clean_profit_vectorization.py:817:9: ANN101 Missing type annotation for self in method
core\clean_profit_vectorization.py:819:1: D202 No blank lines allowed after function docstring
core\clean_profit_vectorization.py:829:38: ANN101 Missing type annotation for self in method
core\clean_profit_vectorization.py:830:1: D202 No blank lines allowed after function docstring
core\clean_profit_vectorization.py:853:9: ANN101 Missing type annotation for self in method
core\clean_profit_vectorization.py:855:1: D202 No blank lines allowed after function docstring
core\clean_profit_vectorization.py:877:37: ANN101 Missing type annotation for self in method
core\clean_profit_vectorization.py:878:1: D202 No blank lines allowed after function docstring
core\clean_profit_vectorization.py:896:33: ANN101 Missing type annotation for self in method
core\clean_profit_vectorization.py:897:1: D202 No blank lines allowed after function docstring
core\clean_profit_vectorization.py:914:1: D202 No blank lines allowed after function docstring
core\clean_trading_pipeline.py:3:1: D205 1 blank line required between summary line and description
core\clean_trading_pipeline.py:175:1: D205 1 blank line required between summary line and description
core\clean_trading_pipeline.py:196:9: ANN101 Missing type annotation for self in method
core\clean_trading_pipeline.py:201:6: ANN204 Missing return type annotation for special method
core\clean_trading_pipeline.py:202:1: D202 No blank lines allowed after function docstring
core\clean_trading_pipeline.py:257:35: ANN101 Missing type annotation for self in method
core\clean_trading_pipeline.py:258:1: D202 No blank lines allowed after function docstring
core\clean_trading_pipeline.py:258:1: D205 1 blank line required between summary line and description
core\clean_trading_pipeline.py:258:1: D412 No blank lines allowed between a section header and its content
core\clean_trading_pipeline.py:372:32: ANN101 Missing type annotation for self in method
core\clean_trading_pipeline.py:373:1: D202 No blank lines allowed after function docstring
core\clean_trading_pipeline.py:430:9: ANN101 Missing type annotation for self in method
core\clean_trading_pipeline.py:432:1: D202 No blank lines allowed after function docstring
core\clean_trading_pipeline.py:464:41: ANN101 Missing type annotation for self in method
core\clean_trading_pipeline.py:465:1: D202 No blank lines allowed after function docstring
core\clean_trading_pipeline.py:521:36: ANN101 Missing type annotation for self in method
core\clean_trading_pipeline.py:522:1: D202 No blank lines allowed after function docstring
core\clean_trading_pipeline.py:535:9: ANN101 Missing type annotation for self in method
core\clean_trading_pipeline.py:537:1: D202 No blank lines allowed after function docstring
core\clean_trading_pipeline.py:578:9: ANN101 Missing type annotation for self in method
core\clean_trading_pipeline.py:580:1: D202 No blank lines allowed after function docstring
core\clean_trading_pipeline.py:632:9: ANN101 Missing type annotation for self in method
core\clean_trading_pipeline.py:634:1: D202 No blank lines allowed after function docstring
core\clean_trading_pipeline.py:680:9: ANN101 Missing type annotation for self in method
core\clean_trading_pipeline.py:682:1: D202 No blank lines allowed after function docstring
core\clean_trading_pipeline.py:712:9: ANN101 Missing type annotation for self in method
core\clean_trading_pipeline.py:714:1: D202 No blank lines allowed after function docstring
core\clean_trading_pipeline.py:757:23: ANN101 Missing type annotation for self in method
core\clean_trading_pipeline.py:758:1: D202 No blank lines allowed after function docstring
core\clean_trading_pipeline.py:811:22: ANN101 Missing type annotation for self in method
core\clean_trading_pipeline.py:812:1: D202 No blank lines allowed after function docstring
core\clean_trading_pipeline.py:848:9: ANN101 Missing type annotation for self in method
core\clean_trading_pipeline.py:850:1: D202 No blank lines allowed after function docstring
core\clean_trading_pipeline.py:850:1: D401 First line should be in imperative mood; try rephrasing
core\clean_trading_pipeline.py:878:9: ANN101 Missing type annotation for self in method
core\clean_trading_pipeline.py:880:1: D202 No blank lines allowed after function docstring
core\clean_trading_pipeline.py:938:31: ANN101 Missing type annotation for self in method
core\clean_trading_pipeline.py:939:1: D202 No blank lines allowed after function docstring
core\clean_trading_pipeline.py:984:30: ANN101 Missing type annotation for self in method
core\clean_trading_pipeline.py:985:1: D202 No blank lines allowed after function docstring
core\clean_trading_pipeline.py:1005:30: ANN101 Missing type annotation for self in method
core\clean_trading_pipeline.py:1006:1: D202 No blank lines allowed after function docstring
core\clean_trading_pipeline.py:1019:34: ANN101 Missing type annotation for self in method
core\clean_trading_pipeline.py:1020:1: D202 No blank lines allowed after function docstring
core\clean_trading_pipeline.py:1044:30: ANN101 Missing type annotation for self in method
core\clean_trading_pipeline.py:1045:1: D202 No blank lines allowed after function docstring
core\clean_trading_pipeline.py:1088:1: D202 No blank lines allowed after function docstring
core\clean_trading_pipeline.py:1100:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:44:18: ANN101 Missing type annotation for self in method
core\clean_unified_math.py:44:23: ANN204 Missing return type annotation for special method
core\clean_unified_math.py:45:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:51:18: ANN101 Missing type annotation for self in method
core\clean_unified_math.py:52:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:68:13: ANN101 Missing type annotation for self in method
core\clean_unified_math.py:69:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:85:18: ANN101 Missing type annotation for self in method
core\clean_unified_math.py:86:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:102:16: ANN101 Missing type annotation for self in method
core\clean_unified_math.py:103:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:125:15: ANN101 Missing type annotation for self in method
core\clean_unified_math.py:126:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:142:14: ANN101 Missing type annotation for self in method
core\clean_unified_math.py:143:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:165:13: ANN101 Missing type annotation for self in method
core\clean_unified_math.py:166:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:182:13: ANN101 Missing type annotation for self in method
core\clean_unified_math.py:183:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:199:13: ANN101 Missing type annotation for self in method
core\clean_unified_math.py:200:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:216:13: ANN101 Missing type annotation for self in method
core\clean_unified_math.py:217:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:239:13: ANN101 Missing type annotation for self in method
core\clean_unified_math.py:240:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:256:13: ANN101 Missing type annotation for self in method
core\clean_unified_math.py:256:20: ANN002 Missing type annotation for *values
core\clean_unified_math.py:257:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:277:13: ANN101 Missing type annotation for self in method
core\clean_unified_math.py:277:20: ANN002 Missing type annotation for *values
core\clean_unified_math.py:278:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:298:14: ANN101 Missing type annotation for self in method
core\clean_unified_math.py:299:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:320:9: ANN101 Missing type annotation for self in method
core\clean_unified_math.py:322:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:361:9: ANN101 Missing type annotation for self in method
core\clean_unified_math.py:363:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:391:36: ANN101 Missing type annotation for self in method
core\clean_unified_math.py:392:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:420:32: ANN101 Missing type annotation for self in method
core\clean_unified_math.py:421:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:471:31: ANN101 Missing type annotation for self in method
core\clean_unified_math.py:472:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:472:1: D401 First line should be in imperative mood; try rephrasing
core\clean_unified_math.py:530:26: ANN101 Missing type annotation for self in method
core\clean_unified_math.py:530:48: ANN401 Dynamically typed expressions (typing.Any) are disallowed
core\clean_unified_math.py:531:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:552:33: ANN101 Missing type annotation for self in method
core\clean_unified_math.py:553:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:557:21: ANN101 Missing type annotation for self in method
core\clean_unified_math.py:558:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:564:25: ANN101 Missing type annotation for self in method
core\clean_unified_math.py:565:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:573:33: ANN101 Missing type annotation for self in method
core\clean_unified_math.py:574:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:620:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:620:1: D205 1 blank line required between summary line and description
core\clean_unified_math.py:620:1: D412 No blank lines allowed between a section header and its content
core\clean_unified_math.py:676:1: D202 No blank lines allowed after function docstring
core\clean_unified_math.py:676:1: D205 1 blank line required between summary line and description
core\clean_unified_math.py:676:1: D412 No blank lines allowed between a section header and its content
core\clean_unified_math.py:723:37: ANN201 Missing return type annotation for public function
core\clean_unified_math.py:724:1: D202 No blank lines allowed after function docstring
core\comprehensive_integration_system.py:1:1: D205 1 blank line required between summary line and description
core\comprehensive_integration_system.py:1:1: D301 Use r""" if any backslashes in a docstring
core\comprehensive_integration_system.py:1:1: D400 First line should end with a period
core\comprehensive_integration_system.py:165:101: E501 line too long (110 > 100 characters)
core\comprehensive_integration_system.py:301:101: E501 line too long (104 > 100 characters)
core\comprehensive_integration_system.py:347:101: E501 line too long (107 > 100 characters)
core\comprehensive_integration_system.py:363:101: E501 line too long (169 > 100 characters)
core\comprehensive_integration_system.py:449:101: E501 line too long (209 > 100 characters)
core\comprehensive_integration_system.py:503:101: E501 line too long (593 > 100 characters)
core\comprehensive_integration_system.py:511:101: E501 line too long (124 > 100 characters)
core\comprehensive_integration_system.py:621:101: E501 line too long (177 > 100 characters)
core\comprehensive_integration_system.py:643:101: E501 line too long (114 > 100 characters)
core\comprehensive_integration_system.py:665:101: E501 line too long (129 > 100 characters)
core\comprehensive_integration_system.py:669:101: E501 line too long (234 > 100 characters)
core\comprehensive_integration_system.py:675:101: E501 line too long (273 > 100 characters)
core\comprehensive_integration_system.py:707:101: E501 line too long (131 > 100 characters)
core\comprehensive_integration_system.py:801:101: E501 line too long (142 > 100 characters)
core\comprehensive_integration_system.py:973:101: E501 line too long (105 > 100 characters)
core\comprehensive_integration_system.py:1173:101: E501 line too long (219 > 100 characters)
core\comprehensive_integration_system.py:1241:101: E501 line too long (165 > 100 characters)
core\comprehensive_integration_system.py:1289:101: E501 line too long (170 > 100 characters)
core\comprehensive_integration_system.py:1307:101: E501 line too long (151 > 100 characters)
core\comprehensive_integration_system.py:1327:101: E501 line too long (120 > 100 characters)
core\comprehensive_integration_system.py:1369:101: E501 line too long (176 > 100 characters)
core\comprehensive_integration_system.py:1371:101: E501 line too long (188 > 100 characters)
core\comprehensive_integration_system.py:1385:101: E501 line too long (190 > 100 characters)
core\comprehensive_integration_system.py:1391:101: E501 line too long (590 > 100 characters)
core\comprehensive_integration_system.py:1451:101: E501 line too long (186 > 100 characters)
core\comprehensive_integration_system.py:1453:101: E501 line too long (135 > 100 characters)
core\comprehensive_integration_system.py:1481:101: E501 line too long (111 > 100 characters)
core\comprehensive_integration_system.py:1569:101: E501 line too long (122 > 100 characters)
core\correction_overlay_matrix.py:1:1: D205 1 blank line required between summary line and description
core\correction_overlay_matrix.py:1:1: D301 Use r""" if any backslashes in a docstring
core\correction_overlay_matrix.py:1:1: D400 First line should end with a period
core\correction_overlay_matrix.py:77:101: E501 line too long (161 > 100 characters)
core\correction_overlay_matrix.py:145:101: E501 line too long (584 > 100 characters)
core\correction_overlay_matrix.py:189:101: E501 line too long (163 > 100 characters)
core\correction_overlay_matrix.py:195:101: E501 line too long (108 > 100 characters)
core\correction_overlay_matrix.py:203:101: E501 line too long (187 > 100 characters)
core\correction_overlay_matrix.py:221:101: E501 line too long (126 > 100 characters)
core\correction_overlay_matrix.py:261:101: E501 line too long (196 > 100 characters)
core\correction_overlay_matrix.py:289:101: E501 line too long (108 > 100 characters)
core\correction_overlay_matrix.py:315:101: E501 line too long (138 > 100 characters)
core\correction_overlay_matrix.py:403:101: E501 line too long (151 > 100 characters)
core\correction_overlay_matrix.py:465:101: E501 line too long (155 > 100 characters)
core\correction_overlay_matrix.py:491:101: E501 line too long (106 > 100 characters)
core\correction_overlay_matrix.py:529:101: E501 line too long (155 > 100 characters)
core\correction_overlay_matrix.py:601:101: E501 line too long (104 > 100 characters)
core\correction_overlay_matrix.py:677:101: E501 line too long (114 > 100 characters)
core\correction_overlay_matrix.py:731:101: E501 line too long (143 > 100 characters)
core\correction_overlay_matrix.py:751:101: E501 line too long (102 > 100 characters)
core\correction_overlay_matrix.py:821:101: E501 line too long (127 > 100 characters)
core\correction_overlay_matrix.py:971:101: E501 line too long (104 > 100 characters)
core\correction_overlay_matrix.py:1051:101: E501 line too long (126 > 100 characters)
core\correction_overlay_matrix.py:1121:101: E501 line too long (119 > 100 characters)
core\correction_overlay_matrix.py:1147:101: E501 line too long (220 > 100 characters)
core\correction_overlay_matrix.py:1157:101: E501 line too long (174 > 100 characters)
core\correction_overlay_matrix.py:1175:101: E501 line too long (176 > 100 characters)
core\correction_overlay_matrix.py:1185:101: E501 line too long (127 > 100 characters)
core\correction_overlay_matrix.py:1189:101: E501 line too long (121 > 100 characters)
core\correction_overlay_matrix.py:1193:101: E501 line too long (116 > 100 characters)
core\correction_overlay_matrix.py:1201:101: E501 line too long (107 > 100 characters)
core\correction_overlay_matrix.py:1215:101: E501 line too long (158 > 100 characters)
core\correction_overlay_matrix.py:1231:101: E501 line too long (104 > 100 characters)
core\correction_overlay_matrix.py:1333:101: E501 line too long (140 > 100 characters)
core\correction_overlay_matrix.py:1343:101: E501 line too long (119 > 100 characters)
core\correction_overlay_matrix.py:1379:101: E501 line too long (218 > 100 characters)
core\correction_overlay_matrix.py:1413:101: E501 line too long (309 > 100 characters)
core\data\historical_loader.py:1:1: D205 1 blank line required between summary line and description
core\data\historical_loader.py:1:1: D301 Use r""" if any backslashes in a docstring
core\data\historical_loader.py:1:1: D400 First line should end with a period
core\data\historical_loader.py:57:101: E501 line too long (148 > 100 characters)
core\data\historical_loader.py:103:101: E501 line too long (159 > 100 characters)
core\data_pipeline_visualizer.py:1:1: D205 1 blank line required between summary line and description
core\data_pipeline_visualizer.py:1:1: D301 Use r""" if any backslashes in a docstring
core\data_pipeline_visualizer.py:1:1: D400 First line should end with a period
core\data_pipeline_visualizer.py:85:101: E501 line too long (140 > 100 characters)
core\data_pipeline_visualizer.py:119:101: E501 line too long (420 > 100 characters)
core\data_pipeline_visualizer.py:193:101: E501 line too long (165 > 100 characters)
core\data_pipeline_visualizer.py:211:101: E501 line too long (258 > 100 characters)
core\data_pipeline_visualizer.py:251:101: E501 line too long (350 > 100 characters)
core\data_pipeline_visualizer.py:279:101: E501 line too long (142 > 100 characters)
core\data_pipeline_visualizer.py:287:101: E501 line too long (102 > 100 characters)
core\data_pipeline_visualizer.py:323:101: E501 line too long (115 > 100 characters)
core\data_pipeline_visualizer.py:341:101: E501 line too long (108 > 100 characters)
core\data_pipeline_visualizer.py:405:101: E501 line too long (123 > 100 characters)
core\data_pipeline_visualizer.py:563:101: E501 line too long (151 > 100 characters)
core\data_pipeline_visualizer.py:653:101: E501 line too long (147 > 100 characters)
core\data_pipeline_visualizer.py:669:101: E501 line too long (125 > 100 characters)
core\data_pipeline_visualizer.py:701:101: E501 line too long (102 > 100 characters)
core\data_pipeline_visualizer.py:951:101: E501 line too long (146 > 100 characters)
core\data_pipeline_visualizer.py:957:101: E501 line too long (185 > 100 characters)
core\data_pipeline_visualizer.py:979:101: E501 line too long (186 > 100 characters)
core\data_pipeline_visualizer.py:985:101: E501 line too long (131 > 100 characters)
core\data_pipeline_visualizer.py:1207:101: E501 line too long (256 > 100 characters)
core\data_pipeline_visualizer.py:1231:101: E501 line too long (107 > 100 characters)
core\data_pipeline_visualizer.py:1277:101: E501 line too long (125 > 100 characters)
core\data_pipeline_visualizer.py:1431:101: E501 line too long (172 > 100 characters)
core\data_pipeline_visualizer.py:1545:101: E501 line too long (114 > 100 characters)
core\data_pipeline_visualizer.py:1601:101: E501 line too long (107 > 100 characters)
core\data_pipeline_visualizer.py:1603:101: E501 line too long (411 > 100 characters)
core\data_pipeline_visualizer.py:1605:101: E501 line too long (296 > 100 characters)
core\data_pipeline_visualizer.py:1629:101: E501 line too long (219 > 100 characters)
core\data_pipeline_visualizer.py:1637:101: E501 line too long (132 > 100 characters)
core\drift_shell_engine.py:1:1: D205 1 blank line required between summary line and description
core\drift_shell_engine.py:1:1: D301 Use r""" if any backslashes in a docstring
core\drift_shell_engine.py:1:1: D400 First line should end with a period
core\drift_shell_engine.py:81:101: E501 line too long (155 > 100 characters)
core\drift_shell_engine.py:101:101: E501 line too long (114 > 100 characters)
core\drift_shell_engine.py:157:101: E501 line too long (122 > 100 characters)
core\drift_shell_engine.py:177:101: E501 line too long (105 > 100 characters)
core\drift_shell_engine.py:195:101: E501 line too long (116 > 100 characters)
core\drift_shell_engine.py:205:101: E501 line too long (137 > 100 characters)
core\drift_shell_engine.py:219:101: E501 line too long (138 > 100 characters)
core\drift_shell_engine.py:227:101: E501 line too long (112 > 100 characters)
core\drift_shell_engine.py:277:101: E501 line too long (169 > 100 characters)
core\drift_shell_engine.py:283:101: E501 line too long (105 > 100 characters)
core\drift_shell_engine.py:393:101: E501 line too long (121 > 100 characters)
core\drift_shell_engine.py:431:101: E501 line too long (260 > 100 characters)
core\drift_shell_engine.py:523:101: E501 line too long (174 > 100 characters)
core\drift_shell_engine.py:557:101: E501 line too long (175 > 100 characters)
core\drift_shell_engine.py:567:101: E501 line too long (164 > 100 characters)
core\drift_shell_engine.py:583:101: E501 line too long (159 > 100 characters)
core\drift_shell_engine.py:681:101: E501 line too long (155 > 100 characters)
core\drift_shell_engine.py:703:101: E501 line too long (105 > 100 characters)
core\drift_shell_engine.py:705:101: E501 line too long (196 > 100 characters)
core\drift_shell_engine.py:779:101: E501 line too long (153 > 100 characters)
core\drift_shell_engine.py:899:101: E501 line too long (175 > 100 characters)
core\drift_shell_engine.py:1015:101: E501 line too long (273 > 100 characters)
core\drift_shell_engine.py:1021:101: E501 line too long (131 > 100 characters)
core\drift_shell_engine.py:1027:101: E501 line too long (193 > 100 characters)
core\drift_shell_engine.py:1029:101: E501 line too long (231 > 100 characters)
core\drift_shell_engine.py:1037:101: E501 line too long (119 > 100 characters)
core\drift_shell_engine.py:1055:101: E501 line too long (134 > 100 characters)
core\drift_shell_engine.py:1073:101: E501 line too long (116 > 100 characters)
core\drift_shell_engine.py:1077:101: E501 line too long (168 > 100 characters)
core\drift_shell_engine.py:1079:101: E501 line too long (172 > 100 characters)
core\drift_shell_engine.py:1095:101: E501 line too long (153 > 100 characters)
core\drift_shell_engine.py:1149:101: E501 line too long (103 > 100 characters)
core\drift_shell_engine.py:1187:101: E501 line too long (108 > 100 characters)
core\drift_shell_engine.py:1229:101: E501 line too long (123 > 100 characters)
core\drift_shell_engine.py:1247:101: E501 line too long (132 > 100 characters)
core\drift_shell_engine.py:1293:101: E501 line too long (196 > 100 characters)
core\drift_shell_engine.py:1313:101: E501 line too long (261 > 100 characters)
core\drift_shell_engine.py:1333:101: E501 line too long (341 > 100 characters)
core\dualistic_state_machine.py:1:1: D205 1 blank line required between summary line and description
core\dualistic_state_machine.py:1:1: D301 Use r""" if any backslashes in a docstring
core\dualistic_state_machine.py:1:1: D400 First line should end with a period
core\dualistic_state_machine.py:115:101: E501 line too long (315 > 100 characters)
core\dualistic_state_machine.py:205:101: E501 line too long (117 > 100 characters)
core\dualistic_state_machine.py:257:101: E501 line too long (108 > 100 characters)
core\dualistic_state_machine.py:301:101: E501 line too long (119 > 100 characters)
core\dualistic_state_machine.py:375:101: E501 line too long (133 > 100 characters)
core\dualistic_state_machine.py:461:101: E501 line too long (155 > 100 characters)
core\dualistic_state_machine.py:465:101: E501 line too long (198 > 100 characters)
core\dualistic_state_machine.py:471:101: E501 line too long (103 > 100 characters)
core\dualistic_state_machine.py:473:101: E501 line too long (104 > 100 characters)
core\dualistic_state_machine.py:479:101: E501 line too long (116 > 100 characters)
core\dualistic_state_machine.py:491:101: E501 line too long (113 > 100 characters)
core\dualistic_state_machine.py:495:101: E501 line too long (128 > 100 characters)
core\dualistic_state_machine.py:525:101: E501 line too long (185 > 100 characters)
core\dualistic_state_machine.py:533:101: E501 line too long (203 > 100 characters)
core\dualistic_state_machine.py:543:101: E501 line too long (166 > 100 characters)
core\dualistic_state_machine.py:549:101: E501 line too long (164 > 100 characters)
core\dualistic_state_machine.py:575:101: E501 line too long (125 > 100 characters)
core\dualistic_state_machine.py:659:101: E501 line too long (173 > 100 characters)
core\dualistic_state_machine.py:675:101: E501 line too long (123 > 100 characters)
core\dualistic_state_machine.py:683:101: E501 line too long (139 > 100 characters)
core\dualistic_state_machine.py:709:101: E501 line too long (174 > 100 characters)
core\dualistic_state_machine.py:717:101: E501 line too long (139 > 100 characters)
core\dualistic_state_machine.py:727:101: E501 line too long (247 > 100 characters)
core\dualistic_state_machine.py:735:101: E501 line too long (112 > 100 characters)
core\enhanced_acceleration_integration.py:1:1: D205 1 blank line required between summary line and description
core\enhanced_acceleration_integration.py:1:1: D301 Use r""" if any backslashes in a docstring
core\enhanced_acceleration_integration.py:1:1: D400 First line should end with a period
core\enhanced_acceleration_integration.py:117:101: E501 line too long (253 > 100 characters)
core\enhanced_acceleration_integration.py:119:101: E501 line too long (101 > 100 characters)
core\enhanced_acceleration_integration.py:183:101: E501 line too long (141 > 100 characters)
core\enhanced_acceleration_integration.py:251:101: E501 line too long (102 > 100 characters)
core\enhanced_acceleration_integration.py:267:101: E501 line too long (151 > 100 characters)
core\enhanced_acceleration_integration.py:319:101: E501 line too long (103 > 100 characters)
core\enhanced_acceleration_integration.py:583:101: E501 line too long (114 > 100 characters)
core\enhanced_acceleration_integration.py:757:101: E501 line too long (131 > 100 characters)
core\enhanced_acceleration_integration.py:791:101: E501 line too long (246 > 100 characters)
core\enhanced_acceleration_integration.py:797:101: E501 line too long (429 > 100 characters)
core\enhanced_acceleration_integration.py:799:101: E501 line too long (180 > 100 characters)
core\enhanced_acceleration_integration.py:815:101: E501 line too long (103 > 100 characters)
core\enhanced_acceleration_integration.py:819:101: E501 line too long (103 > 100 characters)
core\enhanced_acceleration_integration.py:965:101: E501 line too long (102 > 100 characters)
core\enhanced_acceleration_integration.py:971:101: E501 line too long (128 > 100 characters)
core\enhanced_acceleration_integration.py:977:101: E501 line too long (130 > 100 characters)
core\enhanced_acceleration_integration.py:987:101: E501 line too long (170 > 100 characters)
core\enhanced_acceleration_integration.py:1161:101: E501 line too long (106 > 100 characters)
core\enhanced_integration_validator.py:1:1: D205 1 blank line required between summary line and description
core\enhanced_integration_validator.py:1:1: D301 Use r""" if any backslashes in a docstring
core\enhanced_integration_validator.py:1:1: D400 First line should end with a period
core\enhanced_integration_validator.py:159:101: E501 line too long (192 > 100 characters)
core\enhanced_integration_validator.py:167:101: E501 line too long (155 > 100 characters)
core\enhanced_integration_validator.py:181:101: E501 line too long (140 > 100 characters)
core\enhanced_integration_validator.py:321:101: E501 line too long (132 > 100 characters)
core\enhanced_integration_validator.py:403:101: E501 line too long (130 > 100 characters)
core\enhanced_integration_validator.py:493:101: E501 line too long (151 > 100 characters)
core\enhanced_integration_validator.py:537:101: E501 line too long (217 > 100 characters)
core\enhanced_integration_validator.py:543:101: E501 line too long (111 > 100 characters)
core\enhanced_integration_validator.py:553:101: E501 line too long (196 > 100 characters)
core\enhanced_integration_validator.py:575:101: E501 line too long (149 > 100 characters)
core\enhanced_integration_validator.py:583:101: E501 line too long (184 > 100 characters)
core\enhanced_integration_validator.py:589:101: E501 line too long (135 > 100 characters)
core\enhanced_integration_validator.py:599:101: E501 line too long (103 > 100 characters)
core\enhanced_live_execution_mapper.py:1:1: D205 1 blank line required between summary line and description
core\enhanced_live_execution_mapper.py:1:1: D301 Use r""" if any backslashes in a docstring
core\enhanced_live_execution_mapper.py:1:1: D400 First line should end with a period
core\enhanced_live_execution_mapper.py:71:101: E501 line too long (130 > 100 characters)
core\enhanced_live_execution_mapper.py:275:101: E501 line too long (137 > 100 characters)
core\enhanced_live_execution_mapper.py:281:101: E501 line too long (103 > 100 characters)
core\enhanced_live_execution_mapper.py:347:101: E501 line too long (286 > 100 characters)
core\enhanced_live_execution_mapper.py:355:101: E501 line too long (350 > 100 characters)
core\enhanced_live_execution_mapper.py:369:101: E501 line too long (491 > 100 characters)
core\enhanced_live_execution_mapper.py:387:101: E501 line too long (144 > 100 characters)
core\enhanced_live_execution_mapper.py:609:101: E501 line too long (124 > 100 characters)
core\enhanced_live_execution_mapper.py:709:101: E501 line too long (143 > 100 characters)
core\enhanced_live_execution_mapper.py:935:101: E501 line too long (155 > 100 characters)
core\enhanced_live_execution_mapper.py:943:101: E501 line too long (361 > 100 characters)
core\enhanced_live_execution_mapper.py:969:101: E501 line too long (140 > 100 characters)
core\enhanced_live_execution_mapper.py:973:101: E501 line too long (121 > 100 characters)
core\enhanced_live_execution_mapper.py:985:101: E501 line too long (130 > 100 characters)
core\enhanced_live_execution_mapper.py:1129:101: E501 line too long (130 > 100 characters)
core\enhanced_live_execution_mapper.py:1139:101: E501 line too long (601 > 100 characters)
core\enhanced_live_execution_mapper.py:1141:101: E501 line too long (207 > 100 characters)
core\enhanced_live_execution_mapper.py:1171:101: E501 line too long (124 > 100 characters)
core\enhanced_live_execution_mapper.py:1189:101: E501 line too long (559 > 100 characters)
core\enhanced_live_execution_mapper.py:1207:101: E501 line too long (109 > 100 characters)
core\enhanced_live_execution_mapper.py:1235:101: E501 line too long (186 > 100 characters)
core\enhanced_live_execution_mapper.py:1239:101: E501 line too long (195 > 100 characters)
core\enhanced_live_execution_mapper.py:1255:101: E501 line too long (600 > 100 characters)
core\enhanced_live_execution_mapper.py:1267:101: E501 line too long (264 > 100 characters)
core\enhanced_live_execution_mapper.py:1279:101: E501 line too long (393 > 100 characters)
core\enhanced_live_execution_mapper.py:1281:101: E501 line too long (202 > 100 characters)
core\enhanced_master_cycle_engine.py:1:1: D205 1 blank line required between summary line and description
core\enhanced_master_cycle_engine.py:1:1: D301 Use r""" if any backslashes in a docstring
core\enhanced_master_cycle_engine.py:1:1: D400 First line should end with a period
core\enhanced_master_cycle_engine.py:79:101: E501 line too long (139 > 100 characters)
core\enhanced_master_cycle_engine.py:87:101: E501 line too long (102 > 100 characters)
core\enhanced_master_cycle_engine.py:109:101: E501 line too long (387 > 100 characters)
core\enhanced_master_cycle_engine.py:147:101: E501 line too long (200 > 100 characters)
core\enhanced_master_cycle_engine.py:215:101: E501 line too long (599 > 100 characters)
core\enhanced_master_cycle_engine.py:223:101: E501 line too long (120 > 100 characters)
core\enhanced_master_cycle_engine.py:257:101: E501 line too long (116 > 100 characters)
core\enhanced_master_cycle_engine.py:273:101: E501 line too long (146 > 100 characters)
core\enhanced_master_cycle_engine.py:275:101: E501 line too long (154 > 100 characters)
core\enhanced_master_cycle_engine.py:355:101: E501 line too long (115 > 100 characters)
core\enhanced_master_cycle_engine.py:401:101: E501 line too long (154 > 100 characters)
core\enhanced_master_cycle_engine.py:403:101: E501 line too long (155 > 100 characters)
core\enhanced_master_cycle_engine.py:443:101: E501 line too long (193 > 100 characters)
core\enhanced_master_cycle_engine.py:473:101: E501 line too long (106 > 100 characters)
core\enhanced_master_cycle_engine.py:497:101: E501 line too long (163 > 100 characters)
core\enhanced_master_cycle_engine.py:605:101: E501 line too long (120 > 100 characters)
core\enhanced_master_cycle_engine.py:621:101: E501 line too long (127 > 100 characters)
core\enhanced_master_cycle_engine.py:705:101: E501 line too long (126 > 100 characters)
core\enhanced_master_cycle_engine.py:789:101: E501 line too long (101 > 100 characters)
core\enhanced_master_cycle_engine.py:805:101: E501 line too long (124 > 100 characters)
core\enhanced_master_cycle_engine.py:811:101: E501 line too long (188 > 100 characters)
core\enhanced_master_cycle_engine.py:853:101: E501 line too long (113 > 100 characters)
core\enhanced_master_cycle_engine.py:897:101: E501 line too long (151 > 100 characters)
core\enhanced_master_cycle_engine.py:901:101: E501 line too long (428 > 100 characters)
core\enhanced_master_cycle_engine.py:905:101: E501 line too long (346 > 100 characters)
core\enhanced_master_cycle_engine.py:913:101: E501 line too long (143 > 100 characters)
core\enhanced_master_cycle_engine.py:929:101: E501 line too long (117 > 100 characters)
core\enhanced_master_cycle_engine.py:935:101: E501 line too long (118 > 100 characters)
core\enhanced_master_cycle_engine.py:1003:101: E501 line too long (272 > 100 characters)
core\enhanced_master_cycle_engine.py:1015:101: E501 line too long (145 > 100 characters)
core\enhanced_master_cycle_profit_engine.py:3:1: D205 1 blank line required between summary line and description
core\enhanced_profit_trading_strategy.py:1:1: D205 1 blank line required between summary line and description
core\enhanced_profit_trading_strategy.py:1:1: D301 Use r""" if any backslashes in a docstring
core\enhanced_profit_trading_strategy.py:1:1: D400 First line should end with a period
core\enhanced_profit_trading_strategy.py:95:101: E501 line too long (128 > 100 characters)
core\enhanced_profit_trading_strategy.py:151:101: E501 line too long (362 > 100 characters)
core\enhanced_profit_trading_strategy.py:255:101: E501 line too long (166 > 100 characters)
core\enhanced_profit_trading_strategy.py:313:101: E501 line too long (131 > 100 characters)
core\enhanced_profit_trading_strategy.py:315:101: E501 line too long (131 > 100 characters)
core\enhanced_profit_trading_strategy.py:323:101: E501 line too long (263 > 100 characters)
core\enhanced_profit_trading_strategy.py:329:101: E501 line too long (110 > 100 characters)
core\enhanced_profit_trading_strategy.py:337:101: E501 line too long (509 > 100 characters)
core\enhanced_profit_trading_strategy.py:603:101: E501 line too long (131 > 100 characters)
core\enhanced_profit_trading_strategy.py:853:101: E501 line too long (176 > 100 characters)
core\enhanced_profit_trading_strategy.py:945:101: E501 line too long (155 > 100 characters)
core\enhanced_profit_trading_strategy.py:963:101: E501 line too long (135 > 100 characters)
core\enhanced_profit_trading_strategy.py:999:101: E501 line too long (111 > 100 characters)
core\enhanced_profit_trading_strategy.py:1253:101: E501 line too long (204 > 100 characters)
core\enhanced_profit_trading_strategy.py:1407:101: E501 line too long (447 > 100 characters)
core\enhanced_profit_trading_strategy.py:1409:101: E501 line too long (158 > 100 characters)
core\enhanced_profit_trading_strategy.py:1413:101: E501 line too long (107 > 100 characters)
core\enhanced_profit_trading_strategy.py:1417:101: E501 line too long (148 > 100 characters)
core\enhanced_profit_trading_strategy.py:1421:101: E501 line too long (365 > 100 characters)
core\enhanced_profit_trading_strategy.py:1437:101: E501 line too long (113 > 100 characters)
core\enhanced_profit_trading_strategy.py:1455:101: E501 line too long (173 > 100 characters)
core\enhanced_profit_trading_strategy.py:1471:101: E501 line too long (333 > 100 characters)
core\enhanced_profit_trading_strategy.py:1477:101: E501 line too long (106 > 100 characters)
core\enhanced_profit_trading_strategy.py:1485:101: E501 line too long (123 > 100 characters)
core\enhanced_strategy_framework.py:1:1: D205 1 blank line required between summary line and description
core\enhanced_strategy_framework.py:1:1: D301 Use r""" if any backslashes in a docstring
core\enhanced_strategy_framework.py:1:1: D400 First line should end with a period
core\enhanced_strategy_framework.py:73:101: E501 line too long (155 > 100 characters)
core\enhanced_strategy_framework.py:97:101: E501 line too long (105 > 100 characters)
core\enhanced_strategy_framework.py:119:101: E501 line too long (193 > 100 characters)
core\enhanced_strategy_framework.py:121:101: E501 line too long (128 > 100 characters)
core\enhanced_strategy_framework.py:123:101: E501 line too long (141 > 100 characters)
core\enhanced_strategy_framework.py:125:101: E501 line too long (126 > 100 characters)
core\enhanced_strategy_framework.py:127:101: E501 line too long (126 > 100 characters)
core\enhanced_strategy_framework.py:129:101: E501 line too long (141 > 100 characters)
core\enhanced_strategy_framework.py:131:101: E501 line too long (425 > 100 characters)
core\enhanced_strategy_framework.py:243:101: E501 line too long (195 > 100 characters)
core\enhanced_strategy_framework.py:299:101: E501 line too long (375 > 100 characters)
core\enhanced_strategy_framework.py:305:101: E501 line too long (110 > 100 characters)
core\enhanced_strategy_framework.py:529:101: E501 line too long (107 > 100 characters)
core\enhanced_strategy_framework.py:631:101: E501 line too long (110 > 100 characters)
core\enhanced_strategy_framework.py:697:101: E501 line too long (109 > 100 characters)
core\enhanced_strategy_framework.py:723:101: E501 line too long (110 > 100 characters)
core\enhanced_strategy_framework.py:811:101: E501 line too long (111 > 100 characters)
core\enhanced_strategy_framework.py:839:101: E501 line too long (112 > 100 characters)
core\enhanced_strategy_framework.py:917:101: E501 line too long (107 > 100 characters)
core\enhanced_strategy_framework.py:945:101: E501 line too long (109 > 100 characters)
core\enhanced_strategy_framework.py:1041:101: E501 line too long (112 > 100 characters)
core\enhanced_strategy_framework.py:1223:101: E501 line too long (115 > 100 characters)
core\enhanced_strategy_framework.py:1247:101: E501 line too long (109 > 100 characters)
core\enhanced_strategy_framework.py:1405:101: E501 line too long (102 > 100 characters)
core\enhanced_strategy_framework.py:1445:101: E501 line too long (177 > 100 characters)
core\enhanced_strategy_framework.py:1453:101: E501 line too long (136 > 100 characters)
core\enhanced_strategy_framework.py:1471:101: E501 line too long (167 > 100 characters)
core\enhanced_strategy_framework.py:1491:101: E501 line too long (166 > 100 characters)
core\enhanced_strategy_framework.py:1511:101: E501 line too long (107 > 100 characters)
core\enhanced_strategy_framework.py:1591:101: E501 line too long (103 > 100 characters)
core\enhanced_strategy_framework.py:1635:101: E501 line too long (125 > 100 characters)
core\enhanced_strategy_framework.py:1661:101: E501 line too long (116 > 100 characters)
core\enhanced_strategy_framework.py:1727:101: E501 line too long (135 > 100 characters)
core\enhanced_strategy_framework.py:1737:101: E501 line too long (106 > 100 characters)
core\enhanced_strategy_framework.py:1835:101: E501 line too long (151 > 100 characters)
core\enhanced_strategy_framework.py:1839:101: E501 line too long (129 > 100 characters)
core\enhanced_strategy_framework.py:1881:101: E501 line too long (482 > 100 characters)
core\enhanced_strategy_framework.py:1887:101: E501 line too long (118 > 100 characters)
core\enhanced_strategy_framework.py:1905:101: E501 line too long (127 > 100 characters)
core\enhanced_strategy_framework.py:1917:101: E501 line too long (151 > 100 characters)
core\entropy\galileo_tensor_field.py:1:1: D205 1 blank line required between summary line and description
core\entropy\galileo_tensor_field.py:1:1: D301 Use r""" if any backslashes in a docstring
core\entropy\galileo_tensor_field.py:1:1: D400 First line should end with a period
core\entropy\galileo_tensor_field.py:65:101: E501 line too long (116 > 100 characters)
core\entropy\galileo_tensor_field.py:67:101: E501 line too long (103 > 100 characters)
core\entropy\galileo_tensor_field.py:73:101: E501 line too long (104 > 100 characters)
core\entropy\galileo_tensor_field.py:109:101: E501 line too long (108 > 100 characters)
core\entropy\galileo_tensor_field.py:127:101: E501 line too long (126 > 100 characters)
core\entropy\galileo_tensor_field.py:173:101: E501 line too long (278 > 100 characters)
core\entropy\galileo_tensor_field.py:191:101: E501 line too long (106 > 100 characters)
core\entropy\galileo_tensor_field.py:309:101: E501 line too long (186 > 100 characters)
core\entropy\galileo_tensor_field.py:377:101: E501 line too long (135 > 100 characters)
core\entropy\galileo_tensor_field.py:677:101: E501 line too long (107 > 100 characters)
core\entropy\galileo_tensor_field.py:755:101: E501 line too long (102 > 100 characters)
core\entropy\galileo_tensor_field.py:767:101: E501 line too long (121 > 100 characters)
core\entropy\galileo_tensor_field.py:769:101: E501 line too long (115 > 100 characters)
core\entropy\galileo_tensor_field.py:777:101: E501 line too long (131 > 100 characters)
core\entropy\galileo_tensor_field.py:785:101: E501 line too long (229 > 100 characters)
core\entropy\galileo_tensor_field.py:819:101: E501 line too long (221 > 100 characters)
core\entropy\galileo_tensor_field.py:821:101: E501 line too long (141 > 100 characters)
core\entropy\galileo_tensor_field.py:833:101: E501 line too long (125 > 100 characters)
core\entropy_monitor.py:1:1: D205 1 blank line required between summary line and description
core\entropy_monitor.py:1:1: D301 Use r""" if any backslashes in a docstring
core\entropy_monitor.py:1:1: D400 First line should end with a period
core\entropy_monitor.py:45:101: E501 line too long (101 > 100 characters)
core\entropy_monitor.py:61:101: E501 line too long (105 > 100 characters)
core\entropy_monitor.py:81:101: E501 line too long (173 > 100 characters)
core\entropy_monitor.py:97:101: E501 line too long (156 > 100 characters)
core\entropy_monitor.py:187:101: E501 line too long (104 > 100 characters)
core\entropy_monitor.py:315:101: E501 line too long (327 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:1:1: D205 1 blank line required between summary line and description
core\error_handling_and_flake_gate_prevention.py:1:1: D301 Use r""" if any backslashes in a docstring
core\error_handling_and_flake_gate_prevention.py:1:1: D400 First line should end with a period
core\error_handling_and_flake_gate_prevention.py:147:101: E501 line too long (105 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:161:101: E501 line too long (633 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:267:101: E501 line too long (199 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:335:101: E501 line too long (403 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:337:101: E501 line too long (155 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:339:101: E501 line too long (152 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:347:101: E501 line too long (190 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:383:101: E501 line too long (152 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:385:101: E501 line too long (120 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:387:101: E501 line too long (502 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:395:101: E501 line too long (455 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:401:101: E501 line too long (137 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:415:101: E501 line too long (133 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:431:101: E501 line too long (122 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:445:101: E501 line too long (120 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:461:101: E501 line too long (124 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:475:101: E501 line too long (114 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:491:101: E501 line too long (119 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:505:101: E501 line too long (119 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:523:101: E501 line too long (139 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:541:101: E501 line too long (125 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:559:101: E501 line too long (101 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:673:101: E501 line too long (126 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:695:101: E501 line too long (103 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:715:101: E501 line too long (122 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:751:101: E501 line too long (118 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:817:101: E501 line too long (122 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:907:101: E501 line too long (117 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:913:101: E501 line too long (126 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:929:101: E501 line too long (135 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:937:101: E501 line too long (136 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:947:101: E501 line too long (137 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:1263:101: E501 line too long (271 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:1283:101: E501 line too long (158 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:1345:101: E501 line too long (134 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:1353:101: E501 line too long (188 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:1355:101: E501 line too long (139 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:1359:101: E501 line too long (168 > 100 characters)
core\error_handling_and_flake_gate_prevention.py:1455:101: E501 line too long (109 > 100 characters)
core\final_integration_launcher.py:1:1: D205 1 blank line required between summary line and description
core\final_integration_launcher.py:1:1: D301 Use r""" if any backslashes in a docstring
core\final_integration_launcher.py:1:1: D400 First line should end with a period
core\final_integration_launcher.py:221:101: E501 line too long (310 > 100 characters)
core\final_integration_launcher.py:325:101: E501 line too long (194 > 100 characters)
core\final_integration_launcher.py:381:101: E501 line too long (569 > 100 characters)
core\final_integration_launcher.py:449:101: E501 line too long (146 > 100 characters)
core\final_integration_launcher.py:597:101: E501 line too long (130 > 100 characters)
core\final_integration_launcher.py:727:101: E501 line too long (102 > 100 characters)
core\final_integration_launcher.py:731:101: E501 line too long (122 > 100 characters)
core\final_integration_launcher.py:793:101: E501 line too long (120 > 100 characters)
core\final_integration_launcher.py:881:101: E501 line too long (111 > 100 characters)
core\final_integration_launcher.py:915:101: E501 line too long (132 > 100 characters)
core\final_integration_launcher.py:1129:101: E501 line too long (452 > 100 characters)
core\final_integration_launcher.py:1153:101: E501 line too long (125 > 100 characters)
core\final_integration_launcher.py:1161:101: E501 line too long (238 > 100 characters)
core\final_integration_launcher.py:1163:101: E501 line too long (239 > 100 characters)
core\final_integration_launcher.py:1165:101: E501 line too long (160 > 100 characters)
core\final_integration_launcher.py:1169:101: E501 line too long (177 > 100 characters)
core\final_integration_launcher.py:1171:101: E501 line too long (247 > 100 characters)
core\final_integration_launcher.py:1175:101: E501 line too long (201 > 100 characters)
core\final_integration_launcher.py:1221:101: E501 line too long (103 > 100 characters)
core\final_integration_launcher.py:1227:101: E501 line too long (103 > 100 characters)
core\final_integration_launcher.py:1233:101: E501 line too long (101 > 100 characters)
core\final_integration_launcher.py:1267:101: E501 line too long (140 > 100 characters)
core\final_integration_launcher.py:1299:101: E501 line too long (104 > 100 characters)
core\final_integration_launcher.py:1305:101: E501 line too long (101 > 100 characters)
core\galileo_tensor_bridge.py:1:1: D205 1 blank line required between summary line and description
core\galileo_tensor_bridge.py:1:1: D301 Use r""" if any backslashes in a docstring
core\galileo_tensor_bridge.py:1:1: D400 First line should end with a period
core\galileo_tensor_bridge.py:79:101: E501 line too long (110 > 100 characters)
core\galileo_tensor_bridge.py:87:101: E501 line too long (108 > 100 characters)
core\galileo_tensor_bridge.py:111:101: E501 line too long (187 > 100 characters)
core\galileo_tensor_bridge.py:203:101: E501 line too long (244 > 100 characters)
core\galileo_tensor_bridge.py:211:101: E501 line too long (109 > 100 characters)
core\galileo_tensor_bridge.py:257:101: E501 line too long (316 > 100 characters)
core\galileo_tensor_bridge.py:263:101: E501 line too long (196 > 100 characters)
core\galileo_tensor_bridge.py:275:101: E501 line too long (170 > 100 characters)
core\galileo_tensor_bridge.py:291:101: E501 line too long (114 > 100 characters)
core\galileo_tensor_bridge.py:321:101: E501 line too long (156 > 100 characters)
core\galileo_tensor_bridge.py:325:101: E501 line too long (137 > 100 characters)
core\galileo_tensor_bridge.py:351:101: E501 line too long (126 > 100 characters)
core\galileo_tensor_bridge.py:361:101: E501 line too long (137 > 100 characters)
core\galileo_tensor_bridge.py:409:101: E501 line too long (117 > 100 characters)
core\galileo_tensor_bridge.py:447:101: E501 line too long (217 > 100 characters)
core\galileo_tensor_bridge.py:517:101: E501 line too long (124 > 100 characters)
core\galileo_tensor_bridge.py:569:101: E501 line too long (132 > 100 characters)
core\galileo_tensor_bridge.py:579:101: E501 line too long (104 > 100 characters)
core\galileo_tensor_bridge.py:581:101: E501 line too long (200 > 100 characters)
core\galileo_tensor_bridge.py:587:101: E501 line too long (141 > 100 characters)
core\galileo_tensor_bridge.py:589:101: E501 line too long (127 > 100 characters)
core\galileo_tensor_bridge.py:607:101: E501 line too long (321 > 100 characters)
core\galileo_tensor_bridge.py:613:101: E501 line too long (182 > 100 characters)
core\galileo_tensor_bridge.py:621:101: E501 line too long (170 > 100 characters)
core\galileo_tensor_bridge.py:627:101: E501 line too long (339 > 100 characters)
core\galileo_tensor_bridge.py:637:101: E501 line too long (118 > 100 characters)
core\galileo_tensor_bridge.py:649:101: E501 line too long (102 > 100 characters)
core\galileo_tensor_bridge.py:655:101: E501 line too long (120 > 100 characters)
core\galileo_tensor_bridge.py:687:101: E501 line too long (411 > 100 characters)
core\galileo_tensor_bridge.py:707:101: E501 line too long (309 > 100 characters)
core\ghost_core.py:1:1: D205 1 blank line required between summary line and description
core\ghost_core.py:1:1: D301 Use r""" if any backslashes in a docstring
core\ghost_core.py:1:1: D400 First line should end with a period
core\ghost_core.py:61:101: E501 line too long (128 > 100 characters)
core\ghost_core.py:85:101: E501 line too long (339 > 100 characters)
core\ghost_core.py:147:101: E501 line too long (104 > 100 characters)
core\ghost_core.py:169:101: E501 line too long (274 > 100 characters)
core\ghost_core.py:255:101: E501 line too long (118 > 100 characters)
core\ghost_core.py:443:101: E501 line too long (109 > 100 characters)
core\ghost_core.py:703:101: E501 line too long (145 > 100 characters)
core\ghost_core.py:715:101: E501 line too long (128 > 100 characters)
core\ghost_core.py:739:101: E501 line too long (106 > 100 characters)
core\ghost_core.py:783:101: E501 line too long (170 > 100 characters)
core\ghost_core.py:787:101: E501 line too long (118 > 100 characters)
core\ghost_core.py:793:101: E501 line too long (106 > 100 characters)
core\ghost_core.py:857:101: E501 line too long (117 > 100 characters)
core\ghost_core.py:861:101: E501 line too long (178 > 100 characters)
core\glyph_phase_resolver.py:1:1: D205 1 blank line required between summary line and description
core\glyph_phase_resolver.py:1:1: D301 Use r""" if any backslashes in a docstring
core\glyph_phase_resolver.py:1:1: D400 First line should end with a period
core\glyph_phase_resolver.py:41:101: E501 line too long (128 > 100 characters)
core\glyph_phase_resolver.py:43:101: E501 line too long (215 > 100 characters)
core\glyph_phase_resolver.py:51:101: E501 line too long (128 > 100 characters)
core\glyph_phase_resolver.py:53:101: E501 line too long (104 > 100 characters)
core\glyph_phase_resolver.py:79:101: E501 line too long (153 > 100 characters)
core\glyph_phase_resolver.py:83:101: E501 line too long (102 > 100 characters)
core\glyph_phase_resolver.py:101:101: E501 line too long (139 > 100 characters)
core\glyph_phase_resolver.py:127:101: E501 line too long (142 > 100 characters)
core\glyph_phase_resolver.py:143:101: E501 line too long (145 > 100 characters)
core\glyph_phase_resolver.py:151:101: E501 line too long (149 > 100 characters)
core\glyph_phase_resolver.py:159:101: E501 line too long (149 > 100 characters)
core\glyph_phase_resolver.py:167:101: E501 line too long (150 > 100 characters)
core\glyph_phase_resolver.py:175:101: E501 line too long (150 > 100 characters)
core\glyph_phase_resolver.py:185:101: E501 line too long (149 > 100 characters)
core\hardware_acceleration_manager.py:1:1: D205 1 blank line required between summary line and description
core\hardware_acceleration_manager.py:1:1: D301 Use r""" if any backslashes in a docstring
core\hardware_acceleration_manager.py:1:1: D400 First line should end with a period
core\hardware_acceleration_manager.py:75:101: E501 line too long (260 > 100 characters)
core\hardware_acceleration_manager.py:145:101: E501 line too long (205 > 100 characters)
core\hardware_acceleration_manager.py:205:101: E501 line too long (131 > 100 characters)
core\hardware_acceleration_manager.py:271:101: E501 line too long (122 > 100 characters)
core\hardware_acceleration_manager.py:415:101: E501 line too long (156 > 100 characters)
core\hardware_acceleration_manager.py:501:101: E501 line too long (401 > 100 characters)
core\hardware_acceleration_manager.py:573:101: E501 line too long (114 > 100 characters)
core\hardware_acceleration_manager.py:617:101: E501 line too long (280 > 100 characters)
core\hardware_acceleration_manager.py:627:101: E501 line too long (239 > 100 characters)
core\hardware_acceleration_manager.py:633:101: E501 line too long (124 > 100 characters)
core\hardware_acceleration_manager.py:667:101: E501 line too long (293 > 100 characters)
core\hardware_acceleration_manager.py:673:101: E501 line too long (641 > 100 characters)
core\hardware_acceleration_manager.py:683:101: E501 line too long (348 > 100 characters)
core\hardware_acceleration_manager.py:691:101: E501 line too long (136 > 100 characters)
core\hardware_acceleration_manager.py:703:101: E501 line too long (160 > 100 characters)
core\hardware_acceleration_manager.py:707:101: E501 line too long (125 > 100 characters)
core\hardware_acceleration_manager.py:715:101: E501 line too long (160 > 100 characters)
core\hardware_acceleration_manager.py:723:101: E501 line too long (132 > 100 characters)
core\hardware_acceleration_manager.py:739:101: E501 line too long (138 > 100 characters)
core\immune\qsc_gate.py:1:1: D205 1 blank line required between summary line and description
core\immune\qsc_gate.py:1:1: D301 Use r""" if any backslashes in a docstring
core\immune\qsc_gate.py:1:1: D400 First line should end with a period
core\immune\qsc_gate.py:63:101: E501 line too long (140 > 100 characters)
core\immune\qsc_gate.py:71:101: E501 line too long (103 > 100 characters)
core\immune\qsc_gate.py:123:101: E501 line too long (108 > 100 characters)
core\immune\qsc_gate.py:181:101: E501 line too long (277 > 100 characters)
core\immune\qsc_gate.py:191:101: E501 line too long (162 > 100 characters)
core\immune\qsc_gate.py:279:101: E501 line too long (103 > 100 characters)
core\immune\qsc_gate.py:281:101: E501 line too long (264 > 100 characters)
core\immune\qsc_gate.py:309:101: E501 line too long (134 > 100 characters)
core\immune\qsc_gate.py:453:101: E501 line too long (163 > 100 characters)
core\immune\qsc_gate.py:517:101: E501 line too long (192 > 100 characters)
core\immune\qsc_gate.py:533:101: E501 line too long (250 > 100 characters)
core\immune\qsc_gate.py:539:101: E501 line too long (150 > 100 characters)
core\immune\qsc_gate.py:669:101: E501 line too long (234 > 100 characters)
core\immune\qsc_gate.py:687:101: E501 line too long (113 > 100 characters)
core\immune\qsc_gate.py:697:101: E501 line too long (213 > 100 characters)
core\lantern_core_integration.py:1:1: D205 1 blank line required between summary line and description
core\lantern_core_integration.py:1:1: D301 Use r""" if any backslashes in a docstring
core\lantern_core_integration.py:1:1: D400 First line should end with a period
core\lantern_core_integration.py:209:101: E501 line too long (777 > 100 characters)
core\lantern_core_integration.py:235:101: E501 line too long (127 > 100 characters)
core\lantern_core_integration.py:259:101: E501 line too long (411 > 100 characters)
core\lantern_core_integration.py:517:101: E501 line too long (104 > 100 characters)
core\lantern_core_integration.py:537:101: E501 line too long (130 > 100 characters)
core\lantern_core_integration.py:557:101: E501 line too long (130 > 100 characters)
core\lantern_core_integration.py:613:101: E501 line too long (103 > 100 characters)
core\lantern_core_integration.py:637:101: E501 line too long (211 > 100 characters)
core\lantern_core_integration.py:653:101: E501 line too long (126 > 100 characters)
core\lantern_core_integration.py:687:101: E501 line too long (193 > 100 characters)
core\lantern_core_integration.py:699:101: E501 line too long (191 > 100 characters)
core\lantern_core_integration.py:709:101: E501 line too long (120 > 100 characters)
core\lantern_core_integration.py:737:101: E501 line too long (119 > 100 characters)
core\lantern_core_integration.py:779:101: E501 line too long (145 > 100 characters)
core\lantern_core_integration.py:815:101: E501 line too long (131 > 100 characters)
core\lantern_core_integration.py:887:101: E501 line too long (116 > 100 characters)
core\lantern_core_integration.py:1029:101: E501 line too long (136 > 100 characters)
core\lantern_core_integration.py:1063:101: E501 line too long (383 > 100 characters)
core\lantern_core_integration.py:1065:101: E501 line too long (156 > 100 characters)
core\lantern_core_integration.py:1169:101: E501 line too long (106 > 100 characters)
core\latency_compensator.py:1:1: D205 1 blank line required between summary line and description
core\latency_compensator.py:1:1: D301 Use r""" if any backslashes in a docstring
core\latency_compensator.py:1:1: D400 First line should end with a period
core\latency_compensator.py:59:101: E501 line too long (131 > 100 characters)
core\latency_compensator.py:109:101: E501 line too long (123 > 100 characters)
core\latency_compensator.py:125:101: E501 line too long (147 > 100 characters)
core\latency_compensator.py:131:101: E501 line too long (108 > 100 characters)
core\latency_compensator.py:161:101: E501 line too long (139 > 100 characters)
core\latency_compensator.py:167:101: E501 line too long (103 > 100 characters)
core\latency_compensator.py:179:101: E501 line too long (135 > 100 characters)
core\latency_compensator.py:203:101: E501 line too long (141 > 100 characters)
core\latency_compensator.py:301:101: E501 line too long (110 > 100 characters)
core\latency_compensator.py:313:101: E501 line too long (138 > 100 characters)
core\latency_compensator.py:373:101: E501 line too long (132 > 100 characters)
core\latency_compensator.py:483:101: E501 line too long (106 > 100 characters)
core\latency_compensator.py:491:101: E501 line too long (118 > 100 characters)
core\latency_compensator.py:499:101: E501 line too long (102 > 100 characters)
core\latency_compensator.py:533:101: E501 line too long (158 > 100 characters)
core\latency_compensator.py:537:101: E501 line too long (145 > 100 characters)
core\latency_compensator.py:573:101: E501 line too long (136 > 100 characters)
core\latency_compensator.py:615:101: E501 line too long (129 > 100 characters)
core\latency_compensator.py:633:101: E501 line too long (116 > 100 characters)
core\latency_compensator.py:641:101: E501 line too long (103 > 100 characters)
core\latency_compensator.py:659:101: E501 line too long (263 > 100 characters)
core\latency_compensator.py:669:101: E501 line too long (213 > 100 characters)
core\latency_compensator.py:717:101: E501 line too long (103 > 100 characters)
core\latency_compensator.py:721:101: E501 line too long (236 > 100 characters)
core\latency_compensator.py:727:101: E501 line too long (102 > 100 characters)
core\latency_compensator.py:731:101: E501 line too long (235 > 100 characters)
core\live_execution_mapper.py:1:1: D205 1 blank line required between summary line and description
core\live_execution_mapper.py:1:1: D301 Use r""" if any backslashes in a docstring
core\live_execution_mapper.py:1:1: D400 First line should end with a period
core\live_execution_mapper.py:75:101: E501 line too long (138 > 100 characters)
core\live_execution_mapper.py:189:101: E501 line too long (127 > 100 characters)
core\live_execution_mapper.py:201:101: E501 line too long (124 > 100 characters)
core\live_execution_mapper.py:231:101: E501 line too long (101 > 100 characters)
core\live_execution_mapper.py:281:101: E501 line too long (230 > 100 characters)
core\live_execution_mapper.py:287:101: E501 line too long (118 > 100 characters)
core\live_execution_mapper.py:291:101: E501 line too long (153 > 100 characters)
core\live_execution_mapper.py:329:101: E501 line too long (116 > 100 characters)
core\live_execution_mapper.py:377:101: E501 line too long (214 > 100 characters)
core\live_execution_mapper.py:405:101: E501 line too long (186 > 100 characters)
core\live_execution_mapper.py:459:101: E501 line too long (242 > 100 characters)
core\live_execution_mapper.py:483:101: E501 line too long (113 > 100 characters)
core\live_execution_mapper.py:491:101: E501 line too long (151 > 100 characters)
core\live_execution_mapper.py:515:101: E501 line too long (169 > 100 characters)
core\live_execution_mapper.py:521:101: E501 line too long (114 > 100 characters)
core\live_execution_mapper.py:527:101: E501 line too long (138 > 100 characters)
core\live_execution_mapper.py:535:101: E501 line too long (167 > 100 characters)
core\live_execution_mapper.py:539:101: E501 line too long (136 > 100 characters)
core\live_execution_mapper.py:543:101: E501 line too long (132 > 100 characters)
core\live_execution_mapper.py:583:101: E501 line too long (190 > 100 characters)
core\live_execution_mapper.py:635:101: E501 line too long (148 > 100 characters)
core\live_execution_mapper.py:659:101: E501 line too long (103 > 100 characters)
core\live_execution_mapper.py:685:101: E501 line too long (103 > 100 characters)
core\live_execution_mapper.py:703:101: E501 line too long (130 > 100 characters)
core\mathematical_optimization_bridge.py:1:1: D205 1 blank line required between summary line and description
core\mathematical_optimization_bridge.py:1:1: D301 Use r""" if any backslashes in a docstring
core\mathematical_optimization_bridge.py:1:1: D400 First line should end with a period
core\mathematical_optimization_bridge.py:95:101: E501 line too long (128 > 100 characters)
core\mathematical_optimization_bridge.py:115:101: E501 line too long (500 > 100 characters)
core\mathematical_optimization_bridge.py:155:101: E501 line too long (237 > 100 characters)
core\mathematical_optimization_bridge.py:207:101: E501 line too long (241 > 100 characters)
core\mathematical_optimization_bridge.py:239:101: E501 line too long (134 > 100 characters)
core\mathematical_optimization_bridge.py:265:101: E501 line too long (222 > 100 characters)
core\mathematical_optimization_bridge.py:271:101: E501 line too long (174 > 100 characters)
core\mathematical_optimization_bridge.py:285:101: E501 line too long (116 > 100 characters)
core\mathematical_optimization_bridge.py:293:101: E501 line too long (102 > 100 characters)
core\mathematical_optimization_bridge.py:309:101: E501 line too long (120 > 100 characters)
core\mathematical_optimization_bridge.py:317:101: E501 line too long (211 > 100 characters)
core\mathematical_optimization_bridge.py:319:101: E501 line too long (159 > 100 characters)
core\mathematical_optimization_bridge.py:329:101: E501 line too long (181 > 100 characters)
core\mathematical_pipeline_validator.py:1:1: D205 1 blank line required between summary line and description
core\mathematical_pipeline_validator.py:1:1: D301 Use r""" if any backslashes in a docstring
core\mathematical_pipeline_validator.py:1:1: D400 First line should end with a period
core\mathematical_pipeline_validator.py:43:101: E501 line too long (105 > 100 characters)
core\mathematical_pipeline_validator.py:205:101: E501 line too long (111 > 100 characters)
core\mathematical_pipeline_validator.py:233:101: E501 line too long (105 > 100 characters)
core\mathematical_pipeline_validator.py:253:101: E501 line too long (169 > 100 characters)
core\mathematical_pipeline_validator.py:391:101: E501 line too long (147 > 100 characters)
core\mathematical_pipeline_validator.py:461:101: E501 line too long (131 > 100 characters)
core\mathematical_pipeline_validator.py:571:101: E501 line too long (128 > 100 characters)
core\mathematical_pipeline_validator.py:671:101: E501 line too long (130 > 100 characters)
core\mathematical_pipeline_validator.py:689:101: E501 line too long (116 > 100 characters)
core\mathematical_pipeline_validator.py:755:101: E501 line too long (153 > 100 characters)
core\mathematical_pipeline_validator.py:803:101: E501 line too long (118 > 100 characters)
core\mathematical_pipeline_validator.py:823:101: E501 line too long (140 > 100 characters)
core\mathematical_pipeline_validator.py:899:101: E501 line too long (146 > 100 characters)
core\mathematical_pipeline_validator.py:915:101: E501 line too long (159 > 100 characters)
core\mathematical_pipeline_validator.py:1007:101: E501 line too long (222 > 100 characters)
core\mathematical_pipeline_validator.py:1023:101: E501 line too long (141 > 100 characters)
core\mathematical_pipeline_validator.py:1087:101: E501 line too long (230 > 100 characters)
core\mathematical_pipeline_validator.py:1103:101: E501 line too long (141 > 100 characters)
core\mathematical_pipeline_validator.py:1207:101: E501 line too long (137 > 100 characters)
core\mathematical_pipeline_validator.py:1223:101: E501 line too long (133 > 100 characters)
core\mathematical_pipeline_validator.py:1421:101: E501 line too long (120 > 100 characters)
core\mathlib_v4.py:1:1: D205 1 blank line required between summary line and description
core\mathlib_v4.py:1:1: D301 Use r""" if any backslashes in a docstring
core\mathlib_v4.py:1:1: D400 First line should end with a period
core\mathlib_v4.py:71:101: E501 line too long (110 > 100 characters)
core\mathlib_v4.py:359:101: E501 line too long (160 > 100 characters)
core\mathlib_v4.py:385:101: E501 line too long (140 > 100 characters)
core\mathlib_v4.py:503:101: E501 line too long (134 > 100 characters)
core\mathlib_v4.py:515:101: E501 line too long (108 > 100 characters)
core\mathlib_v4.py:519:101: E501 line too long (201 > 100 characters)
core\mathlib_v4.py:531:101: E501 line too long (143 > 100 characters)
core\mathlib_v4.py:545:101: E501 line too long (103 > 100 characters)
core\mathlib_v4.py:555:101: E501 line too long (123 > 100 characters)
core\mathlib_v4.py:559:101: E501 line too long (162 > 100 characters)
core\mathlib_v4.py:567:101: E501 line too long (119 > 100 characters)
core\mathlib_v4.py:571:101: E501 line too long (119 > 100 characters)
core\mathlib_v4.py:575:101: E501 line too long (105 > 100 characters)
core\mathlib_v4.py:583:101: E501 line too long (262 > 100 characters)
core\mathlib_v4.py:605:101: E501 line too long (112 > 100 characters)
core\matrix_math_utils.py:1:1: D205 1 blank line required between summary line and description
core\matrix_math_utils.py:1:1: D301 Use r""" if any backslashes in a docstring
core\matrix_math_utils.py:1:1: D400 First line should end with a period
core\matrix_math_utils.py:79:101: E501 line too long (179 > 100 characters)
core\matrix_math_utils.py:135:101: E501 line too long (287 > 100 characters)
core\matrix_math_utils.py:173:101: E501 line too long (191 > 100 characters)
core\matrix_math_utils.py:279:101: E501 line too long (188 > 100 characters)
core\matrix_math_utils.py:287:101: E501 line too long (121 > 100 characters)
core\matrix_math_utils.py:291:101: E501 line too long (141 > 100 characters)
core\phase_bit_integration.py:1:1: D205 1 blank line required between summary line and description
core\phase_bit_integration.py:1:1: D301 Use r""" if any backslashes in a docstring
core\phase_bit_integration.py:1:1: D400 First line should end with a period
core\phase_bit_integration.py:49:101: E501 line too long (272 > 100 characters)
core\phase_bit_integration.py:55:101: E501 line too long (295 > 100 characters)
core\phase_bit_integration.py:71:101: E501 line too long (129 > 100 characters)
core\phase_bit_integration.py:79:101: E501 line too long (105 > 100 characters)
core\phase_bit_integration.py:97:101: E501 line too long (101 > 100 characters)
core\phase_bit_integration.py:183:101: E501 line too long (139 > 100 characters)
core\phase_bit_integration.py:197:101: E501 line too long (139 > 100 characters)
core\phase_bit_integration.py:211:101: E501 line too long (139 > 100 characters)
core\portfolio_tracker.py:1:1: D205 1 blank line required between summary line and description
core\portfolio_tracker.py:1:1: D301 Use r""" if any backslashes in a docstring
core\portfolio_tracker.py:1:1: D400 First line should end with a period
core\portfolio_tracker.py:57:101: E501 line too long (129 > 100 characters)
core\portfolio_tracker.py:63:101: E501 line too long (114 > 100 characters)
core\portfolio_tracker.py:93:101: E501 line too long (105 > 100 characters)
core\portfolio_tracker.py:99:101: E501 line too long (123 > 100 characters)
core\portfolio_tracker.py:105:101: E501 line too long (117 > 100 characters)
core\portfolio_tracker.py:119:101: E501 line too long (158 > 100 characters)
core\portfolio_tracker.py:127:101: E501 line too long (128 > 100 characters)
core\portfolio_tracker.py:135:101: E501 line too long (102 > 100 characters)
core\portfolio_tracker.py:141:101: E501 line too long (130 > 100 characters)
core\portfolio_tracker.py:153:101: E501 line too long (105 > 100 characters)
core\portfolio_tracker.py:173:101: E501 line too long (126 > 100 characters)
core\portfolio_tracker.py:189:101: E501 line too long (134 > 100 characters)
core\portfolio_tracker.py:287:101: E501 line too long (214 > 100 characters)
core\portfolio_tracker.py:295:101: E501 line too long (169 > 100 characters)
core\portfolio_tracker.py:307:101: E501 line too long (158 > 100 characters)
core\portfolio_tracker.py:319:101: E501 line too long (200 > 100 characters)
core\portfolio_tracker.py:331:101: E501 line too long (287 > 100 characters)
core\portfolio_tracker.py:337:101: E501 line too long (168 > 100 characters)
core\portfolio_tracker.py:341:101: E501 line too long (144 > 100 characters)
core\portfolio_tracker.py:345:101: E501 line too long (200 > 100 characters)
core\portfolio_tracker.py:363:101: E501 line too long (173 > 100 characters)
core\profit_memory_echo.py:1:1: D205 1 blank line required between summary line and description
core\profit_memory_echo.py:1:1: D301 Use r""" if any backslashes in a docstring
core\profit_memory_echo.py:1:1: D400 First line should end with a period
core\profit_memory_echo.py:49:101: E501 line too long (354 > 100 characters)
core\profit_memory_echo.py:57:101: E501 line too long (111 > 100 characters)
core\profit_memory_echo.py:63:101: E501 line too long (103 > 100 characters)
core\profit_memory_echo.py:79:101: E501 line too long (178 > 100 characters)
core\profit_memory_echo.py:89:101: E501 line too long (106 > 100 characters)
core\profit_memory_echo.py:93:21: W291 trailing whitespace
core\profit_memory_echo.py:107:101: E501 line too long (130 > 100 characters)
core\profit_memory_echo.py:117:101: E501 line too long (105 > 100 characters)
core\profit_memory_echo.py:139:101: E501 line too long (149 > 100 characters)
core\profit_memory_echo.py:149:101: E501 line too long (117 > 100 characters)
core\profit_memory_echo.py:223:101: E501 line too long (108 > 100 characters)
core\profit_memory_echo.py:227:101: E501 line too long (118 > 100 characters)
core\profit_optimization_engine.py:1:1: D205 1 blank line required between summary line and description
core\profit_optimization_engine.py:1:1: D301 Use r""" if any backslashes in a docstring
core\profit_optimization_engine.py:1:1: D400 First line should end with a period
core\profit_optimization_engine.py:83:101: E501 line too long (159 > 100 characters)
core\profit_optimization_engine.py:137:101: E501 line too long (261 > 100 characters)
core\profit_optimization_engine.py:213:101: E501 line too long (191 > 100 characters)
core\profit_optimization_engine.py:221:101: E501 line too long (366 > 100 characters)
core\profit_optimization_engine.py:251:101: E501 line too long (290 > 100 characters)
core\profit_optimization_engine.py:269:101: E501 line too long (136 > 100 characters)
core\profit_optimization_engine.py:281:101: E501 line too long (506 > 100 characters)
core\profit_optimization_engine.py:325:101: E501 line too long (122 > 100 characters)
core\profit_optimization_engine.py:497:101: E501 line too long (150 > 100 characters)
core\profit_optimization_engine.py:599:101: E501 line too long (138 > 100 characters)
core\profit_optimization_engine.py:661:101: E501 line too long (122 > 100 characters)
core\profit_optimization_engine.py:709:101: E501 line too long (125 > 100 characters)
core\profit_optimization_engine.py:741:101: E501 line too long (122 > 100 characters)
core\profit_optimization_engine.py:833:101: E501 line too long (239 > 100 characters)
core\profit_optimization_engine.py:869:101: E501 line too long (111 > 100 characters)
core\profit_optimization_engine.py:1209:101: E501 line too long (113 > 100 characters)
core\profit_optimization_engine.py:1219:101: E501 line too long (556 > 100 characters)
core\profit_optimization_engine.py:1233:101: E501 line too long (156 > 100 characters)
core\profit_optimization_engine.py:1239:101: E501 line too long (367 > 100 characters)
core\profit_optimization_engine.py:1257:101: E501 line too long (105 > 100 characters)
core\profit_optimization_engine.py:1279:101: E501 line too long (151 > 100 characters)
core\profit_optimization_engine.py:1293:101: E501 line too long (402 > 100 characters)
core\profit_vector_forecast.py:1:1: D205 1 blank line required between summary line and description
core\profit_vector_forecast.py:1:1: D301 Use r""" if any backslashes in a docstring
core\profit_vector_forecast.py:1:1: D400 First line should end with a period
core\profit_vector_forecast.py:75:101: E501 line too long (155 > 100 characters)
core\profit_vector_forecast.py:137:101: E501 line too long (141 > 100 characters)
core\profit_vector_forecast.py:151:101: E501 line too long (189 > 100 characters)
core\profit_vector_forecast.py:167:101: E501 line too long (152 > 100 characters)
core\profit_vector_forecast.py:175:101: E501 line too long (139 > 100 characters)
core\profit_vector_forecast.py:203:101: E501 line too long (127 > 100 characters)
core\profit_vector_forecast.py:211:101: E501 line too long (201 > 100 characters)
core\profit_vector_forecast.py:217:101: E501 line too long (137 > 100 characters)
core\profit_vector_forecast.py:227:101: E501 line too long (199 > 100 characters)
core\profit_vector_forecast.py:235:101: E501 line too long (104 > 100 characters)
core\profit_vector_forecast.py:247:101: E501 line too long (118 > 100 characters)
core\profit_vector_forecast.py:309:101: E501 line too long (126 > 100 characters)
core\profit_vector_forecast.py:377:101: E501 line too long (132 > 100 characters)
core\profit_vector_forecast.py:389:101: E501 line too long (191 > 100 characters)
core\profit_vector_forecast.py:395:101: E501 line too long (159 > 100 characters)
core\profit_vector_forecast.py:429:101: E501 line too long (108 > 100 characters)
core\profit_vector_forecast.py:435:101: E501 line too long (115 > 100 characters)
core\profit_vector_forecast.py:437:101: E501 line too long (119 > 100 characters)
core\profit_vector_forecast.py:471:101: E501 line too long (242 > 100 characters)
core\profit_vector_forecast.py:479:101: E501 line too long (102 > 100 characters)
core\profit_vector_forecast.py:503:101: E501 line too long (111 > 100 characters)
core\profit_vector_forecast.py:521:101: E501 line too long (142 > 100 characters)
core\profit_vector_forecast.py:557:101: E501 line too long (163 > 100 characters)
core\profit_vector_forecast.py:579:101: E501 line too long (107 > 100 characters)
core\profit_vector_forecast.py:613:101: E501 line too long (101 > 100 characters)
core\profit_vector_forecast.py:841:101: E501 line too long (116 > 100 characters)
core\profit_vector_forecast.py:909:101: E501 line too long (107 > 100 characters)
core\profit_vector_forecast.py:967:101: E501 line too long (116 > 100 characters)
core\profit_vector_forecast.py:969:101: E501 line too long (114 > 100 characters)
core\profit_vector_forecast.py:1089:101: E501 line too long (139 > 100 characters)
core\profit_vector_forecast.py:1259:101: E501 line too long (113 > 100 characters)
core\profit_vector_forecast.py:1355:101: E501 line too long (127 > 100 characters)
core\profit_vector_forecast.py:1363:101: E501 line too long (170 > 100 characters)
core\profit_vector_forecast.py:1385:101: E501 line too long (139 > 100 characters)
core\profit_vector_forecast.py:1403:101: E501 line too long (117 > 100 characters)
core\profit_vector_forecast.py:1407:101: E501 line too long (199 > 100 characters)
core\profit_vector_forecast.py:1411:101: E501 line too long (208 > 100 characters)
core\profit_vector_forecast.py:1425:101: E501 line too long (108 > 100 characters)
core\profit_vector_forecast.py:1479:101: E501 line too long (188 > 100 characters)
core\profit_vector_forecast.py:1505:101: E501 line too long (161 > 100 characters)
core\profit_vector_forecast.py:1517:101: E501 line too long (257 > 100 characters)
core\profit_vector_forecast.py:1529:101: E501 line too long (272 > 100 characters)
core\profit_vector_forecast.py:1563:101: E501 line too long (352 > 100 characters)
core\pure_profit_calculator.py:5:1: D205 1 blank line required between summary line and description
core\pure_profit_calculator.py:5:1: D400 First line should end with a period
core\pure_profit_calculator.py:64:23: ANN101 Missing type annotation for self in method
core\pure_profit_calculator.py:64:28: ANN204 Missing return type annotation for special method
core\pure_profit_calculator.py:65:1: D202 No blank lines allowed after function docstring
core\pure_profit_calculator.py:90:28: ANN101 Missing type annotation for self in method
core\pure_profit_calculator.py:91:1: D202 No blank lines allowed after function docstring
core\pure_profit_calculator.py:153:23: ANN101 Missing type annotation for self in method
core\pure_profit_calculator.py:153:28: ANN204 Missing return type annotation for special method
core\pure_profit_calculator.py:154:1: D202 No blank lines allowed after function docstring
core\pure_profit_calculator.py:162:1: D205 1 blank line required between summary line and description
core\pure_profit_calculator.py:176:18: ANN101 Missing type annotation for self in method
core\pure_profit_calculator.py:176:60: ANN204 Missing return type annotation for special method
core\pure_profit_calculator.py:177:1: D202 No blank lines allowed after function docstring
core\pure_profit_calculator.py:196:9: ANN101 Missing type annotation for self in method
core\pure_profit_calculator.py:201:1: D202 No blank lines allowed after function docstring
core\pure_profit_calculator.py:201:1: D205 1 blank line required between summary line and description
core\pure_profit_calculator.py:201:1: D412 No blank lines allowed between a section header and its content
core\pure_profit_calculator.py:313:32: ANN101 Missing type annotation for self in method
core\pure_profit_calculator.py:314:1: D202 No blank lines allowed after function docstring
core\pure_profit_calculator.py:350:36: ANN101 Missing type annotation for self in method
core\pure_profit_calculator.py:351:1: D202 No blank lines allowed after function docstring
core\pure_profit_calculator.py:380:9: ANN101 Missing type annotation for self in method
core\pure_profit_calculator.py:382:1: D202 No blank lines allowed after function docstring
core\pure_profit_calculator.py:403:17: B007 Loop control variable 'bucket_name' not used within the loop body. If this is intended, start the name with an underscore.
core\pure_profit_calculator.py:435:9: ANN101 Missing type annotation for self in method
core\pure_profit_calculator.py:437:1: D202 No blank lines allowed after function docstring
core\pure_profit_calculator.py:482:9: ANN101 Missing type annotation for self in method
core\pure_profit_calculator.py:484:1: D202 No blank lines allowed after function docstring
core\pure_profit_calculator.py:534:30: ANN101 Missing type annotation for self in method
core\pure_profit_calculator.py:535:1: D202 No blank lines allowed after function docstring
core\pure_profit_calculator.py:546:33: ANN101 Missing type annotation for self in method
core\pure_profit_calculator.py:547:1: D202 No blank lines allowed after function docstring
core\pure_profit_calculator.py:569:32: ANN101 Missing type annotation for self in method
core\pure_profit_calculator.py:570:1: D202 No blank lines allowed after function docstring
core\pure_profit_calculator.py:570:1: D205 1 blank line required between summary line and description
core\pure_profit_calculator.py:606:1: D202 No blank lines allowed after function docstring
core\pure_profit_calculator.py:606:1: D205 1 blank line required between summary line and description
core\pure_profit_calculator.py:634:1: D202 No blank lines allowed after function docstring
core\pure_profit_calculator.py:649:1: D202 No blank lines allowed after function docstring
core\pure_profit_calculator.py:660:35: ANN201 Missing return type annotation for public function
core\pure_profit_calculator.py:661:1: D202 No blank lines allowed after function docstring
core\qsc_enhanced_profit_allocator.py:1:1: D205 1 blank line required between summary line and description
core\qsc_enhanced_profit_allocator.py:1:1: D301 Use r""" if any backslashes in a docstring
core\qsc_enhanced_profit_allocator.py:1:1: D400 First line should end with a period
core\qsc_enhanced_profit_allocator.py:83:101: E501 line too long (280 > 100 characters)
core\qsc_enhanced_profit_allocator.py:123:101: E501 line too long (175 > 100 characters)
core\qsc_enhanced_profit_allocator.py:137:101: E501 line too long (156 > 100 characters)
core\qsc_enhanced_profit_allocator.py:139:101: E501 line too long (135 > 100 characters)
core\qsc_enhanced_profit_allocator.py:141:101: E501 line too long (137 > 100 characters)
core\qsc_enhanced_profit_allocator.py:143:101: E501 line too long (143 > 100 characters)
core\qsc_enhanced_profit_allocator.py:179:101: E501 line too long (406 > 100 characters)
core\qsc_enhanced_profit_allocator.py:189:101: E501 line too long (110 > 100 characters)
core\qsc_enhanced_profit_allocator.py:191:101: E501 line too long (110 > 100 characters)
core\qsc_enhanced_profit_allocator.py:249:101: E501 line too long (146 > 100 characters)
core\qsc_enhanced_profit_allocator.py:271:101: E501 line too long (148 > 100 characters)
core\qsc_enhanced_profit_allocator.py:425:101: E501 line too long (178 > 100 characters)
core\qsc_enhanced_profit_allocator.py:483:101: E501 line too long (226 > 100 characters)
core\qsc_enhanced_profit_allocator.py:485:101: E501 line too long (198 > 100 characters)
core\qsc_enhanced_profit_allocator.py:511:101: E501 line too long (121 > 100 characters)
core\qsc_enhanced_profit_allocator.py:517:101: E501 line too long (139 > 100 characters)
core\qsc_enhanced_profit_allocator.py:547:101: E501 line too long (191 > 100 characters)
core\qsc_enhanced_profit_allocator.py:571:101: E501 line too long (137 > 100 characters)
core\qsc_enhanced_profit_allocator.py:585:101: E501 line too long (152 > 100 characters)
core\qsc_enhanced_profit_allocator.py:593:101: E501 line too long (336 > 100 characters)
core\qsc_enhanced_profit_allocator.py:607:101: E501 line too long (120 > 100 characters)
core\qsc_enhanced_profit_allocator.py:665:101: E501 line too long (134 > 100 characters)
core\qsc_enhanced_profit_allocator.py:677:101: E501 line too long (489 > 100 characters)
core\qsc_enhanced_profit_allocator.py:701:101: E501 line too long (107 > 100 characters)
core\quantum_drift_shell_engine.py:1:1: D205 1 blank line required between summary line and description
core\quantum_drift_shell_engine.py:1:1: D301 Use r""" if any backslashes in a docstring
core\quantum_drift_shell_engine.py:1:1: D400 First line should end with a period
core\quantum_drift_shell_engine.py:39:101: E501 line too long (101 > 100 characters)
core\quantum_drift_shell_engine.py:71:101: E501 line too long (108 > 100 characters)
core\quantum_static_core.py:1:1: D205 1 blank line required between summary line and description
core\quantum_static_core.py:1:1: D301 Use r""" if any backslashes in a docstring
core\quantum_static_core.py:1:1: D400 First line should end with a period
core\quantum_static_core.py:85:101: E501 line too long (281 > 100 characters)
core\quantum_static_core.py:145:101: E501 line too long (103 > 100 characters)
core\quantum_static_core.py:159:101: E501 line too long (175 > 100 characters)
core\quantum_static_core.py:301:101: E501 line too long (119 > 100 characters)
core\quantum_static_core.py:311:101: E501 line too long (113 > 100 characters)
core\quantum_static_core.py:543:101: E501 line too long (180 > 100 characters)
core\quantum_static_core.py:619:101: E501 line too long (165 > 100 characters)
core\quantum_static_core.py:677:101: E501 line too long (383 > 100 characters)
core\quantum_static_core.py:713:101: E501 line too long (165 > 100 characters)
core\quantum_static_core.py:743:101: E501 line too long (542 > 100 characters)
core\quantum_superpositional_trigger.py:1:1: D205 1 blank line required between summary line and description
core\quantum_superpositional_trigger.py:1:1: D301 Use r""" if any backslashes in a docstring
core\quantum_superpositional_trigger.py:1:1: D400 First line should end with a period
core\quantum_superpositional_trigger.py:67:101: E501 line too long (166 > 100 characters)
core\quantum_superpositional_trigger.py:69:101: E501 line too long (107 > 100 characters)
core\quantum_superpositional_trigger.py:143:101: E501 line too long (170 > 100 characters)
core\quantum_superpositional_trigger.py:179:101: E501 line too long (134 > 100 characters)
core\risk_manager.py:1:1: D205 1 blank line required between summary line and description
core\risk_manager.py:1:1: D301 Use r""" if any backslashes in a docstring
core\risk_manager.py:1:1: D400 First line should end with a period
core\risk_manager.py:43:101: E501 line too long (101 > 100 characters)
core\risk_manager.py:89:101: E501 line too long (110 > 100 characters)
core\risk_manager.py:95:101: E501 line too long (111 > 100 characters)
core\risk_manager.py:123:101: E501 line too long (124 > 100 characters)
core\risk_manager.py:135:101: E501 line too long (179 > 100 characters)
core\risk_manager.py:137:101: E501 line too long (115 > 100 characters)
core\risk_manager.py:139:101: E501 line too long (109 > 100 characters)
core\risk_manager.py:267:101: E501 line too long (158 > 100 characters)
core\risk_manager.py:367:101: E501 line too long (132 > 100 characters)
core\risk_manager.py:371:101: E501 line too long (176 > 100 characters)
core\risk_manager.py:419:101: E501 line too long (107 > 100 characters)
core\risk_manager.py:635:101: E501 line too long (110 > 100 characters)
core\risk_manager.py:657:101: E501 line too long (119 > 100 characters)
core\risk_manager.py:709:101: E501 line too long (101 > 100 characters)
core\risk_manager.py:799:101: E501 line too long (140 > 100 characters)
core\risk_manager.py:843:101: E501 line too long (117 > 100 characters)
core\risk_manager.py:861:101: E501 line too long (124 > 100 characters)
core\risk_manager.py:873:101: E501 line too long (115 > 100 characters)
core\risk_manager.py:889:101: E501 line too long (203 > 100 characters)
core\risk_manager.py:895:101: E501 line too long (131 > 100 characters)
core\risk_manager.py:1033:101: E501 line too long (157 > 100 characters)
core\risk_manager.py:1077:101: E501 line too long (112 > 100 characters)
core\risk_manager.py:1083:101: E501 line too long (115 > 100 characters)
core\risk_manager.py:1107:101: E501 line too long (112 > 100 characters)
core\risk_manager.py:1113:101: E501 line too long (115 > 100 characters)
core\risk_manager.py:1141:101: E501 line too long (114 > 100 characters)
core\risk_manager.py:1147:101: E501 line too long (115 > 100 characters)
core\schwabot_integrated_launcher.py:1:1: D205 1 blank line required between summary line and description
core\schwabot_integrated_launcher.py:1:1: D301 Use r""" if any backslashes in a docstring
core\schwabot_integrated_launcher.py:1:1: D400 First line should end with a period
core\schwabot_integrated_launcher.py:143:101: E501 line too long (122 > 100 characters)
core\schwabot_integrated_launcher.py:195:101: E501 line too long (171 > 100 characters)
core\schwabot_integrated_launcher.py:197:101: E501 line too long (170 > 100 characters)
core\schwabot_integrated_launcher.py:199:101: E501 line too long (105 > 100 characters)
core\schwabot_integrated_launcher.py:201:101: E501 line too long (277 > 100 characters)
core\schwabot_integrated_launcher.py:211:101: E501 line too long (106 > 100 characters)
core\schwabot_integrated_launcher.py:463:101: E501 line too long (102 > 100 characters)
core\schwabot_integrated_launcher.py:489:101: E501 line too long (116 > 100 characters)
core\schwabot_integrated_launcher.py:559:101: E501 line too long (101 > 100 characters)
core\schwabot_integrated_launcher.py:707:101: E501 line too long (102 > 100 characters)
core\schwabot_integrated_launcher.py:1063:101: E501 line too long (114 > 100 characters)
core\schwabot_integrated_launcher.py:1105:101: E501 line too long (105 > 100 characters)
core\schwabot_integrated_launcher.py:1439:101: E501 line too long (106 > 100 characters)
core\schwabot_integrated_launcher.py:1449:101: E501 line too long (102 > 100 characters)
core\schwabot_integrated_launcher.py:1463:101: E501 line too long (141 > 100 characters)
core\schwabot_integrated_launcher.py:1523:101: E501 line too long (157 > 100 characters)
core\schwabot_integrated_launcher.py:1527:101: E501 line too long (163 > 100 characters)
core\schwabot_integrated_launcher.py:1541:101: E501 line too long (113 > 100 characters)
core\schwabot_integration_pipeline.py:1:1: D205 1 blank line required between summary line and description
core\schwabot_integration_pipeline.py:1:1: D301 Use r""" if any backslashes in a docstring
core\schwabot_integration_pipeline.py:1:1: D400 First line should end with a period
core\schwabot_integration_pipeline.py:147:101: E501 line too long (169 > 100 characters)
core\schwabot_integration_pipeline.py:193:101: E501 line too long (221 > 100 characters)
core\schwabot_integration_pipeline.py:201:101: E501 line too long (195 > 100 characters)
core\schwabot_integration_pipeline.py:213:101: E501 line too long (150 > 100 characters)
core\schwabot_integration_pipeline.py:217:101: E501 line too long (160 > 100 characters)
core\schwabot_integration_pipeline.py:229:101: E501 line too long (168 > 100 characters)
core\schwabot_integration_pipeline.py:303:101: E501 line too long (123 > 100 characters)
core\schwabot_integration_pipeline.py:351:101: E501 line too long (136 > 100 characters)
core\schwabot_integration_pipeline.py:373:101: E501 line too long (106 > 100 characters)
core\schwabot_integration_pipeline.py:419:101: E501 line too long (108 > 100 characters)
core\schwabot_integration_pipeline.py:443:101: E501 line too long (592 > 100 characters)
core\schwabot_integration_pipeline.py:449:101: E501 line too long (120 > 100 characters)
core\schwabot_integration_pipeline.py:619:101: E501 line too long (110 > 100 characters)
core\schwabot_integration_pipeline.py:629:101: E501 line too long (119 > 100 characters)
core\schwabot_integration_pipeline.py:679:101: E501 line too long (108 > 100 characters)
core\schwabot_integration_pipeline.py:763:101: E501 line too long (157 > 100 characters)
core\schwabot_integration_pipeline.py:773:101: E501 line too long (107 > 100 characters)
core\schwabot_integration_pipeline.py:781:101: E501 line too long (143 > 100 characters)
core\schwabot_integration_pipeline.py:869:101: E501 line too long (139 > 100 characters)
core\schwabot_integration_pipeline.py:893:101: E501 line too long (155 > 100 characters)
core\schwabot_integration_pipeline.py:913:101: E501 line too long (139 > 100 characters)
core\schwabot_integration_pipeline.py:949:101: E501 line too long (106 > 100 characters)
core\schwabot_integration_pipeline.py:957:101: E501 line too long (112 > 100 characters)
core\schwabot_integration_pipeline.py:961:101: E501 line too long (149 > 100 characters)
core\schwabot_integration_pipeline.py:1005:101: E501 line too long (159 > 100 characters)
core\schwabot_integration_pipeline.py:1031:101: E501 line too long (103 > 100 characters)
core\schwabot_integration_pipeline.py:1073:101: E501 line too long (203 > 100 characters)
core\schwabot_integration_pipeline.py:1085:101: E501 line too long (150 > 100 characters)
core\schwabot_integration_pipeline.py:1113:101: E501 line too long (152 > 100 characters)
core\schwabot_integration_pipeline.py:1115:101: E501 line too long (145 > 100 characters)
core\schwabot_integration_pipeline.py:1121:101: E501 line too long (132 > 100 characters)
core\schwabot_unified_integration.py:1:1: D205 1 blank line required between summary line and description
core\schwabot_unified_integration.py:1:1: D301 Use r""" if any backslashes in a docstring
core\schwabot_unified_integration.py:1:1: D400 First line should end with a period
core\schwabot_unified_integration.py:61:101: E501 line too long (107 > 100 characters)
core\schwabot_unified_integration.py:115:101: E501 line too long (302 > 100 characters)
core\schwabot_unified_integration.py:179:101: E501 line too long (136 > 100 characters)
core\schwabot_unified_integration.py:213:101: E501 line too long (365 > 100 characters)
core\schwabot_unified_integration.py:215:101: E501 line too long (105 > 100 characters)
core\schwabot_unified_integration.py:217:101: E501 line too long (109 > 100 characters)
core\schwabot_unified_integration.py:375:101: E501 line too long (305 > 100 characters)
core\schwabot_unified_integration.py:531:101: E501 line too long (296 > 100 characters)
core\schwabot_unified_integration.py:589:101: E501 line too long (134 > 100 characters)
core\schwabot_unified_integration.py:591:101: E501 line too long (154 > 100 characters)
core\schwabot_unified_integration.py:629:101: E501 line too long (129 > 100 characters)
core\schwabot_unified_integration.py:649:101: E501 line too long (335 > 100 characters)
core\schwabot_unified_integration.py:829:101: E501 line too long (113 > 100 characters)
core\schwabot_unified_integration.py:875:101: E501 line too long (301 > 100 characters)
core\schwabot_unified_integration.py:881:101: E501 line too long (304 > 100 characters)
core\schwabot_unified_integration.py:883:101: E501 line too long (234 > 100 characters)
core\schwabot_unified_integration.py:891:101: E501 line too long (124 > 100 characters)
core\schwabot_unified_integration.py:921:101: E501 line too long (125 > 100 characters)
core\schwabot_unified_integration.py:943:101: E501 line too long (199 > 100 characters)
core\schwabot_unified_integration.py:953:101: E501 line too long (137 > 100 characters)
core\schwabot_unified_pipeline.py:1:1: D205 1 blank line required between summary line and description
core\schwabot_unified_pipeline.py:1:1: D301 Use r""" if any backslashes in a docstring
core\schwabot_unified_pipeline.py:1:1: D400 First line should end with a period
core\schwabot_unified_pipeline.py:95:101: E501 line too long (126 > 100 characters)
core\schwabot_unified_pipeline.py:137:101: E501 line too long (175 > 100 characters)
core\schwabot_unified_pipeline.py:197:101: E501 line too long (131 > 100 characters)
core\schwabot_unified_pipeline.py:407:101: E501 line too long (186 > 100 characters)
core\schwabot_unified_pipeline.py:511:101: E501 line too long (110 > 100 characters)
core\schwabot_unified_pipeline.py:513:101: E501 line too long (113 > 100 characters)
core\schwabot_unified_pipeline.py:519:101: E501 line too long (131 > 100 characters)
core\schwabot_unified_pipeline.py:555:101: E501 line too long (293 > 100 characters)
core\schwabot_unified_pipeline.py:565:101: E501 line too long (136 > 100 characters)
core\schwabot_unified_pipeline.py:571:101: E501 line too long (123 > 100 characters)
core\schwabot_unified_pipeline.py:577:101: E501 line too long (122 > 100 characters)
core\schwabot_unified_pipeline.py:605:101: E501 line too long (151 > 100 characters)
core\schwabot_unified_pipeline.py:615:101: E501 line too long (129 > 100 characters)
core\schwabot_unified_pipeline.py:635:101: E501 line too long (743 > 100 characters)
core\schwabot_unified_pipeline.py:673:101: E501 line too long (313 > 100 characters)
core\schwabot_unified_pipeline.py:687:101: E501 line too long (191 > 100 characters)
core\schwabot_unified_pipeline.py:755:101: E501 line too long (199 > 100 characters)
core\schwabot_unified_pipeline.py:803:101: E501 line too long (214 > 100 characters)
core\schwabot_unified_pipeline.py:829:101: E501 line too long (114 > 100 characters)
core\schwabot_unified_pipeline.py:887:101: E501 line too long (303 > 100 characters)
core\schwabot_unified_pipeline.py:903:101: E501 line too long (636 > 100 characters)
core\schwabot_unified_pipeline.py:951:101: E501 line too long (121 > 100 characters)
core\schwabot_unified_pipeline.py:1005:101: E501 line too long (221 > 100 characters)
core\schwabot_unified_pipeline.py:1015:101: E501 line too long (261 > 100 characters)
core\schwabot_unified_pipeline.py:1017:101: E501 line too long (243 > 100 characters)
core\secure_api_coordinator.py:1:1: D205 1 blank line required between summary line and description
core\secure_api_coordinator.py:1:1: D301 Use r""" if any backslashes in a docstring
core\secure_api_coordinator.py:1:1: D400 First line should end with a period
core\secure_api_coordinator.py:79:101: E501 line too long (142 > 100 characters)
core\secure_api_coordinator.py:113:101: E501 line too long (293 > 100 characters)
core\secure_api_coordinator.py:197:101: E501 line too long (161 > 100 characters)
core\secure_api_coordinator.py:237:101: E501 line too long (119 > 100 characters)
core\secure_api_coordinator.py:255:101: E501 line too long (299 > 100 characters)
core\secure_api_coordinator.py:439:101: E501 line too long (232 > 100 characters)
core\secure_api_coordinator.py:613:101: E501 line too long (187 > 100 characters)
core\secure_api_coordinator.py:695:101: E501 line too long (105 > 100 characters)
core\secure_api_coordinator.py:781:101: E501 line too long (133 > 100 characters)
core\secure_api_coordinator.py:819:101: E501 line too long (149 > 100 characters)
core\secure_api_coordinator.py:851:101: E501 line too long (122 > 100 characters)
core\secure_api_coordinator.py:911:101: E501 line too long (384 > 100 characters)
core\secure_api_coordinator.py:951:101: E501 line too long (111 > 100 characters)
core\secure_api_coordinator.py:977:101: E501 line too long (118 > 100 characters)
core\secure_api_coordinator.py:987:101: E501 line too long (138 > 100 characters)
core\secure_api_coordinator.py:1005:101: E501 line too long (172 > 100 characters)
core\secure_api_coordinator.py:1031:101: E501 line too long (280 > 100 characters)
core\secure_api_coordinator.py:1057:101: E501 line too long (111 > 100 characters)
core\secure_api_coordinator.py:1079:101: E501 line too long (188 > 100 characters)
core\secure_api_coordinator.py:1111:101: E501 line too long (110 > 100 characters)
core\secure_api_coordinator.py:1133:101: E501 line too long (188 > 100 characters)
core\secure_api_coordinator.py:1161:101: E501 line too long (250 > 100 characters)
core\secure_api_coordinator.py:1173:101: E501 line too long (137 > 100 characters)
core\secure_api_coordinator.py:1199:101: E501 line too long (153 > 100 characters)
core\secure_api_coordinator.py:1217:101: E501 line too long (174 > 100 characters)
core\secure_api_coordinator.py:1237:101: E501 line too long (113 > 100 characters)
core\secure_api_coordinator.py:1263:101: E501 line too long (383 > 100 characters)
core\secure_api_coordinator.py:1331:101: E501 line too long (108 > 100 characters)
core\secure_api_coordinator.py:1387:101: E501 line too long (197 > 100 characters)
core\security_vector_allocator.py:1:1: D205 1 blank line required between summary line and description
core\security_vector_allocator.py:1:1: D301 Use r""" if any backslashes in a docstring
core\security_vector_allocator.py:1:1: D400 First line should end with a period
core\security_vector_allocator.py:83:101: E501 line too long (131 > 100 characters)
core\security_vector_allocator.py:131:25: W291 trailing whitespace
core\speed_lattice_trading_integration.py:1:1: D205 1 blank line required between summary line and description
core\speed_lattice_trading_integration.py:21:18: ANN101 Missing type annotation for self in method
core\speed_lattice_trading_integration.py:21:54: ANN204 Missing return type annotation for special method
core\speed_lattice_trading_integration.py:22:1: D202 No blank lines allowed after function docstring
core\speed_lattice_trading_integration.py:30:19: ANN101 Missing type annotation for self in method
core\speed_lattice_trading_integration.py:31:1: D202 No blank lines allowed after function docstring
core\speed_lattice_trading_integration.py:37:27: ANN101 Missing type annotation for self in method
core\speed_lattice_trading_integration.py:37:75: ANN201 Missing return type annotation for public function
core\speed_lattice_trading_integration.py:38:1: D202 No blank lines allowed after function docstring
core\speed_lattice_trading_integration.py:42:17: ANN101 Missing type annotation for self in method
core\speed_lattice_trading_integration.py:43:1: D202 No blank lines allowed after function docstring
core\strategic_immunity_integration_test.py:1:1: D205 1 blank line required between summary line and description
core\strategic_immunity_integration_test.py:1:1: D301 Use r""" if any backslashes in a docstring
core\strategic_immunity_integration_test.py:1:1: D400 First line should end with a period
core\strategic_immunity_integration_test.py:83:101: E501 line too long (126 > 100 characters)
core\strategic_immunity_integration_test.py:257:101: E501 line too long (107 > 100 characters)
core\strategic_immunity_integration_test.py:285:101: E501 line too long (281 > 100 characters)
core\strategic_immunity_integration_test.py:307:101: E501 line too long (111 > 100 characters)
core\strategic_immunity_integration_test.py:325:101: E501 line too long (248 > 100 characters)
core\strategic_immunity_integration_test.py:329:101: E501 line too long (210 > 100 characters)
core\strategic_immunity_integration_test.py:335:101: E501 line too long (126 > 100 characters)
core\strategic_immunity_integration_test.py:349:101: E501 line too long (157 > 100 characters)
core\strategic_immunity_integration_test.py:361:101: E501 line too long (121 > 100 characters)
core\strategic_immunity_integration_test.py:375:101: E501 line too long (147 > 100 characters)
core\strategic_immunity_integration_test.py:379:101: E501 line too long (149 > 100 characters)
core\strategic_immunity_integration_test.py:383:101: E501 line too long (142 > 100 characters)
core\strategy\__init__.py:1:1: D205 1 blank line required between summary line and description
core\strategy\__init__.py:1:1: D301 Use r""" if any backslashes in a docstring
core\strategy\__init__.py:1:1: D400 First line should end with a period
core\strategy\__init__.py:69:101: E501 line too long (127 > 100 characters)
core\strategy\entry_exit_portal.py:1:1: D205 1 blank line required between summary line and description
core\strategy\entry_exit_portal.py:1:1: D301 Use r""" if any backslashes in a docstring
core\strategy\entry_exit_portal.py:1:1: D400 First line should end with a period
core\strategy\entry_exit_portal.py:179:101: E501 line too long (115 > 100 characters)
core\strategy\entry_exit_portal.py:583:101: E501 line too long (121 > 100 characters)
core\strategy\entry_exit_portal.py:601:101: E501 line too long (226 > 100 characters)
core\strategy\entry_exit_portal.py:623:101: E501 line too long (213 > 100 characters)
core\strategy\entry_exit_portal.py:659:101: E501 line too long (123 > 100 characters)
core\strategy\entry_exit_portal.py:663:101: E501 line too long (148 > 100 characters)
core\strategy\entry_exit_portal.py:667:101: E501 line too long (105 > 100 characters)
core\strategy\flip_switch_logic_lattice.py:1:1: D205 1 blank line required between summary line and description
core\strategy\flip_switch_logic_lattice.py:1:1: D301 Use r""" if any backslashes in a docstring
core\strategy\flip_switch_logic_lattice.py:1:1: D400 First line should end with a period
core\strategy\flip_switch_logic_lattice.py:57:101: E501 line too long (165 > 100 characters)
core\strategy\flip_switch_logic_lattice.py:59:101: E501 line too long (115 > 100 characters)
core\strategy\flip_switch_logic_lattice.py:65:101: E501 line too long (168 > 100 characters)
core\strategy\flip_switch_logic_lattice.py:73:101: E501 line too long (148 > 100 characters)
core\strategy\flip_switch_logic_lattice.py:89:101: E501 line too long (227 > 100 characters)
core\strategy\flip_switch_logic_lattice.py:107:101: E501 line too long (103 > 100 characters)
core\strategy\flip_switch_logic_lattice.py:137:101: E501 line too long (153 > 100 characters)
core\strategy\flip_switch_logic_lattice.py:201:101: E501 line too long (141 > 100 characters)
core\strategy\flip_switch_logic_lattice.py:207:101: E501 line too long (133 > 100 characters)
core\strategy\flip_switch_logic_lattice.py:229:101: E501 line too long (145 > 100 characters)
core\strategy\flip_switch_logic_lattice.py:251:101: E501 line too long (112 > 100 characters)
core\strategy\flip_switch_logic_lattice.py:255:101: E501 line too long (111 > 100 characters)
core\strategy\flip_switch_logic_lattice.py:281:101: E501 line too long (116 > 100 characters)
core\strategy\flip_switch_logic_lattice.py:287:101: E501 line too long (116 > 100 characters)
core\strategy\flip_switch_logic_lattice.py:295:101: E501 line too long (141 > 100 characters)
core\strategy\glyph_gate_engine.py:1:1: D205 1 blank line required between summary line and description
core\strategy\glyph_gate_engine.py:1:1: D301 Use r""" if any backslashes in a docstring
core\strategy\glyph_gate_engine.py:1:1: D400 First line should end with a period
core\strategy\glyph_gate_engine.py:113:101: E501 line too long (184 > 100 characters)
core\strategy\glyph_gate_engine.py:185:101: E501 line too long (107 > 100 characters)
core\strategy\glyph_gate_engine.py:343:101: E501 line too long (103 > 100 characters)
core\strategy\glyph_gate_engine.py:355:101: E501 line too long (101 > 100 characters)
core\strategy\glyph_gate_engine.py:395:101: E501 line too long (302 > 100 characters)
core\strategy\glyph_gate_engine.py:413:101: E501 line too long (149 > 100 characters)
core\strategy\glyph_gate_engine.py:455:101: E501 line too long (126 > 100 characters)
core\strategy\glyph_gate_engine.py:495:101: E501 line too long (169 > 100 characters)
core\strategy\glyph_gate_engine.py:499:101: E501 line too long (171 > 100 characters)
core\strategy\glyph_gate_engine.py:503:101: E501 line too long (108 > 100 characters)
core\strategy\glyph_gate_engine.py:519:101: E501 line too long (184 > 100 characters)
core\strategy\loss_anticipation_curve.py:1:1: D205 1 blank line required between summary line and description
core\strategy\loss_anticipation_curve.py:1:1: D301 Use r""" if any backslashes in a docstring
core\strategy\loss_anticipation_curve.py:1:1: D400 First line should end with a period
core\strategy\loss_anticipation_curve.py:67:101: E501 line too long (102 > 100 characters)
core\strategy\loss_anticipation_curve.py:81:101: E501 line too long (110 > 100 characters)
core\strategy\loss_anticipation_curve.py:89:101: E501 line too long (123 > 100 characters)
core\strategy\loss_anticipation_curve.py:101:101: E501 line too long (106 > 100 characters)
core\strategy\loss_anticipation_curve.py:115:101: E501 line too long (135 > 100 characters)
core\strategy\loss_anticipation_curve.py:137:101: E501 line too long (142 > 100 characters)
core\strategy\loss_anticipation_curve.py:147:101: E501 line too long (147 > 100 characters)
core\strategy\loss_anticipation_curve.py:215:101: E501 line too long (154 > 100 characters)
core\strategy\loss_anticipation_curve.py:225:101: E501 line too long (133 > 100 characters)
core\strategy\loss_anticipation_curve.py:229:101: E501 line too long (129 > 100 characters)
core\strategy\loss_anticipation_curve.py:277:101: E501 line too long (104 > 100 characters)
core\strategy\loss_anticipation_curve.py:303:101: E501 line too long (114 > 100 characters)
core\strategy\multi_phase_strategy_weight_tensor.py:1:1: D205 1 blank line required between summary line and description
core\strategy\multi_phase_strategy_weight_tensor.py:1:1: D301 Use r""" if any backslashes in a docstring
core\strategy\multi_phase_strategy_weight_tensor.py:1:1: D400 First line should end with a period
core\strategy\multi_phase_strategy_weight_tensor.py:85:101: E501 line too long (327 > 100 characters)
core\strategy\multi_phase_strategy_weight_tensor.py:101:101: E501 line too long (103 > 100 characters)
core\strategy\multi_phase_strategy_weight_tensor.py:167:101: E501 line too long (133 > 100 characters)
core\strategy\multi_phase_strategy_weight_tensor.py:175:101: E501 line too long (102 > 100 characters)
core\strategy\multi_phase_strategy_weight_tensor.py:199:101: E501 line too long (119 > 100 characters)
core\strategy\multi_phase_strategy_weight_tensor.py:233:101: E501 line too long (146 > 100 characters)
core\strategy\multi_phase_strategy_weight_tensor.py:263:101: E501 line too long (101 > 100 characters)
core\strategy\multi_phase_strategy_weight_tensor.py:291:101: E501 line too long (113 > 100 characters)
core\strategy\multi_phase_strategy_weight_tensor.py:293:101: E501 line too long (167 > 100 characters)
core\strategy\multi_phase_strategy_weight_tensor.py:317:101: E501 line too long (118 > 100 characters)
core\strategy\multi_phase_strategy_weight_tensor.py:323:101: E501 line too long (109 > 100 characters)
core\strategy\multi_phase_strategy_weight_tensor.py:343:101: E501 line too long (109 > 100 characters)
core\strategy\multi_phase_strategy_weight_tensor.py:353:101: E501 line too long (215 > 100 characters)
core\strategy\multi_phase_strategy_weight_tensor.py:371:101: E501 line too long (223 > 100 characters)
core\strategy\multi_phase_strategy_weight_tensor.py:389:101: E501 line too long (217 > 100 characters)
core\strategy\multi_phase_strategy_weight_tensor.py:405:101: E501 line too long (250 > 100 characters)
core\strategy\volume_weighted_hash_oscillator.py:1:1: D205 1 blank line required between summary line and description
core\strategy\volume_weighted_hash_oscillator.py:1:1: D301 Use r""" if any backslashes in a docstring
core\strategy\volume_weighted_hash_oscillator.py:1:1: D400 First line should end with a period
core\strategy\volume_weighted_hash_oscillator.py:75:101: E501 line too long (156 > 100 characters)
core\strategy\volume_weighted_hash_oscillator.py:111:101: E501 line too long (148 > 100 characters)
core\strategy\volume_weighted_hash_oscillator.py:143:101: E501 line too long (140 > 100 characters)
core\strategy\volume_weighted_hash_oscillator.py:149:101: E501 line too long (149 > 100 characters)
core\strategy\volume_weighted_hash_oscillator.py:161:101: E501 line too long (121 > 100 characters)
core\strategy\volume_weighted_hash_oscillator.py:287:101: E501 line too long (118 > 100 characters)
core\strategy\volume_weighted_hash_oscillator.py:333:101: E501 line too long (112 > 100 characters)
core\strategy\volume_weighted_hash_oscillator.py:343:101: E501 line too long (109 > 100 characters)
core\strategy\volume_weighted_hash_oscillator.py:347:101: E501 line too long (157 > 100 characters)
core\strategy\volume_weighted_hash_oscillator.py:361:101: E501 line too long (126 > 100 characters)
core\strategy\volume_weighted_hash_oscillator.py:381:101: E501 line too long (302 > 100 characters)
core\strategy\volume_weighted_hash_oscillator.py:437:101: E501 line too long (140 > 100 characters)
core\strategy\zygot_zalgo_entropy_dual_key_gate.py:1:1: D205 1 blank line required between summary line and description
core\strategy\zygot_zalgo_entropy_dual_key_gate.py:1:1: D301 Use r""" if any backslashes in a docstring
core\strategy\zygot_zalgo_entropy_dual_key_gate.py:1:1: D400 First line should end with a period
core\strategy\zygot_zalgo_entropy_dual_key_gate.py:63:101: E501 line too long (139 > 100 characters)
core\strategy\zygot_zalgo_entropy_dual_key_gate.py:65:101: E501 line too long (235 > 100 characters)
core\strategy\zygot_zalgo_entropy_dual_key_gate.py:79:101: E501 line too long (136 > 100 characters)
core\strategy\zygot_zalgo_entropy_dual_key_gate.py:101:101: E501 line too long (210 > 100 characters)
core\strategy\zygot_zalgo_entropy_dual_key_gate.py:117:101: E501 line too long (102 > 100 characters)
core\strategy\zygot_zalgo_entropy_dual_key_gate.py:125:101: E501 line too long (148 > 100 characters)
core\strategy\zygot_zalgo_entropy_dual_key_gate.py:151:101: E501 line too long (151 > 100 characters)
core\strategy\zygot_zalgo_entropy_dual_key_gate.py:159:101: E501 line too long (106 > 100 characters)
core\strategy\zygot_zalgo_entropy_dual_key_gate.py:175:101: E501 line too long (111 > 100 characters)
core\strategy\zygot_zalgo_entropy_dual_key_gate.py:195:101: E501 line too long (107 > 100 characters)
core\strategy\zygot_zalgo_entropy_dual_key_gate.py:259:101: E501 line too long (160 > 100 characters)
core\strategy\zygot_zalgo_entropy_dual_key_gate.py:269:101: E501 line too long (110 > 100 characters)
core\strategy\zygot_zalgo_entropy_dual_key_gate.py:333:101: E501 line too long (105 > 100 characters)
core\strategy\zygot_zalgo_entropy_dual_key_gate.py:339:101: E501 line too long (112 > 100 characters)
core\strategy\zygot_zalgo_entropy_dual_key_gate.py:389:101: E501 line too long (116 > 100 characters)
core\strategy\zygot_zalgo_entropy_dual_key_gate.py:401:101: E501 line too long (133 > 100 characters)
core\strategy\zygot_zalgo_entropy_dual_key_gate.py:417:101: E501 line too long (209 > 100 characters)
core\strategy\zygot_zalgo_entropy_dual_key_gate.py:425:101: E501 line too long (193 > 100 characters)
core\strategy\zygot_zalgo_entropy_dual_key_gate.py:427:101: E501 line too long (168 > 100 characters)
core\strategy\zygot_zalgo_entropy_dual_key_gate.py:431:101: E501 line too long (271 > 100 characters)
core\strategy_bit_mapper.py:1:1: D205 1 blank line required between summary line and description
core\strategy_bit_mapper.py:1:1: D301 Use r""" if any backslashes in a docstring
core\strategy_bit_mapper.py:1:1: D400 First line should end with a period
core\strategy_bit_mapper.py:109:101: E501 line too long (131 > 100 characters)
core\strategy_bit_mapper.py:147:101: E501 line too long (154 > 100 characters)
core\strategy_bit_mapper.py:307:101: E501 line too long (131 > 100 characters)
core\strategy_bit_mapper.py:349:101: E501 line too long (118 > 100 characters)
core\strategy_bit_mapper.py:379:101: E501 line too long (169 > 100 characters)
core\strategy_bit_mapper.py:465:101: E501 line too long (120 > 100 characters)
core\strategy_bit_mapper.py:479:101: E501 line too long (110 > 100 characters)
core\strategy_bit_mapper.py:513:101: E501 line too long (116 > 100 characters)
core\strategy_bit_mapper.py:523:101: E501 line too long (105 > 100 characters)
core\strategy_bit_mapper.py:547:101: E501 line too long (216 > 100 characters)
core\strategy_bit_mapper.py:555:101: E501 line too long (136 > 100 characters)
core\strategy_bit_mapper.py:557:101: E501 line too long (136 > 100 characters)
core\strategy_bit_mapper.py:567:101: E501 line too long (124 > 100 characters)
core\strategy_bit_mapper.py:581:101: E501 line too long (102 > 100 characters)
core\strategy_bit_mapper.py:587:101: E501 line too long (117 > 100 characters)
core\strategy_bit_mapper.py:597:101: E501 line too long (181 > 100 characters)
core\strategy_bit_mapper.py:639:101: E501 line too long (112 > 100 characters)
core\strategy_bit_mapper.py:645:101: E501 line too long (157 > 100 characters)
core\strategy_bit_mapper.py:655:101: E501 line too long (115 > 100 characters)
core\strategy_bit_mapper.py:665:101: E501 line too long (112 > 100 characters)
core\strategy_integration_bridge.py:1:1: D205 1 blank line required between summary line and description
core\strategy_integration_bridge.py:1:1: D301 Use r""" if any backslashes in a docstring
core\strategy_integration_bridge.py:1:1: D400 First line should end with a period
core\strategy_integration_bridge.py:87:101: E501 line too long (166 > 100 characters)
core\strategy_integration_bridge.py:171:101: E501 line too long (105 > 100 characters)
core\strategy_integration_bridge.py:273:101: E501 line too long (130 > 100 characters)
core\strategy_integration_bridge.py:303:101: E501 line too long (112 > 100 characters)
core\strategy_integration_bridge.py:311:101: E501 line too long (289 > 100 characters)
core\strategy_integration_bridge.py:319:101: E501 line too long (442 > 100 characters)
core\strategy_integration_bridge.py:531:101: E501 line too long (174 > 100 characters)
core\strategy_integration_bridge.py:573:101: E501 line too long (125 > 100 characters)
core\strategy_integration_bridge.py:595:101: E501 line too long (110 > 100 characters)
core\strategy_integration_bridge.py:629:101: E501 line too long (120 > 100 characters)
core\strategy_integration_bridge.py:651:101: E501 line too long (161 > 100 characters)
core\strategy_integration_bridge.py:729:101: E501 line too long (105 > 100 characters)
core\strategy_integration_bridge.py:837:101: E501 line too long (128 > 100 characters)
core\strategy_integration_bridge.py:901:101: E501 line too long (238 > 100 characters)
core\strategy_integration_bridge.py:1027:101: E501 line too long (123 > 100 characters)
core\strategy_integration_bridge.py:1035:101: E501 line too long (166 > 100 characters)
core\strategy_integration_bridge.py:1079:101: E501 line too long (135 > 100 characters)
core\strategy_integration_bridge.py:1117:101: E501 line too long (160 > 100 characters)
core\strategy_integration_bridge.py:1151:101: E501 line too long (168 > 100 characters)
core\strategy_integration_bridge.py:1161:101: E501 line too long (258 > 100 characters)
core\strategy_integration_bridge.py:1169:101: E501 line too long (192 > 100 characters)
core\strategy_integration_bridge.py:1187:101: E501 line too long (234 > 100 characters)
core\strategy_integration_bridge.py:1195:101: E501 line too long (115 > 100 characters)
core\strategy_integration_bridge.py:1203:101: E501 line too long (324 > 100 characters)
core\strategy_integration_bridge.py:1215:101: E501 line too long (416 > 100 characters)
core\strategy_integration_bridge.py:1229:101: E501 line too long (436 > 100 characters)
core\strategy_integration_bridge.py:1231:101: E501 line too long (128 > 100 characters)
core\strategy_integration_bridge.py:1237:101: E501 line too long (232 > 100 characters)
core\strategy_integration_bridge.py:1239:101: E501 line too long (580 > 100 characters)
core\strategy_integration_bridge.py:1247:101: E501 line too long (116 > 100 characters)
core\strategy_integration_bridge.py:1291:101: E501 line too long (293 > 100 characters)
core\strategy_integration_bridge.py:1293:101: E501 line too long (215 > 100 characters)
core\strategy_integration_bridge.py:1313:101: E501 line too long (127 > 100 characters)
core\strategy_integration_bridge.py:1319:101: E501 line too long (132 > 100 characters)
core\strategy_integration_bridge.py:1347:101: E501 line too long (293 > 100 characters)
core\strategy_integration_bridge.py:1357:101: E501 line too long (109 > 100 characters)
core\strategy_integration_bridge.py:1359:101: E501 line too long (137 > 100 characters)
core\strategy_logic.py:1:1: D205 1 blank line required between summary line and description
core\strategy_logic.py:1:1: D301 Use r""" if any backslashes in a docstring
core\strategy_logic.py:1:1: D400 First line should end with a period
core\strategy_logic.py:81:101: E501 line too long (137 > 100 characters)
core\strategy_logic.py:101:101: E501 line too long (131 > 100 characters)
core\strategy_logic.py:103:101: E501 line too long (101 > 100 characters)
core\strategy_logic.py:147:101: E501 line too long (486 > 100 characters)
core\strategy_logic.py:221:101: E501 line too long (158 > 100 characters)
core\strategy_logic.py:269:101: E501 line too long (295 > 100 characters)
core\strategy_logic.py:275:101: E501 line too long (124 > 100 characters)
core\strategy_logic.py:353:101: E501 line too long (169 > 100 characters)
core\strategy_logic.py:409:101: E501 line too long (259 > 100 characters)
core\strategy_logic.py:589:101: E501 line too long (118 > 100 characters)
core\strategy_logic.py:605:101: E501 line too long (116 > 100 characters)
core\strategy_logic.py:621:101: E501 line too long (103 > 100 characters)
core\strategy_logic.py:695:101: E501 line too long (104 > 100 characters)
core\strategy_logic.py:827:101: E501 line too long (158 > 100 characters)
core\strategy_logic.py:851:101: E501 line too long (108 > 100 characters)
core\strategy_logic.py:993:101: E501 line too long (190 > 100 characters)
core\strategy_logic.py:1015:101: E501 line too long (131 > 100 characters)
core\strategy_logic.py:1093:101: E501 line too long (140 > 100 characters)
core\strategy_logic.py:1119:101: E501 line too long (142 > 100 characters)
core\strategy_logic.py:1163:101: E501 line too long (129 > 100 characters)
core\strategy_logic.py:1193:101: E501 line too long (133 > 100 characters)
core\strategy_logic.py:1277:101: E501 line too long (131 > 100 characters)
core\strategy_logic.py:1281:101: E501 line too long (151 > 100 characters)
core\strategy_logic.py:1285:101: E501 line too long (164 > 100 characters)
core\strategy_logic.py:1309:101: E501 line too long (331 > 100 characters)
core\strategy_logic.py:1351:101: E501 line too long (284 > 100 characters)
core\trade_executor.py:1:1: D205 1 blank line required between summary line and description
core\trade_executor.py:1:1: D301 Use r""" if any backslashes in a docstring
core\trade_executor.py:1:1: D400 First line should end with a period
core\trade_executor.py:65:101: E501 line too long (120 > 100 characters)
core\trade_executor.py:95:101: E501 line too long (157 > 100 characters)
core\trade_executor.py:111:101: E501 line too long (118 > 100 characters)
core\trade_executor.py:135:101: E501 line too long (108 > 100 characters)
core\trade_executor.py:145:101: E501 line too long (148 > 100 characters)
core\trade_executor.py:235:101: E501 line too long (170 > 100 characters)
core\trade_executor.py:243:101: E501 line too long (135 > 100 characters)
core\trade_executor.py:259:101: E501 line too long (161 > 100 characters)
core\trade_executor.py:271:101: E501 line too long (103 > 100 characters)
core\trade_executor.py:297:101: E501 line too long (161 > 100 characters)
core\trade_executor.py:301:101: E501 line too long (189 > 100 characters)
core\trade_executor.py:319:101: E501 line too long (141 > 100 characters)
core\trade_executor.py:343:101: E501 line too long (117 > 100 characters)
core\trade_executor.py:349:101: E501 line too long (118 > 100 characters)
core\trading_engine_integration.py:1:1: D100 Missing docstring in public module
core\trading_engine_integration.py:13:1: I100 Import statements are in the wrong order. 'from core.clean_unified_math import UnifiedMathSystem' should be before 'import pandas' and in a different group.
core\trading_engine_integration.py:18:1: I201 Missing newline between import groups. 'from utils.price_bridge import PriceData, get_secure_price' is identified as Third Party and 'from core.strategy_logic import StrategyLogic' is identified as Third Party.
core\trading_engine_integration.py:37:1: D101 Missing docstring in public class
core\trading_engine_integration.py:46:1: D101 Missing docstring in public class
core\trading_engine_integration.py:57:1: D101 Missing docstring in public class
core\trading_engine_integration.py:65:1: D101 Missing docstring in public class
core\trading_engine_integration.py:103:1: D105 Missing docstring in magic method
core\trading_engine_integration.py:103:23: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:104:0: ANN204 Missing return type annotation for special method
core\trading_engine_integration.py:109:31: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:111:101: E501 line too long (112 > 100 characters)
core\trading_engine_integration.py:115:1: D102 Missing docstring in public method
core\trading_engine_integration.py:115:17: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:138:1: D101 Missing docstring in public class
core\trading_engine_integration.py:162:1: D105 Missing docstring in magic method
core\trading_engine_integration.py:162:23: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:163:0: ANN204 Missing return type annotation for special method
core\trading_engine_integration.py:168:34: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:175:1: D101 Missing docstring in public class
core\trading_engine_integration.py:177:1: D107 Missing docstring in __init__
core\trading_engine_integration.py:177:18: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:178:0: ANN204 Missing return type annotation for special method
core\trading_engine_integration.py:232:34: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:233:0: ANN202 Missing return type annotation for protected function
core\trading_engine_integration.py:282:36: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:283:0: ANN202 Missing return type annotation for protected function
core\trading_engine_integration.py:286:26: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:286:32: ANN001 Missing type annotation for function argument 'name'
core\trading_engine_integration.py:287:0: ANN204 Missing return type annotation for special method
core\trading_engine_integration.py:294:36: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:294:42: ANN001 Missing type annotation for function argument 'symbol'
core\trading_engine_integration.py:294:50: ANN001 Missing type annotation for function argument 'order_type'
core\trading_engine_integration.py:294:62: ANN001 Missing type annotation for function argument 'side'
core\trading_engine_integration.py:294:68: ANN001 Missing type annotation for function argument 'amount'
core\trading_engine_integration.py:294:76: ANN001 Missing type annotation for function argument 'price'
core\trading_engine_integration.py:295:0: ANN201 Missing return type annotation for public function
core\trading_engine_integration.py:346:42: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:347:0: ANN202 Missing return type annotation for protected function
core\trading_engine_integration.py:360:31: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:361:0: ANN202 Missing return type annotation for protected function
core\trading_engine_integration.py:396:1: D102 Missing docstring in public method
core\trading_engine_integration.py:396:30: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:470:9: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:501:38: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:531:9: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:562:9: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:593:1: D102 Missing docstring in public method
core\trading_engine_integration.py:593:29: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:639:26: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:655:28: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:663:35: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:729:35: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:769:33: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:770:0: ANN202 Missing return type annotation for protected function
core\trading_engine_integration.py:775:37: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:776:0: ANN202 Missing return type annotation for protected function
core\trading_engine_integration.py:797:1: D102 Missing docstring in public method
core\trading_engine_integration.py:797:36: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:809:1: D102 Missing docstring in public method
core\trading_engine_integration.py:809:29: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:810:0: ANN201 Missing return type annotation for public function
core\trading_engine_integration.py:861:1: D102 Missing docstring in public method
core\trading_engine_integration.py:861:28: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:862:0: ANN201 Missing return type annotation for public function
core\trading_engine_integration.py:871:40: ANN101 Missing type annotation for self in method
core\trading_engine_integration.py:923:1: D103 Missing docstring in public function
core\trading_engine_integration.py:924:0: ANN201 Missing return type annotation for public function
core\trading_engine_integration.py:942:1: D103 Missing docstring in public function
core\trading_engine_integration.py:943:0: ANN201 Missing return type annotation for public function
core\trading_engine_integration.py:959:1: D103 Missing docstring in public function
core\trading_engine_integration.py:960:0: ANN201 Missing return type annotation for public function
core\trading_engine_integration.py:977:1: S101 Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
core\trading_engine_integration.py:996:1: S101 Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
core\trading_engine_integration.py:1006:1: S101 Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
core\trading_engine_integration.py:1032:1: S101 Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
core\type_defs.py:1:1: D205 1 blank line required between summary line and description
core\type_defs.py:1:1: D301 Use r""" if any backslashes in a docstring
core\type_defs.py:1:1: D400 First line should end with a period
core\type_defs.py:89:101: E501 line too long (118 > 100 characters)
core\unified_api_coordinator.py:5:1: D205 1 blank line required between summary line and description
core\unified_api_coordinator.py:5:1: D400 First line should end with a period
core\unified_api_coordinator.py:19:18: ANN101 Missing type annotation for self in method
core\unified_api_coordinator.py:19:24: ANN001 Missing type annotation for function argument 'config'
core\unified_api_coordinator.py:19:36: ANN204 Missing return type annotation for special method
core\unified_api_coordinator.py:20:1: D202 No blank lines allowed after function docstring
core\unified_api_coordinator.py:26:30: ANN101 Missing type annotation for self in method
core\unified_api_coordinator.py:26:36: ANN001 Missing type annotation for function argument 'requests'
core\unified_api_coordinator.py:26:45: ANN201 Missing return type annotation for public function
core\unified_api_coordinator.py:27:1: D202 No blank lines allowed after function docstring
core\unified_math_system.py:5:1: D205 1 blank line required between summary line and description
core\unified_math_system.py:5:1: D400 First line should end with a period
core\unified_trading_pipeline.py:1:1: D205 1 blank line required between summary line and description
core\unified_trading_pipeline.py:1:1: D400 First line should end with a period
core\unified_trading_pipeline.py:52:1: E402 module level import not at top of file
core\unified_trading_pipeline.py:53:1: E402 module level import not at top of file
core\unified_trading_pipeline.py:54:1: E402 module level import not at top of file
core\unified_trading_pipeline.py:55:1: E402 module level import not at top of file
core\unified_trading_pipeline.py:56:1: E402 module level import not at top of file
core\unified_trading_pipeline.py:141:1: D205 1 blank line required between summary line and description
core\unified_trading_pipeline.py:161:18: ANN101 Missing type annotation for self in method
core\unified_trading_pipeline.py:161:24: ANN001 Missing type annotation for function argument 'config'
core\unified_trading_pipeline.py:161:36: ANN204 Missing return type annotation for special method
core\unified_trading_pipeline.py:162:1: D202 No blank lines allowed after function docstring
core\unified_trading_pipeline.py:200:32: ANN101 Missing type annotation for self in method
core\unified_trading_pipeline.py:201:1: D202 No blank lines allowed after function docstring
core\unified_trading_pipeline.py:254:9: ANN101 Missing type annotation for self in method
core\unified_trading_pipeline.py:261:1: D202 No blank lines allowed after function docstring
core\unified_trading_pipeline.py:261:1: D205 1 blank line required between summary line and description
core\unified_trading_pipeline.py:261:1: D412 No blank lines allowed between a section header and its content
core\unified_trading_pipeline.py:314:13: F841 local variable 'ghost_state' is assigned to but never used
core\unified_trading_pipeline.py:336:39: ANN101 Missing type annotation for self in method
core\unified_trading_pipeline.py:337:1: D202 No blank lines allowed after function docstring
core\unified_trading_pipeline.py:343:38: ANN101 Missing type annotation for self in method
core\unified_trading_pipeline.py:344:1: D202 No blank lines allowed after function docstring
core\unified_trading_pipeline.py:351:35: ANN201 Missing return type annotation for public function
core\unified_trading_pipeline.py:352:1: D202 No blank lines allowed after function docstring
core\unified_trading_pipeline.py:364:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
core\unified_trading_pipeline.py:366:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
core\vector_fortification_matrix.py:1:1: D205 1 blank line required between summary line and description
core\vector_fortification_matrix.py:1:1: D301 Use r""" if any backslashes in a docstring
core\vector_fortification_matrix.py:1:1: D400 First line should end with a period
core\vector_fortification_matrix.py:45:101: E501 line too long (101 > 100 characters)
core\vector_fortification_matrix.py:61:101: E501 line too long (107 > 100 characters)
core\vector_fortification_matrix.py:83:101: E501 line too long (206 > 100 characters)
core\vector_fortification_matrix.py:385:101: E501 line too long (403 > 100 characters)
core\vector_fortification_matrix.py:419:101: E501 line too long (121 > 100 characters)
core\vector_fortification_matrix.py:427:101: E501 line too long (136 > 100 characters)
core\vecu_core.py:1:1: D205 1 blank line required between summary line and description
core\vecu_core.py:1:1: D301 Use r""" if any backslashes in a docstring
core\vecu_core.py:1:1: D400 First line should end with a period
core\vecu_core.py:69:101: E501 line too long (213 > 100 characters)
core\vecu_core.py:291:101: E501 line too long (123 > 100 characters)
core\warp_sync_core.py:1:1: D205 1 blank line required between summary line and description
core\warp_sync_core.py:1:1: D301 Use r""" if any backslashes in a docstring
core\warp_sync_core.py:1:1: D400 First line should end with a period
core\warp_sync_core.py:45:101: E501 line too long (108 > 100 characters)
core\warp_sync_core.py:55:101: E501 line too long (218 > 100 characters)
core\warp_sync_core.py:57:101: E501 line too long (103 > 100 characters)
core\warp_sync_core.py:59:101: E501 line too long (674 > 100 characters)
core\warp_sync_core.py:77:101: E501 line too long (112 > 100 characters)
core\warp_sync_core.py:85:101: E501 line too long (218 > 100 characters)
core\warp_sync_core.py:147:101: E501 line too long (138 > 100 characters)
core\warp_sync_core.py:161:101: E501 line too long (123 > 100 characters)
core\warp_sync_core.py:185:101: E501 line too long (101 > 100 characters)
core\warp_sync_core.py:215:101: E501 line too long (156 > 100 characters)
core\warp_sync_core.py:247:101: E501 line too long (148 > 100 characters)
core\warp_sync_core.py:259:101: E501 line too long (113 > 100 characters)
core\warp_sync_core.py:273:101: E501 line too long (130 > 100 characters)
core\warp_sync_core.py:291:101: E501 line too long (117 > 100 characters)
core\warp_sync_core.py:307:101: E501 line too long (137 > 100 characters)
core\warp_sync_core.py:347:101: E501 line too long (101 > 100 characters)
core\warp_sync_core.py:361:101: E501 line too long (337 > 100 characters)
core\warp_sync_core.py:481:101: E501 line too long (111 > 100 characters)
core\warp_sync_core.py:489:101: E501 line too long (145 > 100 characters)
core\warp_sync_core.py:511:101: E501 line too long (104 > 100 characters)
core\warp_sync_core.py:513:101: E501 line too long (203 > 100 characters)
core\warp_sync_core.py:591:101: E501 line too long (260 > 100 characters)
core\warp_sync_core.py:595:101: E501 line too long (123 > 100 characters)
core\warp_sync_core.py:627:101: E501 line too long (118 > 100 characters)
core\warp_sync_core.py:629:101: E501 line too long (132 > 100 characters)
core\zbe_core.py:1:1: D205 1 blank line required between summary line and description
core\zbe_core.py:1:1: D301 Use r""" if any backslashes in a docstring
core\zbe_core.py:1:1: D400 First line should end with a period
core\zbe_core.py:71:101: E501 line too long (356 > 100 characters)
core\zbe_core.py:185:101: E501 line too long (197 > 100 characters)
core\zbe_core.py:249:101: E501 line too long (124 > 100 characters)
core\zbe_core.py:339:101: E501 line too long (104 > 100 characters)
core\zbe_core.py:451:101: E501 line too long (151 > 100 characters)
core\zbe_core.py:645:101: E501 line too long (315 > 100 characters)
core\zbe_core.py:655:101: E501 line too long (151 > 100 characters)
core\zbe_core.py:741:101: E501 line too long (172 > 100 characters)
core\zbe_core.py:747:101: E501 line too long (153 > 100 characters)
core\zbe_core.py:753:101: E501 line too long (123 > 100 characters)
core\zbe_core.py:759:101: E501 line too long (132 > 100 characters)
core\zbe_core.py:765:101: E501 line too long (153 > 100 characters)
core\zbe_core.py:771:101: E501 line too long (111 > 100 characters)
core\zbe_core.py:787:101: E501 line too long (137 > 100 characters)
core\zpe_core.py:1:1: D205 1 blank line required between summary line and description
core\zpe_core.py:1:1: D301 Use r""" if any backslashes in a docstring
core\zpe_core.py:1:1: D400 First line should end with a period
core\zpe_core.py:205:101: E501 line too long (117 > 100 characters)
core\zpe_core.py:237:39: W291 trailing whitespace
core\zpe_core.py:347:101: E501 line too long (103 > 100 characters)
core\zpe_core.py:377:101: E501 line too long (124 > 100 characters)
core\zpe_core.py:435:101: E501 line too long (129 > 100 characters)
core\zpe_core.py:445:101: E501 line too long (167 > 100 characters)
core\zpe_core.py:491:101: E501 line too long (251 > 100 characters)
core\zpe_core.py:519:101: E501 line too long (172 > 100 characters)
schwabot\__init__.py:1:1: D104 Missing docstring in public package
schwabot\__init__.py:3:1: I202 Additional newline in a group of imports. 'import platform' is identified as Stdlib and 'import logging' is identified as Stdlib.
schwabot\__init__.py:5:1: I202 Additional newline in a group of imports. 'import sys' is identified as Stdlib and 'import platform' is identified as Stdlib.
schwabot\__init__.py:7:1: I202 Additional newline in a group of imports. 'from datetime import datetime' is identified as Stdlib and 'import sys' is identified as Stdlib.
schwabot\__init__.py:9:1: I202 Additional newline in a group of imports. 'from typing import Any, Dict, List, Optional' is identified as Stdlib and 'from datetime import datetime' is identified as Stdlib.
schwabot\__init__.py:27:1: I202 Additional newline in a group of imports. 'from .core import advanced_settings_engine, advanced_tensor_algebra, clean_math_foundation, clean_profit_vectorization, clean_trading_pipeline, clean_unified_math, pure_profit_calculator, speed_lattice_trading_integration, trading_engine_integration, unified_api_coordinator' is identified as Application Relative and 'from . import core' is identified as Application Relative.
schwabot\__init__.py:173:1: D205 1 blank line required between summary line and description
schwabot\__init__.py:193:18: ANN101 Missing type annotation for self in method
schwabot\__init__.py:193:23: ANN204 Missing return type annotation for special method
schwabot\__init__.py:194:1: D202 No blank lines allowed after function docstring
schwabot\__init__.py:210:28: ANN101 Missing type annotation for self in method
schwabot\__init__.py:211:1: D202 No blank lines allowed after function docstring
schwabot\__init__.py:211:1: D205 1 blank line required between summary line and description
schwabot\__init__.py:331:37: ANN101 Missing type annotation for self in method
schwabot\__init__.py:332:1: D202 No blank lines allowed after function docstring
schwabot\__init__.py:393:28: ANN101 Missing type annotation for self in method
schwabot\__init__.py:394:1: D202 No blank lines allowed after function docstring
schwabot\__init__.py:394:1: D205 1 blank line required between summary line and description
schwabot\__init__.py:425:25: ANN101 Missing type annotation for self in method
schwabot\__init__.py:426:1: D202 No blank lines allowed after function docstring
schwabot\__init__.py:426:1: D205 1 blank line required between summary line and description
schwabot\__init__.py:459:26: ANN101 Missing type annotation for self in method
schwabot\__init__.py:460:1: D202 No blank lines allowed after function docstring
schwabot\__init__.py:471:26: ANN101 Missing type annotation for self in method
schwabot\__init__.py:472:1: D202 No blank lines allowed after function docstring
schwabot\__init__.py:472:1: D205 1 blank line required between summary line and description
schwabot\__init__.py:515:1: D202 No blank lines allowed after function docstring
schwabot\__init__.py:515:1: D205 1 blank line required between summary line and description
schwabot\__init__.py:557:1: D202 No blank lines allowed after function docstring
schwabot\ai_oracles\profit_oracle.py:3:1: D400 First line should end with a period
schwabot\ai_oracles\profit_oracle.py:32:1: I202 Additional newline in a group of imports. 'import time' is identified as Stdlib and 'import logging' is identified as Stdlib.
schwabot\ai_oracles\profit_oracle.py:34:1: I202 Additional newline in a group of imports. 'from collections import deque' is identified as Stdlib and 'import time' is identified as Stdlib.
schwabot\ai_oracles\profit_oracle.py:36:1: I202 Additional newline in a group of imports. 'from dataclasses import dataclass, field' is identified as Stdlib and 'from collections import deque' is identified as Stdlib.
schwabot\ai_oracles\profit_oracle.py:38:1: I202 Additional newline in a group of imports. 'from datetime import datetime, timedelta' is identified as Stdlib and 'from dataclasses import dataclass, field' is identified as Stdlib.
schwabot\ai_oracles\profit_oracle.py:40:1: I202 Additional newline in a group of imports. 'from typing import Any, Dict, List, Optional' is identified as Stdlib and 'from datetime import datetime, timedelta' is identified as Stdlib.
schwabot\ai_oracles\profit_oracle.py:92:1: D200 One-line docstring should fit on one line with quotes
schwabot\ai_oracles\profit_oracle.py:98:18: ANN101 Missing type annotation for self in method
schwabot\ai_oracles\profit_oracle.py:98:23: ANN204 Missing return type annotation for special method
schwabot\ai_oracles\profit_oracle.py:99:1: D200 One-line docstring should fit on one line with quotes
schwabot\ai_oracles\profit_oracle.py:99:1: D202 No blank lines allowed after function docstring
schwabot\ai_oracles\profit_oracle.py:99:1: D401 First line should be in imperative mood
schwabot\ai_oracles\profit_oracle.py:121:25: ANN101 Missing type annotation for self in method
schwabot\ai_oracles\profit_oracle.py:122:1: D202 No blank lines allowed after function docstring
schwabot\ai_oracles\profit_oracle.py:122:1: D205 1 blank line required between summary line and description
schwabot\ai_oracles\profit_oracle.py:122:1: D401 First line should be in imperative mood
schwabot\ai_oracles\profit_oracle.py:122:1: D412 No blank lines allowed between a section header and its content
schwabot\ai_oracles\profit_oracle.py:130:101: E501 line too long (103 > 100 characters)
schwabot\ai_oracles\profit_oracle.py:211:101: E501 line too long (135 > 100 characters)
schwabot\ai_oracles\profit_oracle.py:222:34: ANN101 Missing type annotation for self in method
schwabot\ai_oracles\profit_oracle.py:223:1: D202 No blank lines allowed after function docstring
schwabot\ai_oracles\profit_oracle.py:223:1: D205 1 blank line required between summary line and description
schwabot\ai_oracles\profit_oracle.py:223:1: D401 First line should be in imperative mood
schwabot\ai_oracles\profit_oracle.py:223:1: D412 No blank lines allowed between a section header and its content
schwabot\ai_oracles\profit_oracle.py:288:101: E501 line too long (156 > 100 characters)
schwabot\alpha_encryption.py:1:1: D100 Missing docstring in public module
schwabot\alpha_encryption.py:11:93: W291 trailing whitespace
schwabot\alpha_encryption.py:17:89: W291 trailing whitespace
schwabot\alpha_encryption.py:19:94: W291 trailing whitespace
schwabot\alpha_encryption.py:25:96: W291 trailing whitespace
schwabot\alpha_encryption.py:27:97: W291 trailing whitespace
schwabot\alpha_encryption.py:33:95: W291 trailing whitespace
schwabot\alpha_encryption.py:53:1: D400 First line should end with a period
schwabot\alpha_encryption.py:64:1: D400 First line should end with a period
schwabot\alpha_encryption.py:79:1: D400 First line should end with a period
schwabot\alpha_encryption.py:94:1: D400 First line should end with a period
schwabot\alpha_encryption.py:109:1: D400 First line should end with a period
schwabot\alpha_encryption.py:127:1: D205 1 blank line required between summary line and description
schwabot\alpha_encryption.py:127:1: D400 First line should end with a period
schwabot\alpha_encryption.py:139:1: D107 Missing docstring in __init__
schwabot\alpha_encryption.py:139:18: ANN101 Missing type annotation for self in method
schwabot\alpha_encryption.py:140:0: ANN204 Missing return type annotation for special method
schwabot\alpha_encryption.py:145:36: ANN101 Missing type annotation for self in method
schwabot\alpha_encryption.py:146:1: D202 No blank lines allowed after function docstring
schwabot\alpha_encryption.py:146:1: D400 First line should end with a period
schwabot\alpha_encryption.py:162:39: ANN101 Missing type annotation for self in method
schwabot\alpha_encryption.py:163:1: D202 No blank lines allowed after function docstring
schwabot\alpha_encryption.py:163:1: D400 First line should end with a period
schwabot\alpha_encryption.py:167:17: ANN101 Missing type annotation for self in method
schwabot\alpha_encryption.py:168:1: D202 No blank lines allowed after function docstring
schwabot\alpha_encryption.py:168:1: D400 First line should end with a period
schwabot\alpha_encryption.py:194:14: N806 variable 'C' in function should be lowercase
schwabot\alpha_encryption.py:236:1: D205 1 blank line required between summary line and description
schwabot\alpha_encryption.py:236:1: D400 First line should end with a period
schwabot\alpha_encryption.py:248:1: D107 Missing docstring in __init__
schwabot\alpha_encryption.py:248:18: ANN101 Missing type annotation for self in method
schwabot\alpha_encryption.py:249:0: ANN204 Missing return type annotation for special method
schwabot\alpha_encryption.py:253:9: ANN101 Missing type annotation for self in method
schwabot\alpha_encryption.py:255:1: D202 No blank lines allowed after function docstring
schwabot\alpha_encryption.py:255:1: D400 First line should end with a period
schwabot\alpha_encryption.py:291:31: ANN101 Missing type annotation for self in method
schwabot\alpha_encryption.py:292:1: D202 No blank lines allowed after function docstring
schwabot\alpha_encryption.py:292:1: D400 First line should end with a period
schwabot\alpha_encryption.py:302:37: ANN101 Missing type annotation for self in method
schwabot\alpha_encryption.py:303:1: D202 No blank lines allowed after function docstring
schwabot\alpha_encryption.py:303:1: D400 First line should end with a period
schwabot\alpha_encryption.py:315:38: ANN101 Missing type annotation for self in method
schwabot\alpha_encryption.py:316:1: D202 No blank lines allowed after function docstring
schwabot\alpha_encryption.py:316:1: D400 First line should end with a period
schwabot\alpha_encryption.py:328:17: ANN101 Missing type annotation for self in method
schwabot\alpha_encryption.py:329:1: D202 No blank lines allowed after function docstring
schwabot\alpha_encryption.py:329:1: D400 First line should end with a period
schwabot\alpha_encryption.py:355:1: D205 1 blank line required between summary line and description
schwabot\alpha_encryption.py:355:1: D400 First line should end with a period
schwabot\alpha_encryption.py:367:1: D107 Missing docstring in __init__
schwabot\alpha_encryption.py:367:18: ANN101 Missing type annotation for self in method
schwabot\alpha_encryption.py:368:0: ANN204 Missing return type annotation for special method
schwabot\alpha_encryption.py:376:9: ANN101 Missing type annotation for self in method
schwabot\alpha_encryption.py:378:1: D202 No blank lines allowed after function docstring
schwabot\alpha_encryption.py:378:1: D400 First line should end with a period
schwabot\alpha_encryption.py:404:16: B007 Loop control variable 'freq' not used within the loop body. If this is intended, start the name with an underscore.
schwabot\alpha_encryption.py:421:9: ANN101 Missing type annotation for self in method
schwabot\alpha_encryption.py:423:1: D202 No blank lines allowed after function docstring
schwabot\alpha_encryption.py:423:1: D400 First line should end with a period
schwabot\alpha_encryption.py:447:33: ANN101 Missing type annotation for self in method
schwabot\alpha_encryption.py:448:1: D202 No blank lines allowed after function docstring
schwabot\alpha_encryption.py:448:1: D400 First line should end with a period
schwabot\alpha_encryption.py:474:17: ANN101 Missing type annotation for self in method
schwabot\alpha_encryption.py:475:1: D202 No blank lines allowed after function docstring
schwabot\alpha_encryption.py:475:1: D400 First line should end with a period
schwabot\alpha_encryption.py:501:1: D205 1 blank line required between summary line and description
schwabot\alpha_encryption.py:501:1: D400 First line should end with a period
schwabot\alpha_encryption.py:521:1: D107 Missing docstring in __init__
schwabot\alpha_encryption.py:521:18: ANN101 Missing type annotation for self in method
schwabot\alpha_encryption.py:522:0: ANN204 Missing return type annotation for special method
schwabot\alpha_encryption.py:538:9: ANN101 Missing type annotation for self in method
schwabot\alpha_encryption.py:540:1: D202 No blank lines allowed after function docstring
schwabot\alpha_encryption.py:540:1: D400 First line should end with a period
schwabot\alpha_encryption.py:597:9: ANN101 Missing type annotation for self in method
schwabot\alpha_encryption.py:599:1: D202 No blank lines allowed after function docstring
schwabot\alpha_encryption.py:599:1: D400 First line should end with a period
schwabot\alpha_encryption.py:642:101: E501 line too long (124 > 100 characters)
schwabot\alpha_encryption.py:655:9: ANN101 Missing type annotation for self in method
schwabot\alpha_encryption.py:659:1: D202 No blank lines allowed after function docstring
schwabot\alpha_encryption.py:659:1: D205 1 blank line required between summary line and description
schwabot\alpha_encryption.py:659:1: D400 First line should end with a period
schwabot\alpha_encryption.py:695:31: ANN101 Missing type annotation for self in method
schwabot\alpha_encryption.py:696:1: D202 No blank lines allowed after function docstring
schwabot\alpha_encryption.py:696:1: D400 First line should end with a period
schwabot\alpha_encryption.py:725:41: ANN101 Missing type annotation for self in method
schwabot\alpha_encryption.py:726:1: D202 No blank lines allowed after function docstring
schwabot\alpha_encryption.py:726:1: D400 First line should end with a period
schwabot\alpha_encryption.py:754:1: D202 No blank lines allowed after function docstring
schwabot\alpha_encryption.py:754:1: D400 First line should end with a period
schwabot\alpha_encryption.py:766:1: D202 No blank lines allowed after function docstring
schwabot\alpha_encryption.py:766:1: D400 First line should end with a period
schwabot\alpha_encryption.py:766:1: D401 First line should be in imperative mood; try rephrasing
schwabot\alpha_encryption.py:774:1: D202 No blank lines allowed after function docstring
schwabot\alpha_encryption.py:774:1: D400 First line should end with a period
schwabot\alpha_encryption.py:774:1: D401 First line should be in imperative mood; try rephrasing
schwabot\cli.py:210:13: E999 IndentationError: unexpected indent
schwabot\core\__init__.py:79:24: ANN201 Missing return type annotation for public function
schwabot\core\__init__.py:93:33: ANN001 Missing type annotation for function argument 'initial_capital'
schwabot\core\__init__.py:93:58: ANN201 Missing return type annotation for public function
schwabot\core\adaptive_immunity_vector.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\adaptive_immunity_vector.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\adaptive_immunity_vector.py:1:1: D400 First line should end with a period
schwabot\core\adaptive_immunity_vector.py:45:101: E501 line too long (119 > 100 characters)
schwabot\core\adaptive_immunity_vector.py:61:101: E501 line too long (106 > 100 characters)
schwabot\core\adaptive_immunity_vector.py:99:101: E501 line too long (189 > 100 characters)
schwabot\core\adaptive_immunity_vector.py:241:101: E501 line too long (114 > 100 characters)
schwabot\core\adaptive_immunity_vector.py:385:101: E501 line too long (128 > 100 characters)
schwabot\core\adaptive_immunity_vector.py:411:101: E501 line too long (360 > 100 characters)
schwabot\core\adaptive_immunity_vector.py:463:101: E501 line too long (146 > 100 characters)
schwabot\core\adaptive_profit_cycle_function.py:171:10: E999 SyntaxError: unmatched ')'
schwabot\core\adaptive_trainer.py:215:87: E999 SyntaxError: unmatched ')'
schwabot\core\advanced_dualistic_trading_execution_system.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\advanced_dualistic_trading_execution_system.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\advanced_dualistic_trading_execution_system.py:1:1: D400 First line should end with a period
schwabot\core\advanced_dualistic_trading_execution_system.py:183:101: E501 line too long (123 > 100 characters)
schwabot\core\advanced_dualistic_trading_execution_system.py:203:101: E501 line too long (150 > 100 characters)
schwabot\core\advanced_dualistic_trading_execution_system.py:223:101: E501 line too long (119 > 100 characters)
schwabot\core\advanced_dualistic_trading_execution_system.py:393:101: E501 line too long (109 > 100 characters)
schwabot\core\advanced_dualistic_trading_execution_system.py:477:101: E501 line too long (222 > 100 characters)
schwabot\core\advanced_dualistic_trading_execution_system.py:549:101: E501 line too long (126 > 100 characters)
schwabot\core\advanced_dualistic_trading_execution_system.py:577:101: E501 line too long (293 > 100 characters)
schwabot\core\advanced_dualistic_trading_execution_system.py:579:101: E501 line too long (145 > 100 characters)
schwabot\core\advanced_dualistic_trading_execution_system.py:581:101: E501 line too long (153 > 100 characters)
schwabot\core\advanced_dualistic_trading_execution_system.py:617:101: E501 line too long (120 > 100 characters)
schwabot\core\advanced_dualistic_trading_execution_system.py:975:101: E501 line too long (127 > 100 characters)
schwabot\core\advanced_dualistic_trading_execution_system.py:1077:101: E501 line too long (126 > 100 characters)
schwabot\core\advanced_dualistic_trading_execution_system.py:1165:101: E501 line too long (128 > 100 characters)
schwabot\core\advanced_dualistic_trading_execution_system.py:1267:101: E501 line too long (120 > 100 characters)
schwabot\core\advanced_dualistic_trading_execution_system.py:1357:101: E501 line too long (107 > 100 characters)
schwabot\core\advanced_dualistic_trading_execution_system.py:1401:101: E501 line too long (112 > 100 characters)
schwabot\core\advanced_dualistic_trading_execution_system.py:1503:101: E501 line too long (132 > 100 characters)
schwabot\core\advanced_dualistic_trading_execution_system.py:1795:101: E501 line too long (187 > 100 characters)
schwabot\core\advanced_dualistic_trading_execution_system.py:1803:101: E501 line too long (254 > 100 characters)
schwabot\core\advanced_dualistic_trading_execution_system.py:1805:101: E501 line too long (134 > 100 characters)
schwabot\core\advanced_dualistic_trading_execution_system.py:1821:101: E501 line too long (119 > 100 characters)
schwabot\core\advanced_dualistic_trading_execution_system.py:1827:101: E501 line too long (140 > 100 characters)
schwabot\core\advanced_dualistic_trading_execution_system.py:1831:101: E501 line too long (175 > 100 characters)
schwabot\core\advanced_dualistic_trading_execution_system.py:1853:101: E501 line too long (150 > 100 characters)
schwabot\core\advanced_dualistic_trading_execution_system.py:1889:101: E501 line too long (238 > 100 characters)
schwabot\core\advanced_dualistic_trading_execution_system.py:1893:101: E501 line too long (320 > 100 characters)
schwabot\core\advanced_settings_engine.py:3:1: D205 1 blank line required between summary line and description
schwabot\core\advanced_settings_engine.py:20:1: I202 Additional newline in a group of imports. 'import logging' is identified as Stdlib and 'import json' is identified as Stdlib.
schwabot\core\advanced_settings_engine.py:22:1: I202 Additional newline in a group of imports. 'from dataclasses import dataclass' is identified as Stdlib and 'import logging' is identified as Stdlib.
schwabot\core\advanced_settings_engine.py:24:1: I202 Additional newline in a group of imports. 'from pathlib import Path' is identified as Stdlib and 'from dataclasses import dataclass' is identified as Stdlib.
schwabot\core\advanced_settings_engine.py:26:1: I202 Additional newline in a group of imports. 'from threading import Lock' is identified as Stdlib and 'from pathlib import Path' is identified as Stdlib.
schwabot\core\advanced_settings_engine.py:28:1: I202 Additional newline in a group of imports. 'from typing import Any, Callable, Dict, Optional' is identified as Stdlib and 'from threading import Lock' is identified as Stdlib.
schwabot\core\advanced_settings_engine.py:52:18: ANN101 Missing type annotation for self in method
schwabot\core\advanced_settings_engine.py:52:75: ANN204 Missing return type annotation for special method
schwabot\core\advanced_settings_engine.py:53:1: D202 No blank lines allowed after function docstring
schwabot\core\advanced_settings_engine.py:53:1: D401 First line should be in imperative mood
schwabot\core\advanced_settings_engine.py:66:9: ANN101 Missing type annotation for self in method
schwabot\core\advanced_settings_engine.py:69:9: ANN401 Dynamically typed expressions (typing.Any) are disallowed
schwabot\core\advanced_settings_engine.py:73:1: D202 No blank lines allowed after function docstring
schwabot\core\advanced_settings_engine.py:73:1: D401 First line should be in imperative mood
schwabot\core\advanced_settings_engine.py:87:21: ANN101 Missing type annotation for self in method
schwabot\core\advanced_settings_engine.py:88:1: D202 No blank lines allowed after function docstring
schwabot\core\advanced_settings_engine.py:88:1: D401 First line should be in imperative mood
schwabot\core\advanced_settings_engine.py:92:21: ANN101 Missing type annotation for self in method
schwabot\core\advanced_settings_engine.py:92:38: ANN401 Dynamically typed expressions (typing.Any) are disallowed
schwabot\core\advanced_settings_engine.py:93:1: D202 No blank lines allowed after function docstring
schwabot\core\advanced_settings_engine.py:93:1: D401 First line should be in imperative mood
schwabot\core\advanced_settings_engine.py:106:101: E501 line too long (108 > 100 characters)
schwabot\core\advanced_settings_engine.py:123:29: ANN101 Missing type annotation for self in method
schwabot\core\advanced_settings_engine.py:124:1: D202 No blank lines allowed after function docstring
schwabot\core\advanced_settings_engine.py:144:28: ANN101 Missing type annotation for self in method
schwabot\core\advanced_settings_engine.py:145:1: D202 No blank lines allowed after function docstring
schwabot\core\advanced_tensor_algebra.py:3:1: D205 1 blank line required between summary line and description
schwabot\core\advanced_tensor_algebra.py:20:1: I202 Additional newline in a group of imports. 'from typing import List, Tuple' is identified as Stdlib and 'import logging' is identified as Stdlib.
schwabot\core\advanced_tensor_algebra.py:36:1: D200 One-line docstring should fit on one line with quotes
schwabot\core\advanced_tensor_algebra.py:36:1: D202 No blank lines allowed after function docstring
schwabot\core\advanced_tensor_algebra.py:36:1: D401 First line should be in imperative mood
schwabot\core\advanced_tensor_algebra.py:50:1: D200 One-line docstring should fit on one line with quotes
schwabot\core\advanced_tensor_algebra.py:50:1: D202 No blank lines allowed after function docstring
schwabot\core\advanced_tensor_algebra.py:50:1: D401 First line should be in imperative mood
schwabot\core\advanced_tensor_algebra.py:74:1: D200 One-line docstring should fit on one line with quotes
schwabot\core\advanced_tensor_algebra.py:74:1: D202 No blank lines allowed after function docstring
schwabot\core\advanced_tensor_algebra.py:84:10: N806 variable 'U' in function should be lowercase
schwabot\core\advanced_tensor_algebra.py:84:10: N806 variable 'Vh' in function should be lowercase
schwabot\core\advanced_tensor_algebra.py:92:1: D202 No blank lines allowed after function docstring
schwabot\core\advanced_tensor_algebra.py:92:1: D400 First line should end with a period
schwabot\core\advanced_tensor_algebra.py:92:1: D401 First line should be in imperative mood
schwabot\core\advanced_tensor_algebra.py:92:1: D402 First line should not be the function's "signature"
schwabot\core\advanced_tensor_algebra.py:112:1: D202 No blank lines allowed after function docstring
schwabot\core\advanced_tensor_algebra.py:112:1: D400 First line should end with a period
schwabot\core\advanced_tensor_algebra.py:112:1: D401 First line should be in imperative mood
schwabot\core\api\__init__.py:1:1: D104 Missing docstring in public package
schwabot\core\api\cache_sync.py:35:18: ANN101 Missing type annotation for self in method
schwabot\core\api\cache_sync.py:45:21: ANN101 Missing type annotation for self in method
schwabot\core\api\cache_sync.py:55:20: ANN101 Missing type annotation for self in method
schwabot\core\api\cache_sync.py:68:25: ANN101 Missing type annotation for self in method
schwabot\core\api\cache_sync.py:69:1: D401 First line should be in imperative mood; try rephrasing
schwabot\core\api\cache_sync.py:77:34: ANN101 Missing type annotation for self in method
schwabot\core\api\data_models.py:3:1: D400 First line should end with a period
schwabot\core\api\exchange_connection.py:1:1: D100 Missing docstring in public module
schwabot\core\api\exchange_connection.py:30:18: ANN101 Missing type annotation for self in method
schwabot\core\api\exchange_connection.py:30:76: ANN204 Missing return type annotation for special method
schwabot\core\api\exchange_connection.py:31:1: D401 First line should be in imperative mood
schwabot\core\api\exchange_connection.py:58:23: ANN101 Missing type annotation for self in method
schwabot\core\api\exchange_connection.py:59:1: D401 First line should be in imperative mood
schwabot\core\api\exchange_connection.py:108:26: ANN101 Missing type annotation for self in method
schwabot\core\api\exchange_connection.py:108:31: ANN201 Missing return type annotation for public function
schwabot\core\api\exchange_connection.py:109:1: D401 First line should be in imperative mood
schwabot\core\api\exchange_connection.py:120:31: ANN101 Missing type annotation for self in method
schwabot\core\api\exchange_connection.py:121:1: D401 First line should be in imperative mood
schwabot\core\api\exchange_connection.py:161:27: ANN101 Missing type annotation for self in method
schwabot\core\api\exchange_connection.py:198:27: ANN101 Missing type annotation for self in method
schwabot\core\api\exchange_connection.py:199:1: D401 First line should be in imperative mood
schwabot\core\api\exchange_connection.py:218:34: ANN101 Missing type annotation for self in method
schwabot\core\api\exchange_connection.py:219:1: D401 First line should be in imperative mood
schwabot\core\api\exchange_connection.py:239:32: ANN101 Missing type annotation for self in method
schwabot\core\api\exchange_connection.py:240:1: D401 First line should be in imperative mood
schwabot\core\api\handlers\__init__.py:1:1: D400 First line should end with a period
schwabot\core\api\handlers\__init__.py:4:101: E501 line too long (102 > 100 characters)
schwabot\core\api\handlers\alt_fear_greed.py:1:1: D100 Missing docstring in public module
schwabot\core\api\handlers\alt_fear_greed.py:9:1: I201 Missing newline between import groups. 'import requests' is identified as Third Party and 'import aiohttp' is identified as Third Party.
schwabot\core\api\handlers\alt_fear_greed.py:21:5: F811 redefinition of unused 'aiohttp' from line 8
schwabot\core\api\handlers\alt_fear_greed.py:26:5: F811 redefinition of unused 'requests' from line 9
schwabot\core\api\handlers\alt_fear_greed.py:35:1: D101 Missing docstring in public class
schwabot\core\api\handlers\alt_fear_greed.py:40:26: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\alt_fear_greed.py:40:47: ANN401 Dynamically typed expressions (typing.Any) are disallowed
schwabot\core\api\handlers\alt_fear_greed.py:54:26: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\alt_fear_greed.py:54:32: ANN401 Dynamically typed expressions (typing.Any) are disallowed
schwabot\core\api\handlers\base_handler.py:1:1: D100 Missing docstring in public module
schwabot\core\api\handlers\base_handler.py:13:1: E265 block comment should start with '# '
schwabot\core\api\handlers\base_handler.py:25:5: F811 redefinition of unused 'aiohttp' from line 11
schwabot\core\api\handlers\base_handler.py:44:1: D107 Missing docstring in __init__
schwabot\core\api\handlers\base_handler.py:44:18: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\base_handler.py:44:49: B008 Do not perform function calls in argument defaults.  The call is performed only once at function definition time. All calls to your function will reuse the result of that definition-time function call.  If this is intended, assign the function call to a module-level variable and use that variable as a default value.
schwabot\core\api\handlers\base_handler.py:50:24: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\base_handler.py:67:26: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\base_handler.py:67:49: ANN401 Dynamically typed expressions (typing.Any) are disallowed
schwabot\core\api\handlers\base_handler.py:71:26: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\base_handler.py:71:32: ANN401 Dynamically typed expressions (typing.Any) are disallowed
schwabot\core\api\handlers\base_handler.py:81:21: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\base_handler.py:84:28: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\base_handler.py:92:27: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\base_handler.py:102:28: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\base_handler.py:110:1: D102 Missing docstring in public method
schwabot\core\api\handlers\base_handler.py:110:21: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\coingecko.py:1:1: D400 First line should end with a period
schwabot\core\api\handlers\coingecko.py:13:1: I201 Missing newline between import groups. 'import requests' is identified as Third Party and 'import aiohttp' is identified as Third Party.
schwabot\core\api\handlers\coingecko.py:18:5: F811 redefinition of unused 'aiohttp' from line 12
schwabot\core\api\handlers\coingecko.py:23:5: F811 redefinition of unused 'requests' from line 13
schwabot\core\api\handlers\coingecko.py:40:18: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\coingecko.py:62:26: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\coingecko.py:62:38: ANN401 Dynamically typed expressions (typing.Any) are disallowed
schwabot\core\api\handlers\coingecko.py:94:34: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\coingecko.py:114:33: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\coingecko.py:153:36: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\coingecko.py:175:37: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\coingecko.py:210:26: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\coingecko.py:210:32: ANN401 Dynamically typed expressions (typing.Any) are disallowed
schwabot\core\api\handlers\coingecko.py:283:37: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\coingecko.py:284:1: D401 First line should be in imperative mood
schwabot\core\api\handlers\coingecko.py:319:1: D103 Missing docstring in public function
schwabot\core\api\handlers\coingecko.py:319:21: ANN201 Missing return type annotation for public function
schwabot\core\api\handlers\coingecko.py:323:25: F821 undefined name 'json'
schwabot\core\api\handlers\glassnode.py:1:1: D100 Missing docstring in public module
schwabot\core\api\handlers\glassnode.py:9:1: I201 Missing newline between import groups. 'import requests' is identified as Third Party and 'import aiohttp' is identified as Third Party.
schwabot\core\api\handlers\glassnode.py:20:5: F811 redefinition of unused 'aiohttp' from line 8
schwabot\core\api\handlers\glassnode.py:25:5: F811 redefinition of unused 'requests' from line 9
schwabot\core\api\handlers\glassnode.py:42:18: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\glassnode.py:42:77: ANN204 Missing return type annotation for special method
schwabot\core\api\handlers\glassnode.py:43:1: D401 First line should be in imperative mood
schwabot\core\api\handlers\glassnode.py:62:26: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\glassnode.py:62:38: ANN401 Dynamically typed expressions (typing.Any) are disallowed
schwabot\core\api\handlers\glassnode.py:93:60: B023 Function definition does not bind loop variable 'metric'.
schwabot\core\api\handlers\glassnode.py:93:77: B023 Function definition does not bind loop variable 'params'.
schwabot\core\api\handlers\glassnode.py:118:26: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\glassnode.py:118:32: ANN401 Dynamically typed expressions (typing.Any) are disallowed
schwabot\core\api\handlers\glassnode.py:189:37: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\glassnode.py:266:1: D103 Missing docstring in public function
schwabot\core\api\handlers\glassnode.py:266:21: ANN201 Missing return type annotation for public function
schwabot\core\api\handlers\glassnode.py:270:25: F821 undefined name 'json'
schwabot\core\api\handlers\whale_alert.py:3:1: D400 First line should end with a period
schwabot\core\api\handlers\whale_alert.py:14:1: I201 Missing newline between import groups. 'import requests' is identified as Third Party and 'import aiohttp' is identified as Third Party.
schwabot\core\api\handlers\whale_alert.py:19:5: F811 redefinition of unused 'aiohttp' from line 13
schwabot\core\api\handlers\whale_alert.py:24:5: F811 redefinition of unused 'requests' from line 14
schwabot\core\api\handlers\whale_alert.py:41:18: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\whale_alert.py:47:26: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\whale_alert.py:47:38: ANN401 Dynamically typed expressions (typing.Any) are disallowed
schwabot\core\api\handlers\whale_alert.py:76:26: ANN101 Missing type annotation for self in method
schwabot\core\api\handlers\whale_alert.py:76:32: ANN401 Dynamically typed expressions (typing.Any) are disallowed
schwabot\core\api\handlers\whale_alert.py:140:34: ANN101 Missing type annotation for self in method
schwabot\core\api\integration_manager.py:1:1: D100 Missing docstring in public module
schwabot\core\api\integration_manager.py:31:1: D107 Missing docstring in __init__
schwabot\core\api\integration_manager.py:31:18: ANN101 Missing type annotation for self in method
schwabot\core\api\integration_manager.py:31:66: ANN204 Missing return type annotation for special method
schwabot\core\api\integration_manager.py:49:28: ANN101 Missing type annotation for self in method
schwabot\core\api\integration_manager.py:55:101: E501 line too long (101 > 100 characters)
schwabot\core\api\integration_manager.py:82:21: ANN101 Missing type annotation for self in method
schwabot\core\api\integration_manager.py:97:20: ANN101 Missing type annotation for self in method
schwabot\core\api\integration_manager.py:117:38: ANN101 Missing type annotation for self in method
schwabot\core\api\integration_manager.py:122:26: ANN101 Missing type annotation for self in method
schwabot\core\api\integration_manager.py:135:32: ANN101 Missing type annotation for self in method
schwabot\core\api\integration_manager.py:152:38: ANN101 Missing type annotation for self in method
schwabot\core\api\integration_manager.py:158:9: ANN101 Missing type annotation for self in method
schwabot\core\api\integration_manager.py:167:31: ANN101 Missing type annotation for self in method
schwabot\core\api\integration_manager.py:175:27: ANN101 Missing type annotation for self in method
schwabot\core\backup_validator.py:7:6: E999 SyntaxError: invalid syntax
schwabot\core\basket_vector_linker.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\basket_vector_linker.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\basket_vector_linker.py:1:1: D400 First line should end with a period
schwabot\core\basket_vector_linker.py:67:101: E501 line too long (144 > 100 characters)
schwabot\core\basket_vector_linker.py:75:101: E501 line too long (136 > 100 characters)
schwabot\core\basket_vector_linker.py:81:101: E501 line too long (131 > 100 characters)
schwabot\core\basket_vector_linker.py:87:101: E501 line too long (208 > 100 characters)
schwabot\core\basket_vector_linker.py:193:101: E501 line too long (101 > 100 characters)
schwabot\core\basket_vector_linker.py:215:101: E501 line too long (152 > 100 characters)
schwabot\core\biological_immune_error_handler.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\biological_immune_error_handler.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\biological_immune_error_handler.py:1:1: D400 First line should end with a period
schwabot\core\biological_immune_error_handler.py:123:101: E501 line too long (107 > 100 characters)
schwabot\core\biological_immune_error_handler.py:129:101: E501 line too long (122 > 100 characters)
schwabot\core\biological_immune_error_handler.py:157:101: E501 line too long (119 > 100 characters)
schwabot\core\biological_immune_error_handler.py:185:101: E501 line too long (108 > 100 characters)
schwabot\core\biological_immune_error_handler.py:245:101: E501 line too long (115 > 100 characters)
schwabot\core\biological_immune_error_handler.py:251:101: E501 line too long (119 > 100 characters)
schwabot\core\biological_immune_error_handler.py:313:101: E501 line too long (144 > 100 characters)
schwabot\core\biological_immune_error_handler.py:333:101: E501 line too long (161 > 100 characters)
schwabot\core\biological_immune_error_handler.py:345:101: E501 line too long (121 > 100 characters)
schwabot\core\biological_immune_error_handler.py:351:101: E501 line too long (113 > 100 characters)
schwabot\core\biological_immune_error_handler.py:439:101: E501 line too long (151 > 100 characters)
schwabot\core\biological_immune_error_handler.py:453:101: E501 line too long (110 > 100 characters)
schwabot\core\biological_immune_error_handler.py:567:101: E501 line too long (123 > 100 characters)
schwabot\core\biological_immune_error_handler.py:579:101: E501 line too long (111 > 100 characters)
schwabot\core\biological_immune_error_handler.py:587:101: E501 line too long (147 > 100 characters)
schwabot\core\biological_immune_error_handler.py:651:101: E501 line too long (200 > 100 characters)
schwabot\core\biological_immune_error_handler.py:659:101: E501 line too long (177 > 100 characters)
schwabot\core\biological_immune_error_handler.py:749:101: E501 line too long (114 > 100 characters)
schwabot\core\biological_immune_error_handler.py:761:101: E501 line too long (109 > 100 characters)
schwabot\core\biological_immune_error_handler.py:779:101: E501 line too long (133 > 100 characters)
schwabot\core\biological_immune_error_handler.py:783:101: E501 line too long (134 > 100 characters)
schwabot\core\biological_immune_error_handler.py:787:101: E501 line too long (135 > 100 characters)
schwabot\core\biological_immune_error_handler.py:791:101: E501 line too long (137 > 100 characters)
schwabot\core\biological_immune_error_handler.py:805:101: E501 line too long (153 > 100 characters)
schwabot\core\biological_immune_error_handler.py:873:101: E501 line too long (256 > 100 characters)
schwabot\core\biological_immune_error_handler.py:879:101: E501 line too long (143 > 100 characters)
schwabot\core\biological_immune_error_handler.py:943:101: E501 line too long (103 > 100 characters)
schwabot\core\biological_immune_error_handler.py:1089:101: E501 line too long (102 > 100 characters)
schwabot\core\biological_immune_error_handler.py:1131:101: E501 line too long (132 > 100 characters)
schwabot\core\biological_immune_error_handler.py:1181:101: E501 line too long (203 > 100 characters)
schwabot\core\biological_immune_error_handler.py:1219:101: E501 line too long (226 > 100 characters)
schwabot\core\biological_immune_error_handler.py:1221:101: E501 line too long (125 > 100 characters)
schwabot\core\biological_immune_error_handler.py:1245:101: E501 line too long (159 > 100 characters)
schwabot\core\biological_immune_error_handler.py:1247:101: E501 line too long (120 > 100 characters)
schwabot\core\biological_immune_error_handler.py:1253:101: E501 line too long (213 > 100 characters)
schwabot\core\biological_immune_error_handler.py:1265:101: E501 line too long (133 > 100 characters)
schwabot\core\biological_immune_error_handler.py:1275:101: E501 line too long (132 > 100 characters)
schwabot\core\biological_immune_error_handler.py:1353:101: E501 line too long (157 > 100 characters)
schwabot\core\biological_immune_error_handler.py:1369:101: E501 line too long (169 > 100 characters)
schwabot\core\biological_immune_error_handler.py:1377:101: E501 line too long (267 > 100 characters)
schwabot\core\biological_immune_error_handler.py:1381:101: E501 line too long (263 > 100 characters)
schwabot\core\biological_immune_error_handler.py:1395:101: E501 line too long (303 > 100 characters)
schwabot\core\biological_immune_error_handler.py:1397:101: E501 line too long (247 > 100 characters)
schwabot\core\biological_immune_error_handler.py:1399:101: E501 line too long (185 > 100 characters)
schwabot\core\biological_immune_error_handler.py:1417:101: E501 line too long (113 > 100 characters)
schwabot\core\biological_immune_error_handler.py:1427:101: E501 line too long (115 > 100 characters)
schwabot\core\biological_immune_error_handler.py:1445:101: E501 line too long (101 > 100 characters)
schwabot\core\biological_immune_error_handler.py:1493:101: E501 line too long (145 > 100 characters)
schwabot\core\biological_immune_error_handler.py:1513:101: E501 line too long (116 > 100 characters)
schwabot\core\biological_immune_error_handler.py:1523:101: E501 line too long (112 > 100 characters)
schwabot\core\biological_immune_error_handler.py:1667:101: E501 line too long (103 > 100 characters)
schwabot\core\brain_trading_engine.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\brain_trading_engine.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\brain_trading_engine.py:1:1: D400 First line should end with a period
schwabot\core\brain_trading_engine.py:341:101: E501 line too long (132 > 100 characters)
schwabot\core\brain_trading_engine.py:651:101: E501 line too long (103 > 100 characters)
schwabot\core\brain_trading_engine.py:669:101: E501 line too long (114 > 100 characters)
schwabot\core\brain_trading_engine.py:699:101: E501 line too long (297 > 100 characters)
schwabot\core\brain_trading_engine.py:707:101: E501 line too long (185 > 100 characters)
schwabot\core\brain_trading_engine.py:713:101: E501 line too long (441 > 100 characters)
schwabot\core\brain_trading_engine.py:717:101: E501 line too long (379 > 100 characters)
schwabot\core\brain_trading_engine.py:751:101: E501 line too long (119 > 100 characters)
schwabot\core\brain_trading_engine.py:757:101: E501 line too long (104 > 100 characters)
schwabot\core\brain_trading_engine.py:823:101: E501 line too long (233 > 100 characters)
schwabot\core\brain_trading_engine.py:829:101: E501 line too long (112 > 100 characters)
schwabot\core\brain_trading_engine.py:849:101: E501 line too long (168 > 100 characters)
schwabot\core\brain_trading_engine.py:857:101: E501 line too long (225 > 100 characters)
schwabot\core\ccxt_integration.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\ccxt_integration.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\ccxt_integration.py:1:1: D400 First line should end with a period
schwabot\core\ccxt_integration.py:63:101: E501 line too long (105 > 100 characters)
schwabot\core\ccxt_integration.py:199:101: E501 line too long (101 > 100 characters)
schwabot\core\ccxt_integration.py:239:101: E501 line too long (120 > 100 characters)
schwabot\core\ccxt_integration.py:253:101: E501 line too long (102 > 100 characters)
schwabot\core\ccxt_integration.py:381:101: E501 line too long (163 > 100 characters)
schwabot\core\ccxt_integration.py:659:101: E501 line too long (113 > 100 characters)
schwabot\core\ccxt_trading_executor.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\ccxt_trading_executor.py:15:1: I202 Additional newline in a group of imports. 'import time' is identified as Stdlib and 'import logging' is identified as Stdlib.
schwabot\core\ccxt_trading_executor.py:17:1: I202 Additional newline in a group of imports. 'from dataclasses import dataclass' is identified as Stdlib and 'import time' is identified as Stdlib.
schwabot\core\ccxt_trading_executor.py:19:1: I202 Additional newline in a group of imports. 'from decimal import Decimal' is identified as Stdlib and 'from dataclasses import dataclass' is identified as Stdlib.
schwabot\core\ccxt_trading_executor.py:21:1: I202 Additional newline in a group of imports. 'from enum import Enum' is identified as Stdlib and 'from decimal import Decimal' is identified as Stdlib.
schwabot\core\ccxt_trading_executor.py:23:1: I202 Additional newline in a group of imports. 'from typing import Any, Dict, Optional' is identified as Stdlib and 'from enum import Enum' is identified as Stdlib.
schwabot\core\ccxt_trading_executor.py:67:23: ANN101 Missing type annotation for self in method
schwabot\core\ccxt_trading_executor.py:67:28: ANN204 Missing return type annotation for special method
schwabot\core\ccxt_trading_executor.py:68:1: D202 No blank lines allowed after function docstring
schwabot\core\ccxt_trading_executor.py:97:23: ANN101 Missing type annotation for self in method
schwabot\core\ccxt_trading_executor.py:97:28: ANN204 Missing return type annotation for special method
schwabot\core\ccxt_trading_executor.py:98:1: D202 No blank lines allowed after function docstring
schwabot\core\ccxt_trading_executor.py:108:18: ANN101 Missing type annotation for self in method
schwabot\core\ccxt_trading_executor.py:108:47: ANN204 Missing return type annotation for special method
schwabot\core\ccxt_trading_executor.py:109:1: D202 No blank lines allowed after function docstring
schwabot\core\ccxt_trading_executor.py:127:32: ANN101 Missing type annotation for self in method
schwabot\core\ccxt_trading_executor.py:127:37: ANN201 Missing return type annotation for public function
schwabot\core\ccxt_trading_executor.py:128:1: D202 No blank lines allowed after function docstring
schwabot\core\ccxt_trading_executor.py:134:31: ANN101 Missing type annotation for self in method
schwabot\core\ccxt_trading_executor.py:134:36: ANN201 Missing return type annotation for public function
schwabot\core\ccxt_trading_executor.py:135:1: D202 No blank lines allowed after function docstring
schwabot\core\ccxt_trading_executor.py:141:30: ANN101 Missing type annotation for self in method
schwabot\core\ccxt_trading_executor.py:142:1: D202 No blank lines allowed after function docstring
schwabot\core\ccxt_trading_executor.py:178:28: ANN101 Missing type annotation for self in method
schwabot\core\ccxt_trading_executor.py:179:1: D202 No blank lines allowed after function docstring
schwabot\core\ccxt_trading_executor.py:231:29: ANN101 Missing type annotation for self in method
schwabot\core\ccxt_trading_executor.py:232:1: D202 No blank lines allowed after function docstring
schwabot\core\chrono_resonance_weather_mapper.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\chrono_resonance_weather_mapper.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\chrono_resonance_weather_mapper.py:1:1: D400 First line should end with a period
schwabot\core\chrono_resonance_weather_mapper.py:87:101: E501 line too long (155 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:121:101: E501 line too long (509 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:211:101: E501 line too long (162 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:253:101: E501 line too long (361 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:269:101: E501 line too long (465 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:541:101: E501 line too long (151 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:615:101: E501 line too long (153 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:737:101: E501 line too long (101 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:879:101: E501 line too long (103 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:1075:101: E501 line too long (116 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:1119:101: E501 line too long (126 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:1253:101: E501 line too long (237 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:1255:101: E501 line too long (187 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:1343:101: E501 line too long (187 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:1349:101: E501 line too long (148 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:1363:101: E501 line too long (160 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:1383:101: E501 line too long (105 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:1391:101: E501 line too long (150 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:1407:101: E501 line too long (105 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:1431:101: E501 line too long (139 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:1517:101: E501 line too long (187 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:1547:101: E501 line too long (181 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:1567:101: E501 line too long (229 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:1605:101: E501 line too long (118 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:1609:101: E501 line too long (400 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:1615:101: E501 line too long (202 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:1623:101: E501 line too long (217 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:1763:101: E501 line too long (132 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:1787:101: E501 line too long (125 > 100 characters)
schwabot\core\chrono_resonance_weather_mapper.py:1799:101: E501 line too long (119 > 100 characters)
schwabot\core\clean_math_foundation.py:3:1: D205 1 blank line required between summary line and description
schwabot\core\clean_math_foundation.py:19:1: I202 Additional newline in a group of imports. 'import logging' is identified as Stdlib and 'import hashlib' is identified as Stdlib.
schwabot\core\clean_math_foundation.py:21:1: I202 Additional newline in a group of imports. 'import math' is identified as Stdlib and 'import logging' is identified as Stdlib.
schwabot\core\clean_math_foundation.py:23:1: I202 Additional newline in a group of imports. 'import time' is identified as Stdlib and 'import math' is identified as Stdlib.
schwabot\core\clean_math_foundation.py:25:1: I202 Additional newline in a group of imports. 'from dataclasses import dataclass, field' is identified as Stdlib and 'import time' is identified as Stdlib.
schwabot\core\clean_math_foundation.py:27:1: I202 Additional newline in a group of imports. 'from enum import Enum' is identified as Stdlib and 'from dataclasses import dataclass, field' is identified as Stdlib.
schwabot\core\clean_math_foundation.py:29:1: I202 Additional newline in a group of imports. 'from typing import Any, Dict, List, Tuple, Union' is identified as Stdlib and 'from enum import Enum' is identified as Stdlib.
schwabot\core\clean_math_foundation.py:159:1: D205 1 blank line required between summary line and description
schwabot\core\clean_math_foundation.py:171:18: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:171:95: ANN204 Missing return type annotation for special method
schwabot\core\clean_math_foundation.py:172:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:198:27: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:198:60: ANN002 Missing type annotation for *args
schwabot\core\clean_math_foundation.py:198:68: ANN003 Missing type annotation for **kwargs
schwabot\core\clean_math_foundation.py:199:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:265:32: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:265:65: ANN002 Missing type annotation for *args
schwabot\core\clean_math_foundation.py:265:73: ANN003 Missing type annotation for **kwargs
schwabot\core\clean_math_foundation.py:265:87: ANN401 Dynamically typed expressions (typing.Any) are disallowed
schwabot\core\clean_math_foundation.py:266:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:362:14: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:362:21: ANN002 Missing type annotation for *args
schwabot\core\clean_math_foundation.py:363:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:383:19: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:383:25: ANN001 Missing type annotation for function argument 'a'
schwabot\core\clean_math_foundation.py:383:28: ANN001 Missing type annotation for function argument 'b'
schwabot\core\clean_math_foundation.py:384:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:392:19: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:392:26: ANN002 Missing type annotation for *args
schwabot\core\clean_math_foundation.py:393:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:417:17: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:417:23: ANN001 Missing type annotation for function argument 'a'
schwabot\core\clean_math_foundation.py:417:26: ANN001 Missing type annotation for function argument 'b'
schwabot\core\clean_math_foundation.py:418:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:426:16: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:426:22: ANN001 Missing type annotation for function argument 'base'
schwabot\core\clean_math_foundation.py:426:28: ANN001 Missing type annotation for function argument 'exponent'
schwabot\core\clean_math_foundation.py:427:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:437:15: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:437:21: ANN001 Missing type annotation for function argument 'x'
schwabot\core\clean_math_foundation.py:438:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:446:14: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:446:20: ANN001 Missing type annotation for function argument 'x'
schwabot\core\clean_math_foundation.py:446:23: ANN001 Missing type annotation for function argument 'base'
schwabot\core\clean_math_foundation.py:447:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:461:14: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:461:20: ANN001 Missing type annotation for function argument 'x'
schwabot\core\clean_math_foundation.py:462:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:472:14: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:472:20: ANN001 Missing type annotation for function argument 'x'
schwabot\core\clean_math_foundation.py:473:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:481:14: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:481:20: ANN001 Missing type annotation for function argument 'x'
schwabot\core\clean_math_foundation.py:482:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:490:14: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:490:20: ANN001 Missing type annotation for function argument 'x'
schwabot\core\clean_math_foundation.py:491:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:501:15: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:501:21: ANN001 Missing type annotation for function argument 'data'
schwabot\core\clean_math_foundation.py:502:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:510:14: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:510:20: ANN001 Missing type annotation for function argument 'data'
schwabot\core\clean_math_foundation.py:511:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:523:14: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:523:20: ANN001 Missing type annotation for function argument 'data'
schwabot\core\clean_math_foundation.py:524:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:536:22: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:536:28: ANN001 Missing type annotation for function argument 'a'
schwabot\core\clean_math_foundation.py:536:31: ANN001 Missing type annotation for function argument 'b'
schwabot\core\clean_math_foundation.py:537:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:541:26: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:541:32: ANN001 Missing type annotation for function argument 'a'
schwabot\core\clean_math_foundation.py:541:35: ANN001 Missing type annotation for function argument 'b'
schwabot\core\clean_math_foundation.py:542:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:546:22: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:546:28: ANN001 Missing type annotation for function argument 'matrix'
schwabot\core\clean_math_foundation.py:547:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:551:14: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:551:20: ANN001 Missing type annotation for function argument 'matrix'
schwabot\core\clean_math_foundation.py:552:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:558:20: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:559:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:566:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:568:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:584:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:586:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:591:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:593:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:608:29: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:609:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:617:1: S324 Use of weak MD5 hash for security. Consider usedforsecurity=False
schwabot\core\clean_math_foundation.py:619:27: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:620:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:630:23: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:631:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:641:21: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:642:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:656:21: ANN101 Missing type annotation for self in method
schwabot\core\clean_math_foundation.py:657:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:670:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_math_foundation.py:675:50: ANN002 Missing type annotation for *args
schwabot\core\clean_math_foundation.py:675:58: ANN003 Missing type annotation for **kwargs
schwabot\core\clean_math_foundation.py:675:72: ANN401 Dynamically typed expressions (typing.Any) are disallowed
schwabot\core\clean_math_foundation.py:676:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_profit_vectorization.py:3:1: D205 1 blank line required between summary line and description
schwabot\core\clean_profit_vectorization.py:19:1: I202 Additional newline in a group of imports. 'import time' is identified as Stdlib and 'import logging' is identified as Stdlib.
schwabot\core\clean_profit_vectorization.py:21:1: I202 Additional newline in a group of imports. 'from dataclasses import dataclass, field' is identified as Stdlib and 'import time' is identified as Stdlib.
schwabot\core\clean_profit_vectorization.py:23:1: I202 Additional newline in a group of imports. 'from enum import Enum' is identified as Stdlib and 'from dataclasses import dataclass, field' is identified as Stdlib.
schwabot\core\clean_profit_vectorization.py:25:1: I202 Additional newline in a group of imports. 'from typing import Any, Dict, List, Optional' is identified as Stdlib and 'from enum import Enum' is identified as Stdlib.
schwabot\core\clean_profit_vectorization.py:177:1: D205 1 blank line required between summary line and description
schwabot\core\clean_profit_vectorization.py:190:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_profit_vectorization.py:193:6: ANN204 Missing return type annotation for special method
schwabot\core\clean_profit_vectorization.py:194:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_profit_vectorization.py:250:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_profit_vectorization.py:256:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_profit_vectorization.py:256:1: D205 1 blank line required between summary line and description
schwabot\core\clean_profit_vectorization.py:256:1: D412 No blank lines allowed between a section header and its content
schwabot\core\clean_profit_vectorization.py:347:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_profit_vectorization.py:349:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_profit_vectorization.py:349:1: D401 First line should be in imperative mood; try rephrasing
schwabot\core\clean_profit_vectorization.py:367:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_profit_vectorization.py:369:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_profit_vectorization.py:414:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_profit_vectorization.py:416:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_profit_vectorization.py:487:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_profit_vectorization.py:489:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_profit_vectorization.py:552:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_profit_vectorization.py:554:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_profit_vectorization.py:619:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_profit_vectorization.py:621:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_profit_vectorization.py:693:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_profit_vectorization.py:695:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_profit_vectorization.py:752:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_profit_vectorization.py:754:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_profit_vectorization.py:824:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_profit_vectorization.py:826:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_profit_vectorization.py:836:38: ANN101 Missing type annotation for self in method
schwabot\core\clean_profit_vectorization.py:837:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_profit_vectorization.py:860:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_profit_vectorization.py:862:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_profit_vectorization.py:884:37: ANN101 Missing type annotation for self in method
schwabot\core\clean_profit_vectorization.py:885:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_profit_vectorization.py:903:33: ANN101 Missing type annotation for self in method
schwabot\core\clean_profit_vectorization.py:904:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_profit_vectorization.py:921:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_trading_pipeline.py:3:1: D205 1 blank line required between summary line and description
schwabot\core\clean_trading_pipeline.py:19:1: I202 Additional newline in a group of imports. 'import logging' is identified as Stdlib and 'import asyncio' is identified as Stdlib.
schwabot\core\clean_trading_pipeline.py:21:1: I202 Additional newline in a group of imports. 'import time' is identified as Stdlib and 'import logging' is identified as Stdlib.
schwabot\core\clean_trading_pipeline.py:23:1: I202 Additional newline in a group of imports. 'from dataclasses import dataclass, field' is identified as Stdlib and 'import time' is identified as Stdlib.
schwabot\core\clean_trading_pipeline.py:25:1: I202 Additional newline in a group of imports. 'from enum import Enum' is identified as Stdlib and 'from dataclasses import dataclass, field' is identified as Stdlib.
schwabot\core\clean_trading_pipeline.py:27:1: I202 Additional newline in a group of imports. 'from typing import Any, Dict, List, Optional' is identified as Stdlib and 'from enum import Enum' is identified as Stdlib.
schwabot\core\clean_trading_pipeline.py:35:1: I202 Additional newline in a group of imports. 'from .clean_profit_vectorization import CleanProfitVectorization, ProfitVector, VectorizationMode' is identified as Application Relative and 'from .clean_math_foundation import BitPhase, CleanMathFoundation, ThermalState' is identified as Application Relative.
schwabot\core\clean_trading_pipeline.py:188:1: D205 1 blank line required between summary line and description
schwabot\core\clean_trading_pipeline.py:209:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_trading_pipeline.py:214:6: ANN204 Missing return type annotation for special method
schwabot\core\clean_trading_pipeline.py:215:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_trading_pipeline.py:270:35: ANN101 Missing type annotation for self in method
schwabot\core\clean_trading_pipeline.py:271:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_trading_pipeline.py:271:1: D205 1 blank line required between summary line and description
schwabot\core\clean_trading_pipeline.py:271:1: D412 No blank lines allowed between a section header and its content
schwabot\core\clean_trading_pipeline.py:385:32: ANN101 Missing type annotation for self in method
schwabot\core\clean_trading_pipeline.py:386:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_trading_pipeline.py:443:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_trading_pipeline.py:445:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_trading_pipeline.py:477:41: ANN101 Missing type annotation for self in method
schwabot\core\clean_trading_pipeline.py:478:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_trading_pipeline.py:534:36: ANN101 Missing type annotation for self in method
schwabot\core\clean_trading_pipeline.py:535:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_trading_pipeline.py:548:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_trading_pipeline.py:550:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_trading_pipeline.py:591:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_trading_pipeline.py:593:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_trading_pipeline.py:645:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_trading_pipeline.py:647:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_trading_pipeline.py:693:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_trading_pipeline.py:695:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_trading_pipeline.py:725:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_trading_pipeline.py:727:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_trading_pipeline.py:770:23: ANN101 Missing type annotation for self in method
schwabot\core\clean_trading_pipeline.py:771:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_trading_pipeline.py:824:22: ANN101 Missing type annotation for self in method
schwabot\core\clean_trading_pipeline.py:825:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_trading_pipeline.py:861:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_trading_pipeline.py:863:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_trading_pipeline.py:863:1: D401 First line should be in imperative mood; try rephrasing
schwabot\core\clean_trading_pipeline.py:891:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_trading_pipeline.py:893:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_trading_pipeline.py:951:31: ANN101 Missing type annotation for self in method
schwabot\core\clean_trading_pipeline.py:952:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_trading_pipeline.py:997:30: ANN101 Missing type annotation for self in method
schwabot\core\clean_trading_pipeline.py:998:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_trading_pipeline.py:1018:30: ANN101 Missing type annotation for self in method
schwabot\core\clean_trading_pipeline.py:1019:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_trading_pipeline.py:1032:34: ANN101 Missing type annotation for self in method
schwabot\core\clean_trading_pipeline.py:1033:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_trading_pipeline.py:1057:30: ANN101 Missing type annotation for self in method
schwabot\core\clean_trading_pipeline.py:1058:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_trading_pipeline.py:1101:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_trading_pipeline.py:1113:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:5:1: I202 Additional newline in a group of imports. 'import math' is identified as Stdlib and 'import logging' is identified as Stdlib.
schwabot\core\clean_unified_math.py:7:1: I202 Additional newline in a group of imports. 'import time' is identified as Stdlib and 'import math' is identified as Stdlib.
schwabot\core\clean_unified_math.py:9:1: I202 Additional newline in a group of imports. 'from dataclasses import dataclass' is identified as Stdlib and 'import time' is identified as Stdlib.
schwabot\core\clean_unified_math.py:11:1: I202 Additional newline in a group of imports. 'from typing import Any, Dict, List, Union' is identified as Stdlib and 'from dataclasses import dataclass' is identified as Stdlib.
schwabot\core\clean_unified_math.py:49:18: ANN101 Missing type annotation for self in method
schwabot\core\clean_unified_math.py:49:23: ANN204 Missing return type annotation for special method
schwabot\core\clean_unified_math.py:50:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:56:18: ANN101 Missing type annotation for self in method
schwabot\core\clean_unified_math.py:57:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:73:13: ANN101 Missing type annotation for self in method
schwabot\core\clean_unified_math.py:74:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:90:18: ANN101 Missing type annotation for self in method
schwabot\core\clean_unified_math.py:91:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:107:16: ANN101 Missing type annotation for self in method
schwabot\core\clean_unified_math.py:108:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:130:15: ANN101 Missing type annotation for self in method
schwabot\core\clean_unified_math.py:131:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:147:14: ANN101 Missing type annotation for self in method
schwabot\core\clean_unified_math.py:148:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:170:13: ANN101 Missing type annotation for self in method
schwabot\core\clean_unified_math.py:171:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:187:13: ANN101 Missing type annotation for self in method
schwabot\core\clean_unified_math.py:188:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:204:13: ANN101 Missing type annotation for self in method
schwabot\core\clean_unified_math.py:205:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:221:13: ANN101 Missing type annotation for self in method
schwabot\core\clean_unified_math.py:222:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:244:13: ANN101 Missing type annotation for self in method
schwabot\core\clean_unified_math.py:245:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:261:13: ANN101 Missing type annotation for self in method
schwabot\core\clean_unified_math.py:261:20: ANN002 Missing type annotation for *values
schwabot\core\clean_unified_math.py:262:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:282:13: ANN101 Missing type annotation for self in method
schwabot\core\clean_unified_math.py:282:20: ANN002 Missing type annotation for *values
schwabot\core\clean_unified_math.py:283:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:303:14: ANN101 Missing type annotation for self in method
schwabot\core\clean_unified_math.py:304:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:325:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_unified_math.py:327:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:366:9: ANN101 Missing type annotation for self in method
schwabot\core\clean_unified_math.py:368:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:396:36: ANN101 Missing type annotation for self in method
schwabot\core\clean_unified_math.py:397:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:425:32: ANN101 Missing type annotation for self in method
schwabot\core\clean_unified_math.py:426:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:476:31: ANN101 Missing type annotation for self in method
schwabot\core\clean_unified_math.py:477:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:477:1: D401 First line should be in imperative mood; try rephrasing
schwabot\core\clean_unified_math.py:535:26: ANN101 Missing type annotation for self in method
schwabot\core\clean_unified_math.py:535:48: ANN401 Dynamically typed expressions (typing.Any) are disallowed
schwabot\core\clean_unified_math.py:536:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:557:33: ANN101 Missing type annotation for self in method
schwabot\core\clean_unified_math.py:558:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:562:21: ANN101 Missing type annotation for self in method
schwabot\core\clean_unified_math.py:563:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:569:25: ANN101 Missing type annotation for self in method
schwabot\core\clean_unified_math.py:570:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:578:33: ANN101 Missing type annotation for self in method
schwabot\core\clean_unified_math.py:579:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:625:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:625:1: D205 1 blank line required between summary line and description
schwabot\core\clean_unified_math.py:625:1: D412 No blank lines allowed between a section header and its content
schwabot\core\clean_unified_math.py:681:1: D202 No blank lines allowed after function docstring
schwabot\core\clean_unified_math.py:681:1: D205 1 blank line required between summary line and description
schwabot\core\clean_unified_math.py:681:1: D412 No blank lines allowed between a section header and its content
schwabot\core\clean_unified_math.py:728:37: ANN201 Missing return type annotation for public function
schwabot\core\clean_unified_math.py:729:1: D202 No blank lines allowed after function docstring
schwabot\core\common.py:57:64: E999 SyntaxError: unmatched ')'
schwabot\core\comprehensive_integration_system.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\comprehensive_integration_system.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\comprehensive_integration_system.py:1:1: D400 First line should end with a period
schwabot\core\comprehensive_integration_system.py:165:101: E501 line too long (110 > 100 characters)
schwabot\core\comprehensive_integration_system.py:301:101: E501 line too long (104 > 100 characters)
schwabot\core\comprehensive_integration_system.py:347:101: E501 line too long (107 > 100 characters)
schwabot\core\comprehensive_integration_system.py:363:101: E501 line too long (169 > 100 characters)
schwabot\core\comprehensive_integration_system.py:449:101: E501 line too long (209 > 100 characters)
schwabot\core\comprehensive_integration_system.py:503:101: E501 line too long (593 > 100 characters)
schwabot\core\comprehensive_integration_system.py:511:101: E501 line too long (124 > 100 characters)
schwabot\core\comprehensive_integration_system.py:621:101: E501 line too long (177 > 100 characters)
schwabot\core\comprehensive_integration_system.py:643:101: E501 line too long (114 > 100 characters)
schwabot\core\comprehensive_integration_system.py:665:101: E501 line too long (129 > 100 characters)
schwabot\core\comprehensive_integration_system.py:669:101: E501 line too long (234 > 100 characters)
schwabot\core\comprehensive_integration_system.py:675:101: E501 line too long (273 > 100 characters)
schwabot\core\comprehensive_integration_system.py:707:101: E501 line too long (131 > 100 characters)
schwabot\core\comprehensive_integration_system.py:801:101: E501 line too long (142 > 100 characters)
schwabot\core\comprehensive_integration_system.py:973:101: E501 line too long (105 > 100 characters)
schwabot\core\comprehensive_integration_system.py:1173:101: E501 line too long (219 > 100 characters)
schwabot\core\comprehensive_integration_system.py:1241:101: E501 line too long (165 > 100 characters)
schwabot\core\comprehensive_integration_system.py:1289:101: E501 line too long (170 > 100 characters)
schwabot\core\comprehensive_integration_system.py:1307:101: E501 line too long (151 > 100 characters)
schwabot\core\comprehensive_integration_system.py:1327:101: E501 line too long (120 > 100 characters)
schwabot\core\comprehensive_integration_system.py:1369:101: E501 line too long (176 > 100 characters)
schwabot\core\comprehensive_integration_system.py:1371:101: E501 line too long (188 > 100 characters)
schwabot\core\comprehensive_integration_system.py:1385:101: E501 line too long (190 > 100 characters)
schwabot\core\comprehensive_integration_system.py:1391:101: E501 line too long (590 > 100 characters)
schwabot\core\comprehensive_integration_system.py:1451:101: E501 line too long (186 > 100 characters)
schwabot\core\comprehensive_integration_system.py:1453:101: E501 line too long (135 > 100 characters)
schwabot\core\comprehensive_integration_system.py:1481:101: E501 line too long (111 > 100 characters)
schwabot\core\comprehensive_integration_system.py:1569:101: E501 line too long (122 > 100 characters)
schwabot\core\config\__init__.py:37:2: E999 SyntaxError: unmatched ']'
schwabot\core\config\defaults.py:38:2: E999 SyntaxError: unmatched '}'
schwabot\core\correction_overlay_matrix.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\correction_overlay_matrix.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\correction_overlay_matrix.py:1:1: D400 First line should end with a period
schwabot\core\correction_overlay_matrix.py:77:101: E501 line too long (161 > 100 characters)
schwabot\core\correction_overlay_matrix.py:145:101: E501 line too long (584 > 100 characters)
schwabot\core\correction_overlay_matrix.py:189:101: E501 line too long (163 > 100 characters)
schwabot\core\correction_overlay_matrix.py:195:101: E501 line too long (108 > 100 characters)
schwabot\core\correction_overlay_matrix.py:203:101: E501 line too long (187 > 100 characters)
schwabot\core\correction_overlay_matrix.py:221:101: E501 line too long (126 > 100 characters)
schwabot\core\correction_overlay_matrix.py:261:101: E501 line too long (196 > 100 characters)
schwabot\core\correction_overlay_matrix.py:289:101: E501 line too long (108 > 100 characters)
schwabot\core\correction_overlay_matrix.py:315:101: E501 line too long (138 > 100 characters)
schwabot\core\correction_overlay_matrix.py:403:101: E501 line too long (151 > 100 characters)
schwabot\core\correction_overlay_matrix.py:465:101: E501 line too long (155 > 100 characters)
schwabot\core\correction_overlay_matrix.py:491:101: E501 line too long (106 > 100 characters)
schwabot\core\correction_overlay_matrix.py:529:101: E501 line too long (155 > 100 characters)
schwabot\core\correction_overlay_matrix.py:601:101: E501 line too long (104 > 100 characters)
schwabot\core\correction_overlay_matrix.py:677:101: E501 line too long (114 > 100 characters)
schwabot\core\correction_overlay_matrix.py:731:101: E501 line too long (143 > 100 characters)
schwabot\core\correction_overlay_matrix.py:751:101: E501 line too long (102 > 100 characters)
schwabot\core\correction_overlay_matrix.py:821:101: E501 line too long (127 > 100 characters)
schwabot\core\correction_overlay_matrix.py:971:101: E501 line too long (104 > 100 characters)
schwabot\core\correction_overlay_matrix.py:1051:101: E501 line too long (126 > 100 characters)
schwabot\core\correction_overlay_matrix.py:1121:101: E501 line too long (119 > 100 characters)
schwabot\core\correction_overlay_matrix.py:1147:101: E501 line too long (220 > 100 characters)
schwabot\core\correction_overlay_matrix.py:1157:101: E501 line too long (174 > 100 characters)
schwabot\core\correction_overlay_matrix.py:1175:101: E501 line too long (176 > 100 characters)
schwabot\core\correction_overlay_matrix.py:1185:101: E501 line too long (127 > 100 characters)
schwabot\core\correction_overlay_matrix.py:1189:101: E501 line too long (121 > 100 characters)
schwabot\core\correction_overlay_matrix.py:1193:101: E501 line too long (116 > 100 characters)
schwabot\core\correction_overlay_matrix.py:1201:101: E501 line too long (107 > 100 characters)
schwabot\core\correction_overlay_matrix.py:1215:101: E501 line too long (158 > 100 characters)
schwabot\core\correction_overlay_matrix.py:1231:101: E501 line too long (104 > 100 characters)
schwabot\core\correction_overlay_matrix.py:1333:101: E501 line too long (140 > 100 characters)
schwabot\core\correction_overlay_matrix.py:1343:101: E501 line too long (119 > 100 characters)
schwabot\core\correction_overlay_matrix.py:1379:101: E501 line too long (218 > 100 characters)
schwabot\core\correction_overlay_matrix.py:1413:101: E501 line too long (309 > 100 characters)
schwabot\core\crystalline_uplink_field.py:221:39: E999 SyntaxError: unmatched ')'
schwabot\core\data\historical_loader.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\data\historical_loader.py:1:1: D400 First line should end with a period
schwabot\core\data\historical_loader.py:30:101: E501 line too long (148 > 100 characters)
schwabot\core\data\historical_loader.py:53:101: E501 line too long (159 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\data_pipeline_visualizer.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\data_pipeline_visualizer.py:1:1: D400 First line should end with a period
schwabot\core\data_pipeline_visualizer.py:85:101: E501 line too long (140 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:119:101: E501 line too long (420 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:193:101: E501 line too long (165 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:211:101: E501 line too long (258 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:251:101: E501 line too long (350 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:279:101: E501 line too long (142 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:287:101: E501 line too long (102 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:323:101: E501 line too long (115 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:341:101: E501 line too long (108 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:405:101: E501 line too long (123 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:563:101: E501 line too long (151 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:653:101: E501 line too long (147 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:669:101: E501 line too long (125 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:701:101: E501 line too long (102 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:951:101: E501 line too long (146 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:957:101: E501 line too long (185 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:979:101: E501 line too long (186 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:985:101: E501 line too long (131 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:1207:101: E501 line too long (256 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:1231:101: E501 line too long (107 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:1277:101: E501 line too long (125 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:1431:101: E501 line too long (172 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:1545:101: E501 line too long (114 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:1601:101: E501 line too long (107 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:1603:101: E501 line too long (411 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:1605:101: E501 line too long (296 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:1629:101: E501 line too long (219 > 100 characters)
schwabot\core\data_pipeline_visualizer.py:1637:101: E501 line too long (132 > 100 characters)
schwabot\core\dlt_waveform_engine.py:107:2: E999 SyntaxError: unmatched ']'
schwabot\core\dlt_waveform_visualization.py:77:14: E999 SyntaxError: unmatched ')'
schwabot\core\drift_shell_engine.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\drift_shell_engine.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\drift_shell_engine.py:1:1: D400 First line should end with a period
schwabot\core\drift_shell_engine.py:81:101: E501 line too long (155 > 100 characters)
schwabot\core\drift_shell_engine.py:101:101: E501 line too long (114 > 100 characters)
schwabot\core\drift_shell_engine.py:157:101: E501 line too long (122 > 100 characters)
schwabot\core\drift_shell_engine.py:177:101: E501 line too long (105 > 100 characters)
schwabot\core\drift_shell_engine.py:195:101: E501 line too long (116 > 100 characters)
schwabot\core\drift_shell_engine.py:205:101: E501 line too long (137 > 100 characters)
schwabot\core\drift_shell_engine.py:219:101: E501 line too long (138 > 100 characters)
schwabot\core\drift_shell_engine.py:227:101: E501 line too long (112 > 100 characters)
schwabot\core\drift_shell_engine.py:277:101: E501 line too long (169 > 100 characters)
schwabot\core\drift_shell_engine.py:283:101: E501 line too long (105 > 100 characters)
schwabot\core\drift_shell_engine.py:393:101: E501 line too long (121 > 100 characters)
schwabot\core\drift_shell_engine.py:431:101: E501 line too long (260 > 100 characters)
schwabot\core\drift_shell_engine.py:523:101: E501 line too long (174 > 100 characters)
schwabot\core\drift_shell_engine.py:557:101: E501 line too long (175 > 100 characters)
schwabot\core\drift_shell_engine.py:567:101: E501 line too long (164 > 100 characters)
schwabot\core\drift_shell_engine.py:583:101: E501 line too long (159 > 100 characters)
schwabot\core\drift_shell_engine.py:681:101: E501 line too long (155 > 100 characters)
schwabot\core\drift_shell_engine.py:703:101: E501 line too long (105 > 100 characters)
schwabot\core\drift_shell_engine.py:705:101: E501 line too long (196 > 100 characters)
schwabot\core\drift_shell_engine.py:779:101: E501 line too long (153 > 100 characters)
schwabot\core\drift_shell_engine.py:899:101: E501 line too long (175 > 100 characters)
schwabot\core\drift_shell_engine.py:1015:101: E501 line too long (273 > 100 characters)
schwabot\core\drift_shell_engine.py:1021:101: E501 line too long (131 > 100 characters)
schwabot\core\drift_shell_engine.py:1027:101: E501 line too long (193 > 100 characters)
schwabot\core\drift_shell_engine.py:1029:101: E501 line too long (231 > 100 characters)
schwabot\core\drift_shell_engine.py:1037:101: E501 line too long (119 > 100 characters)
schwabot\core\drift_shell_engine.py:1055:101: E501 line too long (134 > 100 characters)
schwabot\core\drift_shell_engine.py:1073:101: E501 line too long (116 > 100 characters)
schwabot\core\drift_shell_engine.py:1077:101: E501 line too long (168 > 100 characters)
schwabot\core\drift_shell_engine.py:1079:101: E501 line too long (172 > 100 characters)
schwabot\core\drift_shell_engine.py:1095:101: E501 line too long (153 > 100 characters)
schwabot\core\drift_shell_engine.py:1149:101: E501 line too long (103 > 100 characters)
schwabot\core\drift_shell_engine.py:1187:101: E501 line too long (108 > 100 characters)
schwabot\core\drift_shell_engine.py:1229:101: E501 line too long (123 > 100 characters)
schwabot\core\drift_shell_engine.py:1247:101: E501 line too long (132 > 100 characters)
schwabot\core\drift_shell_engine.py:1293:101: E501 line too long (196 > 100 characters)
schwabot\core\drift_shell_engine.py:1313:101: E501 line too long (261 > 100 characters)
schwabot\core\drift_shell_engine.py:1333:101: E501 line too long (341 > 100 characters)
schwabot\core\dualistic_state_machine.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\dualistic_state_machine.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\dualistic_state_machine.py:1:1: D400 First line should end with a period
schwabot\core\dualistic_state_machine.py:115:101: E501 line too long (315 > 100 characters)
schwabot\core\dualistic_state_machine.py:205:101: E501 line too long (117 > 100 characters)
schwabot\core\dualistic_state_machine.py:257:101: E501 line too long (108 > 100 characters)
schwabot\core\dualistic_state_machine.py:301:101: E501 line too long (119 > 100 characters)
schwabot\core\dualistic_state_machine.py:375:101: E501 line too long (133 > 100 characters)
schwabot\core\dualistic_state_machine.py:461:101: E501 line too long (155 > 100 characters)
schwabot\core\dualistic_state_machine.py:465:101: E501 line too long (198 > 100 characters)
schwabot\core\dualistic_state_machine.py:471:101: E501 line too long (103 > 100 characters)
schwabot\core\dualistic_state_machine.py:473:101: E501 line too long (104 > 100 characters)
schwabot\core\dualistic_state_machine.py:479:101: E501 line too long (116 > 100 characters)
schwabot\core\dualistic_state_machine.py:491:101: E501 line too long (113 > 100 characters)
schwabot\core\dualistic_state_machine.py:495:101: E501 line too long (128 > 100 characters)
schwabot\core\dualistic_state_machine.py:525:101: E501 line too long (185 > 100 characters)
schwabot\core\dualistic_state_machine.py:533:101: E501 line too long (203 > 100 characters)
schwabot\core\dualistic_state_machine.py:543:101: E501 line too long (166 > 100 characters)
schwabot\core\dualistic_state_machine.py:549:101: E501 line too long (164 > 100 characters)
schwabot\core\dualistic_state_machine.py:575:101: E501 line too long (125 > 100 characters)
schwabot\core\dualistic_state_machine.py:659:101: E501 line too long (173 > 100 characters)
schwabot\core\dualistic_state_machine.py:675:101: E501 line too long (123 > 100 characters)
schwabot\core\dualistic_state_machine.py:683:101: E501 line too long (139 > 100 characters)
schwabot\core\dualistic_state_machine.py:709:101: E501 line too long (174 > 100 characters)
schwabot\core\dualistic_state_machine.py:717:101: E501 line too long (139 > 100 characters)
schwabot\core\dualistic_state_machine.py:727:101: E501 line too long (247 > 100 characters)
schwabot\core\dualistic_state_machine.py:735:101: E501 line too long (112 > 100 characters)
schwabot\core\dualistic_thought_engines.py:189:14: E999 SyntaxError: unmatched ')'
schwabot\core\enhanced_acceleration_integration.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\enhanced_acceleration_integration.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\enhanced_acceleration_integration.py:1:1: D400 First line should end with a period
schwabot\core\enhanced_acceleration_integration.py:117:101: E501 line too long (253 > 100 characters)
schwabot\core\enhanced_acceleration_integration.py:119:101: E501 line too long (101 > 100 characters)
schwabot\core\enhanced_acceleration_integration.py:183:101: E501 line too long (141 > 100 characters)
schwabot\core\enhanced_acceleration_integration.py:251:101: E501 line too long (102 > 100 characters)
schwabot\core\enhanced_acceleration_integration.py:267:101: E501 line too long (151 > 100 characters)
schwabot\core\enhanced_acceleration_integration.py:319:101: E501 line too long (103 > 100 characters)
schwabot\core\enhanced_acceleration_integration.py:583:101: E501 line too long (114 > 100 characters)
schwabot\core\enhanced_acceleration_integration.py:757:101: E501 line too long (131 > 100 characters)
schwabot\core\enhanced_acceleration_integration.py:791:101: E501 line too long (246 > 100 characters)
schwabot\core\enhanced_acceleration_integration.py:797:101: E501 line too long (429 > 100 characters)
schwabot\core\enhanced_acceleration_integration.py:799:101: E501 line too long (180 > 100 characters)
schwabot\core\enhanced_acceleration_integration.py:815:101: E501 line too long (103 > 100 characters)
schwabot\core\enhanced_acceleration_integration.py:819:101: E501 line too long (103 > 100 characters)
schwabot\core\enhanced_acceleration_integration.py:965:101: E501 line too long (102 > 100 characters)
schwabot\core\enhanced_acceleration_integration.py:971:101: E501 line too long (128 > 100 characters)
schwabot\core\enhanced_acceleration_integration.py:977:101: E501 line too long (130 > 100 characters)
schwabot\core\enhanced_acceleration_integration.py:987:101: E501 line too long (170 > 100 characters)
schwabot\core\enhanced_acceleration_integration.py:1161:101: E501 line too long (106 > 100 characters)
schwabot\core\enhanced_integration_validator.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\enhanced_integration_validator.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\enhanced_integration_validator.py:1:1: D400 First line should end with a period
schwabot\core\enhanced_integration_validator.py:159:101: E501 line too long (192 > 100 characters)
schwabot\core\enhanced_integration_validator.py:167:101: E501 line too long (155 > 100 characters)
schwabot\core\enhanced_integration_validator.py:181:101: E501 line too long (140 > 100 characters)
schwabot\core\enhanced_integration_validator.py:321:101: E501 line too long (132 > 100 characters)
schwabot\core\enhanced_integration_validator.py:403:101: E501 line too long (130 > 100 characters)
schwabot\core\enhanced_integration_validator.py:493:101: E501 line too long (151 > 100 characters)
schwabot\core\enhanced_integration_validator.py:537:101: E501 line too long (217 > 100 characters)
schwabot\core\enhanced_integration_validator.py:543:101: E501 line too long (111 > 100 characters)
schwabot\core\enhanced_integration_validator.py:553:101: E501 line too long (196 > 100 characters)
schwabot\core\enhanced_integration_validator.py:575:101: E501 line too long (149 > 100 characters)
schwabot\core\enhanced_integration_validator.py:583:101: E501 line too long (184 > 100 characters)
schwabot\core\enhanced_integration_validator.py:589:101: E501 line too long (135 > 100 characters)
schwabot\core\enhanced_integration_validator.py:599:101: E501 line too long (103 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\enhanced_live_execution_mapper.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\enhanced_live_execution_mapper.py:1:1: D400 First line should end with a period
schwabot\core\enhanced_live_execution_mapper.py:71:101: E501 line too long (130 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:275:101: E501 line too long (137 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:281:101: E501 line too long (103 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:347:101: E501 line too long (286 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:355:101: E501 line too long (350 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:369:101: E501 line too long (491 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:387:101: E501 line too long (144 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:609:101: E501 line too long (124 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:709:101: E501 line too long (143 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:935:101: E501 line too long (155 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:943:101: E501 line too long (361 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:969:101: E501 line too long (140 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:973:101: E501 line too long (121 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:985:101: E501 line too long (130 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:1129:101: E501 line too long (130 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:1139:101: E501 line too long (601 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:1141:101: E501 line too long (207 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:1171:101: E501 line too long (124 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:1189:101: E501 line too long (559 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:1207:101: E501 line too long (109 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:1235:101: E501 line too long (186 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:1239:101: E501 line too long (195 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:1255:101: E501 line too long (600 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:1267:101: E501 line too long (264 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:1279:101: E501 line too long (393 > 100 characters)
schwabot\core\enhanced_live_execution_mapper.py:1281:101: E501 line too long (202 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\enhanced_master_cycle_engine.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\enhanced_master_cycle_engine.py:1:1: D400 First line should end with a period
schwabot\core\enhanced_master_cycle_engine.py:79:101: E501 line too long (139 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:87:101: E501 line too long (102 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:109:101: E501 line too long (387 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:147:101: E501 line too long (200 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:215:101: E501 line too long (599 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:223:101: E501 line too long (120 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:257:101: E501 line too long (116 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:273:101: E501 line too long (146 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:275:101: E501 line too long (154 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:355:101: E501 line too long (115 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:401:101: E501 line too long (154 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:403:101: E501 line too long (155 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:443:101: E501 line too long (193 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:473:101: E501 line too long (106 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:497:101: E501 line too long (163 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:605:101: E501 line too long (120 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:621:101: E501 line too long (127 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:705:101: E501 line too long (126 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:789:101: E501 line too long (101 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:805:101: E501 line too long (124 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:811:101: E501 line too long (188 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:853:101: E501 line too long (113 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:897:101: E501 line too long (151 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:901:101: E501 line too long (428 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:905:101: E501 line too long (346 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:913:101: E501 line too long (143 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:929:101: E501 line too long (117 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:935:101: E501 line too long (118 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:1003:101: E501 line too long (272 > 100 characters)
schwabot\core\enhanced_master_cycle_engine.py:1015:101: E501 line too long (145 > 100 characters)
schwabot\core\enhanced_master_cycle_profit_engine.py:3:1: D205 1 blank line required between summary line and description
schwabot\core\enhanced_profit_trading_strategy.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\enhanced_profit_trading_strategy.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\enhanced_profit_trading_strategy.py:1:1: D400 First line should end with a period
schwabot\core\enhanced_profit_trading_strategy.py:95:101: E501 line too long (128 > 100 characters)
schwabot\core\enhanced_profit_trading_strategy.py:151:101: E501 line too long (362 > 100 characters)
schwabot\core\enhanced_profit_trading_strategy.py:255:101: E501 line too long (166 > 100 characters)
schwabot\core\enhanced_profit_trading_strategy.py:313:101: E501 line too long (131 > 100 characters)
schwabot\core\enhanced_profit_trading_strategy.py:315:101: E501 line too long (131 > 100 characters)
schwabot\core\enhanced_profit_trading_strategy.py:323:101: E501 line too long (263 > 100 characters)
schwabot\core\enhanced_profit_trading_strategy.py:329:101: E501 line too long (110 > 100 characters)
schwabot\core\enhanced_profit_trading_strategy.py:337:101: E501 line too long (509 > 100 characters)
schwabot\core\enhanced_profit_trading_strategy.py:603:101: E501 line too long (131 > 100 characters)
schwabot\core\enhanced_profit_trading_strategy.py:853:101: E501 line too long (176 > 100 characters)
schwabot\core\enhanced_profit_trading_strategy.py:945:101: E501 line too long (155 > 100 characters)
schwabot\core\enhanced_profit_trading_strategy.py:963:101: E501 line too long (135 > 100 characters)
schwabot\core\enhanced_profit_trading_strategy.py:999:101: E501 line too long (111 > 100 characters)
schwabot\core\enhanced_profit_trading_strategy.py:1253:101: E501 line too long (204 > 100 characters)
schwabot\core\enhanced_profit_trading_strategy.py:1407:101: E501 line too long (447 > 100 characters)
schwabot\core\enhanced_profit_trading_strategy.py:1409:101: E501 line too long (158 > 100 characters)
schwabot\core\enhanced_profit_trading_strategy.py:1413:101: E501 line too long (107 > 100 characters)
schwabot\core\enhanced_profit_trading_strategy.py:1417:101: E501 line too long (148 > 100 characters)
schwabot\core\enhanced_profit_trading_strategy.py:1421:101: E501 line too long (365 > 100 characters)
schwabot\core\enhanced_profit_trading_strategy.py:1437:101: E501 line too long (113 > 100 characters)
schwabot\core\enhanced_profit_trading_strategy.py:1455:101: E501 line too long (173 > 100 characters)
schwabot\core\enhanced_profit_trading_strategy.py:1471:101: E501 line too long (333 > 100 characters)
schwabot\core\enhanced_profit_trading_strategy.py:1477:101: E501 line too long (106 > 100 characters)
schwabot\core\enhanced_profit_trading_strategy.py:1485:101: E501 line too long (123 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\enhanced_strategy_framework.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\enhanced_strategy_framework.py:1:1: D400 First line should end with a period
schwabot\core\enhanced_strategy_framework.py:73:101: E501 line too long (155 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:97:101: E501 line too long (105 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:119:101: E501 line too long (193 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:121:101: E501 line too long (128 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:123:101: E501 line too long (141 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:125:101: E501 line too long (126 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:127:101: E501 line too long (126 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:129:101: E501 line too long (141 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:131:101: E501 line too long (425 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:243:101: E501 line too long (195 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:299:101: E501 line too long (375 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:305:101: E501 line too long (110 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:529:101: E501 line too long (107 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:631:101: E501 line too long (110 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:697:101: E501 line too long (109 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:723:101: E501 line too long (110 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:811:101: E501 line too long (111 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:839:101: E501 line too long (112 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:917:101: E501 line too long (107 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:945:101: E501 line too long (109 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:1041:101: E501 line too long (112 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:1223:101: E501 line too long (115 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:1247:101: E501 line too long (109 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:1405:101: E501 line too long (102 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:1445:101: E501 line too long (177 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:1453:101: E501 line too long (136 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:1471:101: E501 line too long (167 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:1491:101: E501 line too long (166 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:1511:101: E501 line too long (107 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:1591:101: E501 line too long (103 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:1635:101: E501 line too long (125 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:1661:101: E501 line too long (116 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:1727:101: E501 line too long (135 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:1737:101: E501 line too long (106 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:1835:101: E501 line too long (151 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:1839:101: E501 line too long (129 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:1881:101: E501 line too long (482 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:1887:101: E501 line too long (118 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:1905:101: E501 line too long (127 > 100 characters)
schwabot\core\enhanced_strategy_framework.py:1917:101: E501 line too long (151 > 100 characters)
schwabot\core\entropy\galileo_tensor_field.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\entropy\galileo_tensor_field.py:1:1: D400 First line should end with a period
schwabot\core\entropy\galileo_tensor_field.py:34:101: E501 line too long (116 > 100 characters)
schwabot\core\entropy\galileo_tensor_field.py:35:101: E501 line too long (103 > 100 characters)
schwabot\core\entropy\galileo_tensor_field.py:38:101: E501 line too long (104 > 100 characters)
schwabot\core\entropy\galileo_tensor_field.py:56:101: E501 line too long (108 > 100 characters)
schwabot\core\entropy\galileo_tensor_field.py:65:101: E501 line too long (126 > 100 characters)
schwabot\core\entropy\galileo_tensor_field.py:88:101: E501 line too long (278 > 100 characters)
schwabot\core\entropy\galileo_tensor_field.py:97:101: E501 line too long (106 > 100 characters)
schwabot\core\entropy\galileo_tensor_field.py:156:101: E501 line too long (186 > 100 characters)
schwabot\core\entropy\galileo_tensor_field.py:190:101: E501 line too long (135 > 100 characters)
schwabot\core\entropy\galileo_tensor_field.py:340:101: E501 line too long (107 > 100 characters)
schwabot\core\entropy\galileo_tensor_field.py:379:101: E501 line too long (102 > 100 characters)
schwabot\core\entropy\galileo_tensor_field.py:385:101: E501 line too long (121 > 100 characters)
schwabot\core\entropy\galileo_tensor_field.py:386:101: E501 line too long (115 > 100 characters)
schwabot\core\entropy\galileo_tensor_field.py:390:101: E501 line too long (131 > 100 characters)
schwabot\core\entropy\galileo_tensor_field.py:394:101: E501 line too long (229 > 100 characters)
schwabot\core\entropy\galileo_tensor_field.py:411:101: E501 line too long (221 > 100 characters)
schwabot\core\entropy\galileo_tensor_field.py:412:101: E501 line too long (141 > 100 characters)
schwabot\core\entropy\galileo_tensor_field.py:418:101: E501 line too long (125 > 100 characters)
schwabot\core\entropy_monitor.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\entropy_monitor.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\entropy_monitor.py:1:1: D400 First line should end with a period
schwabot\core\entropy_monitor.py:45:101: E501 line too long (101 > 100 characters)
schwabot\core\entropy_monitor.py:61:101: E501 line too long (105 > 100 characters)
schwabot\core\entropy_monitor.py:81:101: E501 line too long (173 > 100 characters)
schwabot\core\entropy_monitor.py:97:101: E501 line too long (156 > 100 characters)
schwabot\core\entropy_monitor.py:187:101: E501 line too long (104 > 100 characters)
schwabot\core\entropy_monitor.py:315:101: E501 line too long (327 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\error_handling_and_flake_gate_prevention.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\error_handling_and_flake_gate_prevention.py:1:1: D400 First line should end with a period
schwabot\core\error_handling_and_flake_gate_prevention.py:147:101: E501 line too long (105 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:161:101: E501 line too long (633 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:267:101: E501 line too long (199 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:335:101: E501 line too long (403 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:337:101: E501 line too long (155 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:339:101: E501 line too long (152 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:347:101: E501 line too long (190 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:383:101: E501 line too long (152 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:385:101: E501 line too long (120 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:387:101: E501 line too long (502 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:395:101: E501 line too long (455 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:401:101: E501 line too long (137 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:415:101: E501 line too long (133 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:431:101: E501 line too long (122 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:445:101: E501 line too long (120 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:461:101: E501 line too long (124 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:475:101: E501 line too long (114 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:491:101: E501 line too long (119 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:505:101: E501 line too long (119 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:523:101: E501 line too long (139 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:541:101: E501 line too long (125 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:559:101: E501 line too long (101 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:673:101: E501 line too long (126 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:695:101: E501 line too long (103 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:715:101: E501 line too long (122 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:751:101: E501 line too long (118 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:817:101: E501 line too long (122 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:907:101: E501 line too long (117 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:913:101: E501 line too long (126 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:929:101: E501 line too long (135 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:937:101: E501 line too long (136 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:947:101: E501 line too long (137 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:1263:101: E501 line too long (271 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:1283:101: E501 line too long (158 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:1345:101: E501 line too long (134 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:1353:101: E501 line too long (188 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:1355:101: E501 line too long (139 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:1359:101: E501 line too long (168 > 100 characters)
schwabot\core\error_handling_and_flake_gate_prevention.py:1455:101: E501 line too long (109 > 100 characters)
schwabot\core\fallback_logic.py:235:18: E999 SyntaxError: unmatched '}'
schwabot\core\ferris_rde.py:255:14: E999 SyntaxError: unmatched '}'
schwabot\core\final_integration_launcher.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\final_integration_launcher.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\final_integration_launcher.py:1:1: D400 First line should end with a period
schwabot\core\final_integration_launcher.py:221:101: E501 line too long (310 > 100 characters)
schwabot\core\final_integration_launcher.py:325:101: E501 line too long (194 > 100 characters)
schwabot\core\final_integration_launcher.py:381:101: E501 line too long (569 > 100 characters)
schwabot\core\final_integration_launcher.py:449:101: E501 line too long (146 > 100 characters)
schwabot\core\final_integration_launcher.py:597:101: E501 line too long (130 > 100 characters)
schwabot\core\final_integration_launcher.py:727:101: E501 line too long (102 > 100 characters)
schwabot\core\final_integration_launcher.py:731:101: E501 line too long (122 > 100 characters)
schwabot\core\final_integration_launcher.py:793:101: E501 line too long (120 > 100 characters)
schwabot\core\final_integration_launcher.py:881:101: E501 line too long (111 > 100 characters)
schwabot\core\final_integration_launcher.py:915:101: E501 line too long (132 > 100 characters)
schwabot\core\final_integration_launcher.py:1129:101: E501 line too long (452 > 100 characters)
schwabot\core\final_integration_launcher.py:1153:101: E501 line too long (125 > 100 characters)
schwabot\core\final_integration_launcher.py:1161:101: E501 line too long (238 > 100 characters)
schwabot\core\final_integration_launcher.py:1163:101: E501 line too long (239 > 100 characters)
schwabot\core\final_integration_launcher.py:1165:101: E501 line too long (160 > 100 characters)
schwabot\core\final_integration_launcher.py:1169:101: E501 line too long (177 > 100 characters)
schwabot\core\final_integration_launcher.py:1171:101: E501 line too long (247 > 100 characters)
schwabot\core\final_integration_launcher.py:1175:101: E501 line too long (201 > 100 characters)
schwabot\core\final_integration_launcher.py:1221:101: E501 line too long (103 > 100 characters)
schwabot\core\final_integration_launcher.py:1227:101: E501 line too long (103 > 100 characters)
schwabot\core\final_integration_launcher.py:1233:101: E501 line too long (101 > 100 characters)
schwabot\core\final_integration_launcher.py:1267:101: E501 line too long (140 > 100 characters)
schwabot\core\final_integration_launcher.py:1299:101: E501 line too long (104 > 100 characters)
schwabot\core\final_integration_launcher.py:1305:101: E501 line too long (101 > 100 characters)
schwabot\core\fractal_core.py:267:2: E999 SyntaxError: unmatched '}'
schwabot\core\galileo_tensor_bridge.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\galileo_tensor_bridge.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\galileo_tensor_bridge.py:1:1: D400 First line should end with a period
schwabot\core\galileo_tensor_bridge.py:79:101: E501 line too long (110 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:87:101: E501 line too long (108 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:111:101: E501 line too long (187 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:203:101: E501 line too long (244 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:211:101: E501 line too long (109 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:257:101: E501 line too long (316 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:263:101: E501 line too long (196 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:275:101: E501 line too long (170 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:291:101: E501 line too long (114 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:321:101: E501 line too long (156 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:325:101: E501 line too long (137 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:351:101: E501 line too long (126 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:361:101: E501 line too long (137 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:409:101: E501 line too long (117 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:447:101: E501 line too long (217 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:517:101: E501 line too long (124 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:569:101: E501 line too long (132 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:579:101: E501 line too long (104 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:581:101: E501 line too long (200 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:587:101: E501 line too long (141 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:589:101: E501 line too long (127 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:607:101: E501 line too long (321 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:613:101: E501 line too long (182 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:621:101: E501 line too long (170 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:627:101: E501 line too long (339 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:637:101: E501 line too long (118 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:649:101: E501 line too long (102 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:655:101: E501 line too long (120 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:687:101: E501 line too long (411 > 100 characters)
schwabot\core\galileo_tensor_bridge.py:707:101: E501 line too long (309 > 100 characters)
schwabot\core\ghost_core.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\ghost_core.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\ghost_core.py:1:1: D400 First line should end with a period
schwabot\core\ghost_core.py:61:101: E501 line too long (128 > 100 characters)
schwabot\core\ghost_core.py:85:101: E501 line too long (339 > 100 characters)
schwabot\core\ghost_core.py:147:101: E501 line too long (104 > 100 characters)
schwabot\core\ghost_core.py:169:101: E501 line too long (274 > 100 characters)
schwabot\core\ghost_core.py:255:101: E501 line too long (118 > 100 characters)
schwabot\core\ghost_core.py:443:101: E501 line too long (109 > 100 characters)
schwabot\core\ghost_core.py:703:101: E501 line too long (145 > 100 characters)
schwabot\core\ghost_core.py:715:101: E501 line too long (128 > 100 characters)
schwabot\core\ghost_core.py:739:101: E501 line too long (106 > 100 characters)
schwabot\core\ghost_core.py:783:101: E501 line too long (170 > 100 characters)
schwabot\core\ghost_core.py:787:101: E501 line too long (118 > 100 characters)
schwabot\core\ghost_core.py:793:101: E501 line too long (106 > 100 characters)
schwabot\core\ghost_core.py:857:101: E501 line too long (117 > 100 characters)
schwabot\core\ghost_core.py:861:101: E501 line too long (178 > 100 characters)
schwabot\core\ghost_field_stabilizer.py:225:2: E999 SyntaxError: unmatched '}'
schwabot\core\glyph_phase_resolver.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\glyph_phase_resolver.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\glyph_phase_resolver.py:1:1: D400 First line should end with a period
schwabot\core\glyph_phase_resolver.py:41:101: E501 line too long (128 > 100 characters)
schwabot\core\glyph_phase_resolver.py:43:101: E501 line too long (215 > 100 characters)
schwabot\core\glyph_phase_resolver.py:51:101: E501 line too long (128 > 100 characters)
schwabot\core\glyph_phase_resolver.py:53:101: E501 line too long (104 > 100 characters)
schwabot\core\glyph_phase_resolver.py:79:101: E501 line too long (153 > 100 characters)
schwabot\core\glyph_phase_resolver.py:83:101: E501 line too long (102 > 100 characters)
schwabot\core\glyph_phase_resolver.py:101:101: E501 line too long (139 > 100 characters)
schwabot\core\glyph_phase_resolver.py:127:101: E501 line too long (142 > 100 characters)
schwabot\core\glyph_phase_resolver.py:143:101: E501 line too long (145 > 100 characters)
schwabot\core\glyph_phase_resolver.py:151:101: E501 line too long (149 > 100 characters)
schwabot\core\glyph_phase_resolver.py:159:101: E501 line too long (149 > 100 characters)
schwabot\core\glyph_phase_resolver.py:167:101: E501 line too long (150 > 100 characters)
schwabot\core\glyph_phase_resolver.py:175:101: E501 line too long (150 > 100 characters)
schwabot\core\glyph_phase_resolver.py:185:101: E501 line too long (149 > 100 characters)
schwabot\core\glyph_vm.py:251:14: E999 SyntaxError: unmatched '}'
schwabot\core\greyscale_collapse_matrix.py:123:63: E999 SyntaxError: unmatched ')'
schwabot\core\hardware_acceleration_manager.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\hardware_acceleration_manager.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\hardware_acceleration_manager.py:1:1: D400 First line should end with a period
schwabot\core\hardware_acceleration_manager.py:75:101: E501 line too long (260 > 100 characters)
schwabot\core\hardware_acceleration_manager.py:145:101: E501 line too long (205 > 100 characters)
schwabot\core\hardware_acceleration_manager.py:205:101: E501 line too long (131 > 100 characters)
schwabot\core\hardware_acceleration_manager.py:271:101: E501 line too long (122 > 100 characters)
schwabot\core\hardware_acceleration_manager.py:415:101: E501 line too long (156 > 100 characters)
schwabot\core\hardware_acceleration_manager.py:501:101: E501 line too long (401 > 100 characters)
schwabot\core\hardware_acceleration_manager.py:573:101: E501 line too long (114 > 100 characters)
schwabot\core\hardware_acceleration_manager.py:617:101: E501 line too long (280 > 100 characters)
schwabot\core\hardware_acceleration_manager.py:627:101: E501 line too long (239 > 100 characters)
schwabot\core\hardware_acceleration_manager.py:633:101: E501 line too long (124 > 100 characters)
schwabot\core\hardware_acceleration_manager.py:667:101: E501 line too long (293 > 100 characters)
schwabot\core\hardware_acceleration_manager.py:673:101: E501 line too long (641 > 100 characters)
schwabot\core\hardware_acceleration_manager.py:683:101: E501 line too long (348 > 100 characters)
schwabot\core\hardware_acceleration_manager.py:691:101: E501 line too long (136 > 100 characters)
schwabot\core\hardware_acceleration_manager.py:703:101: E501 line too long (160 > 100 characters)
schwabot\core\hardware_acceleration_manager.py:707:101: E501 line too long (125 > 100 characters)
schwabot\core\hardware_acceleration_manager.py:715:101: E501 line too long (160 > 100 characters)
schwabot\core\hardware_acceleration_manager.py:723:101: E501 line too long (132 > 100 characters)
schwabot\core\hardware_acceleration_manager.py:739:101: E501 line too long (138 > 100 characters)
schwabot\core\immune\qsc_gate.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\immune\qsc_gate.py:1:1: D400 First line should end with a period
schwabot\core\immune\qsc_gate.py:33:101: E501 line too long (140 > 100 characters)
schwabot\core\immune\qsc_gate.py:37:101: E501 line too long (103 > 100 characters)
schwabot\core\immune\qsc_gate.py:63:101: E501 line too long (108 > 100 characters)
schwabot\core\immune\qsc_gate.py:92:101: E501 line too long (277 > 100 characters)
schwabot\core\immune\qsc_gate.py:97:101: E501 line too long (164 > 100 characters)
schwabot\core\immune\qsc_gate.py:141:101: E501 line too long (103 > 100 characters)
schwabot\core\immune\qsc_gate.py:142:101: E501 line too long (264 > 100 characters)
schwabot\core\immune\qsc_gate.py:156:101: E501 line too long (134 > 100 characters)
schwabot\core\immune\qsc_gate.py:228:101: E501 line too long (163 > 100 characters)
schwabot\core\immune\qsc_gate.py:260:101: E501 line too long (192 > 100 characters)
schwabot\core\immune\qsc_gate.py:268:101: E501 line too long (250 > 100 characters)
schwabot\core\immune\qsc_gate.py:271:101: E501 line too long (150 > 100 characters)
schwabot\core\immune\qsc_gate.py:336:101: E501 line too long (234 > 100 characters)
schwabot\core\immune\qsc_gate.py:345:101: E501 line too long (113 > 100 characters)
schwabot\core\immune\qsc_gate.py:350:101: E501 line too long (213 > 100 characters)
schwabot\core\integration\__init__.py:1:1: D104 Missing docstring in public package
schwabot\core\lantern_core_integration.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\lantern_core_integration.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\lantern_core_integration.py:1:1: D400 First line should end with a period
schwabot\core\lantern_core_integration.py:209:101: E501 line too long (777 > 100 characters)
schwabot\core\lantern_core_integration.py:235:101: E501 line too long (127 > 100 characters)
schwabot\core\lantern_core_integration.py:259:101: E501 line too long (411 > 100 characters)
schwabot\core\lantern_core_integration.py:517:101: E501 line too long (104 > 100 characters)
schwabot\core\lantern_core_integration.py:537:101: E501 line too long (130 > 100 characters)
schwabot\core\lantern_core_integration.py:557:101: E501 line too long (130 > 100 characters)
schwabot\core\lantern_core_integration.py:613:101: E501 line too long (103 > 100 characters)
schwabot\core\lantern_core_integration.py:637:101: E501 line too long (211 > 100 characters)
schwabot\core\lantern_core_integration.py:653:101: E501 line too long (126 > 100 characters)
schwabot\core\lantern_core_integration.py:687:101: E501 line too long (193 > 100 characters)
schwabot\core\lantern_core_integration.py:699:101: E501 line too long (191 > 100 characters)
schwabot\core\lantern_core_integration.py:709:101: E501 line too long (120 > 100 characters)
schwabot\core\lantern_core_integration.py:737:101: E501 line too long (119 > 100 characters)
schwabot\core\lantern_core_integration.py:779:101: E501 line too long (145 > 100 characters)
schwabot\core\lantern_core_integration.py:815:101: E501 line too long (131 > 100 characters)
schwabot\core\lantern_core_integration.py:887:101: E501 line too long (116 > 100 characters)
schwabot\core\lantern_core_integration.py:1029:101: E501 line too long (136 > 100 characters)
schwabot\core\lantern_core_integration.py:1063:101: E501 line too long (383 > 100 characters)
schwabot\core\lantern_core_integration.py:1065:101: E501 line too long (156 > 100 characters)
schwabot\core\lantern_core_integration.py:1169:101: E501 line too long (106 > 100 characters)
schwabot\core\latency_compensator.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\latency_compensator.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\latency_compensator.py:1:1: D400 First line should end with a period
schwabot\core\latency_compensator.py:59:101: E501 line too long (131 > 100 characters)
schwabot\core\latency_compensator.py:109:101: E501 line too long (123 > 100 characters)
schwabot\core\latency_compensator.py:125:101: E501 line too long (147 > 100 characters)
schwabot\core\latency_compensator.py:131:101: E501 line too long (108 > 100 characters)
schwabot\core\latency_compensator.py:161:101: E501 line too long (139 > 100 characters)
schwabot\core\latency_compensator.py:167:101: E501 line too long (103 > 100 characters)
schwabot\core\latency_compensator.py:179:101: E501 line too long (135 > 100 characters)
schwabot\core\latency_compensator.py:203:101: E501 line too long (141 > 100 characters)
schwabot\core\latency_compensator.py:301:101: E501 line too long (110 > 100 characters)
schwabot\core\latency_compensator.py:313:101: E501 line too long (138 > 100 characters)
schwabot\core\latency_compensator.py:373:101: E501 line too long (132 > 100 characters)
schwabot\core\latency_compensator.py:483:101: E501 line too long (106 > 100 characters)
schwabot\core\latency_compensator.py:491:101: E501 line too long (118 > 100 characters)
schwabot\core\latency_compensator.py:499:101: E501 line too long (102 > 100 characters)
schwabot\core\latency_compensator.py:533:101: E501 line too long (158 > 100 characters)
schwabot\core\latency_compensator.py:537:101: E501 line too long (145 > 100 characters)
schwabot\core\latency_compensator.py:573:101: E501 line too long (136 > 100 characters)
schwabot\core\latency_compensator.py:615:101: E501 line too long (129 > 100 characters)
schwabot\core\latency_compensator.py:633:101: E501 line too long (116 > 100 characters)
schwabot\core\latency_compensator.py:641:101: E501 line too long (103 > 100 characters)
schwabot\core\latency_compensator.py:659:101: E501 line too long (263 > 100 characters)
schwabot\core\latency_compensator.py:669:101: E501 line too long (213 > 100 characters)
schwabot\core\latency_compensator.py:717:101: E501 line too long (103 > 100 characters)
schwabot\core\latency_compensator.py:721:101: E501 line too long (236 > 100 characters)
schwabot\core\latency_compensator.py:727:101: E501 line too long (102 > 100 characters)
schwabot\core\latency_compensator.py:731:101: E501 line too long (235 > 100 characters)
schwabot\core\live_execution_mapper.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\live_execution_mapper.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\live_execution_mapper.py:1:1: D400 First line should end with a period
schwabot\core\live_execution_mapper.py:75:101: E501 line too long (138 > 100 characters)
schwabot\core\live_execution_mapper.py:189:101: E501 line too long (127 > 100 characters)
schwabot\core\live_execution_mapper.py:201:101: E501 line too long (124 > 100 characters)
schwabot\core\live_execution_mapper.py:231:101: E501 line too long (101 > 100 characters)
schwabot\core\live_execution_mapper.py:281:101: E501 line too long (230 > 100 characters)
schwabot\core\live_execution_mapper.py:287:101: E501 line too long (118 > 100 characters)
schwabot\core\live_execution_mapper.py:291:101: E501 line too long (153 > 100 characters)
schwabot\core\live_execution_mapper.py:329:101: E501 line too long (116 > 100 characters)
schwabot\core\live_execution_mapper.py:377:101: E501 line too long (214 > 100 characters)
schwabot\core\live_execution_mapper.py:405:101: E501 line too long (186 > 100 characters)
schwabot\core\live_execution_mapper.py:459:101: E501 line too long (242 > 100 characters)
schwabot\core\live_execution_mapper.py:483:101: E501 line too long (113 > 100 characters)
schwabot\core\live_execution_mapper.py:491:101: E501 line too long (151 > 100 characters)
schwabot\core\live_execution_mapper.py:515:101: E501 line too long (169 > 100 characters)
schwabot\core\live_execution_mapper.py:521:101: E501 line too long (114 > 100 characters)
schwabot\core\live_execution_mapper.py:527:101: E501 line too long (138 > 100 characters)
schwabot\core\live_execution_mapper.py:535:101: E501 line too long (167 > 100 characters)
schwabot\core\live_execution_mapper.py:539:101: E501 line too long (136 > 100 characters)
schwabot\core\live_execution_mapper.py:543:101: E501 line too long (132 > 100 characters)
schwabot\core\live_execution_mapper.py:583:101: E501 line too long (190 > 100 characters)
schwabot\core\live_execution_mapper.py:635:101: E501 line too long (148 > 100 characters)
schwabot\core\live_execution_mapper.py:659:101: E501 line too long (103 > 100 characters)
schwabot\core\live_execution_mapper.py:685:101: E501 line too long (103 > 100 characters)
schwabot\core\live_execution_mapper.py:703:101: E501 line too long (130 > 100 characters)
schwabot\core\math\tensor_algebra\unified_tensor_algebra.py:2:1: D205 1 blank line required between summary line and description
schwabot\core\mathematical_optimization_bridge.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\mathematical_optimization_bridge.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\mathematical_optimization_bridge.py:1:1: D400 First line should end with a period
schwabot\core\mathematical_optimization_bridge.py:95:101: E501 line too long (128 > 100 characters)
schwabot\core\mathematical_optimization_bridge.py:115:101: E501 line too long (500 > 100 characters)
schwabot\core\mathematical_optimization_bridge.py:155:101: E501 line too long (237 > 100 characters)
schwabot\core\mathematical_optimization_bridge.py:207:101: E501 line too long (241 > 100 characters)
schwabot\core\mathematical_optimization_bridge.py:239:101: E501 line too long (134 > 100 characters)
schwabot\core\mathematical_optimization_bridge.py:265:101: E501 line too long (222 > 100 characters)
schwabot\core\mathematical_optimization_bridge.py:271:101: E501 line too long (174 > 100 characters)
schwabot\core\mathematical_optimization_bridge.py:285:101: E501 line too long (116 > 100 characters)
schwabot\core\mathematical_optimization_bridge.py:293:101: E501 line too long (102 > 100 characters)
schwabot\core\mathematical_optimization_bridge.py:309:101: E501 line too long (120 > 100 characters)
schwabot\core\mathematical_optimization_bridge.py:317:101: E501 line too long (211 > 100 characters)
schwabot\core\mathematical_optimization_bridge.py:319:101: E501 line too long (159 > 100 characters)
schwabot\core\mathematical_optimization_bridge.py:329:101: E501 line too long (181 > 100 characters)
schwabot\core\mathematical_pipeline_validator.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\mathematical_pipeline_validator.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\mathematical_pipeline_validator.py:1:1: D400 First line should end with a period
schwabot\core\mathematical_pipeline_validator.py:43:101: E501 line too long (105 > 100 characters)
schwabot\core\mathematical_pipeline_validator.py:205:101: E501 line too long (111 > 100 characters)
schwabot\core\mathematical_pipeline_validator.py:233:101: E501 line too long (105 > 100 characters)
schwabot\core\mathematical_pipeline_validator.py:253:101: E501 line too long (169 > 100 characters)
schwabot\core\mathematical_pipeline_validator.py:391:101: E501 line too long (147 > 100 characters)
schwabot\core\mathematical_pipeline_validator.py:461:101: E501 line too long (131 > 100 characters)
schwabot\core\mathematical_pipeline_validator.py:571:101: E501 line too long (128 > 100 characters)
schwabot\core\mathematical_pipeline_validator.py:671:101: E501 line too long (130 > 100 characters)
schwabot\core\mathematical_pipeline_validator.py:689:101: E501 line too long (116 > 100 characters)
schwabot\core\mathematical_pipeline_validator.py:755:101: E501 line too long (153 > 100 characters)
schwabot\core\mathematical_pipeline_validator.py:803:101: E501 line too long (118 > 100 characters)
schwabot\core\mathematical_pipeline_validator.py:823:101: E501 line too long (140 > 100 characters)
schwabot\core\mathematical_pipeline_validator.py:899:101: E501 line too long (146 > 100 characters)
schwabot\core\mathematical_pipeline_validator.py:915:101: E501 line too long (159 > 100 characters)
schwabot\core\mathematical_pipeline_validator.py:1007:101: E501 line too long (222 > 100 characters)
schwabot\core\mathematical_pipeline_validator.py:1023:101: E501 line too long (141 > 100 characters)
schwabot\core\mathematical_pipeline_validator.py:1087:101: E501 line too long (230 > 100 characters)
schwabot\core\mathematical_pipeline_validator.py:1103:101: E501 line too long (141 > 100 characters)
schwabot\core\mathematical_pipeline_validator.py:1207:101: E501 line too long (137 > 100 characters)
schwabot\core\mathematical_pipeline_validator.py:1223:101: E501 line too long (133 > 100 characters)
schwabot\core\mathematical_pipeline_validator.py:1421:101: E501 line too long (120 > 100 characters)
schwabot\core\mathlib_v4.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\mathlib_v4.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\mathlib_v4.py:1:1: D400 First line should end with a period
schwabot\core\mathlib_v4.py:71:101: E501 line too long (110 > 100 characters)
schwabot\core\mathlib_v4.py:359:101: E501 line too long (160 > 100 characters)
schwabot\core\mathlib_v4.py:385:101: E501 line too long (140 > 100 characters)
schwabot\core\mathlib_v4.py:503:101: E501 line too long (134 > 100 characters)
schwabot\core\mathlib_v4.py:515:101: E501 line too long (108 > 100 characters)
schwabot\core\mathlib_v4.py:519:101: E501 line too long (201 > 100 characters)
schwabot\core\mathlib_v4.py:531:101: E501 line too long (143 > 100 characters)
schwabot\core\mathlib_v4.py:545:101: E501 line too long (103 > 100 characters)
schwabot\core\mathlib_v4.py:555:101: E501 line too long (123 > 100 characters)
schwabot\core\mathlib_v4.py:559:101: E501 line too long (162 > 100 characters)
schwabot\core\mathlib_v4.py:567:101: E501 line too long (119 > 100 characters)
schwabot\core\mathlib_v4.py:571:101: E501 line too long (119 > 100 characters)
schwabot\core\mathlib_v4.py:575:101: E501 line too long (105 > 100 characters)
schwabot\core\mathlib_v4.py:583:101: E501 line too long (262 > 100 characters)
schwabot\core\mathlib_v4.py:605:101: E501 line too long (112 > 100 characters)
schwabot\core\matrix_fault_resolver.py:273:2: E999 SyntaxError: unmatched '}'
schwabot\core\matrix_map_logic.py:261:2: E999 SyntaxError: unmatched '}'
schwabot\core\matrix_math_utils.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\matrix_math_utils.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\matrix_math_utils.py:1:1: D400 First line should end with a period
schwabot\core\matrix_math_utils.py:79:101: E501 line too long (179 > 100 characters)
schwabot\core\matrix_math_utils.py:135:101: E501 line too long (287 > 100 characters)
schwabot\core\matrix_math_utils.py:173:101: E501 line too long (191 > 100 characters)
schwabot\core\matrix_math_utils.py:279:101: E501 line too long (188 > 100 characters)
schwabot\core\matrix_math_utils.py:287:101: E501 line too long (121 > 100 characters)
schwabot\core\matrix_math_utils.py:291:101: E501 line too long (141 > 100 characters)
schwabot\core\overlay\aleph_overlay_mapper.py:304:62: E999 SyntaxError: unmatched ')'
schwabot\core\phase\bit_wave_propagator.py:80:67: E999 SyntaxError: closing parenthesis ')' does not match opening parenthesis '['
schwabot\core\phase\drift_phase_weighter.py:286:61: E999 SyntaxError: unmatched ')'
schwabot\core\phase\phase_transition_monitor.py:409:2: E999 SyntaxError: unmatched '}'
schwabot\core\phase_bit_integration.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\phase_bit_integration.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\phase_bit_integration.py:1:1: D400 First line should end with a period
schwabot\core\phase_bit_integration.py:49:101: E501 line too long (272 > 100 characters)
schwabot\core\phase_bit_integration.py:55:101: E501 line too long (295 > 100 characters)
schwabot\core\phase_bit_integration.py:71:101: E501 line too long (129 > 100 characters)
schwabot\core\phase_bit_integration.py:79:101: E501 line too long (105 > 100 characters)
schwabot\core\phase_bit_integration.py:97:101: E501 line too long (101 > 100 characters)
schwabot\core\phase_bit_integration.py:183:101: E501 line too long (139 > 100 characters)
schwabot\core\phase_bit_integration.py:197:101: E501 line too long (139 > 100 characters)
schwabot\core\phase_bit_integration.py:211:101: E501 line too long (139 > 100 characters)
schwabot\core\portfolio_integration.py:247:2: E999 SyntaxError: unmatched '}'
schwabot\core\portfolio_tracker.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\portfolio_tracker.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\portfolio_tracker.py:1:1: D400 First line should end with a period
schwabot\core\portfolio_tracker.py:57:101: E501 line too long (129 > 100 characters)
schwabot\core\portfolio_tracker.py:63:101: E501 line too long (114 > 100 characters)
schwabot\core\portfolio_tracker.py:93:101: E501 line too long (105 > 100 characters)
schwabot\core\portfolio_tracker.py:99:101: E501 line too long (123 > 100 characters)
schwabot\core\portfolio_tracker.py:105:101: E501 line too long (117 > 100 characters)
schwabot\core\portfolio_tracker.py:119:101: E501 line too long (158 > 100 characters)
schwabot\core\portfolio_tracker.py:127:101: E501 line too long (128 > 100 characters)
schwabot\core\portfolio_tracker.py:135:101: E501 line too long (102 > 100 characters)
schwabot\core\portfolio_tracker.py:141:101: E501 line too long (130 > 100 characters)
schwabot\core\portfolio_tracker.py:153:101: E501 line too long (105 > 100 characters)
schwabot\core\portfolio_tracker.py:173:101: E501 line too long (126 > 100 characters)
schwabot\core\portfolio_tracker.py:189:101: E501 line too long (134 > 100 characters)
schwabot\core\portfolio_tracker.py:287:101: E501 line too long (214 > 100 characters)
schwabot\core\portfolio_tracker.py:295:101: E501 line too long (169 > 100 characters)
schwabot\core\portfolio_tracker.py:307:101: E501 line too long (158 > 100 characters)
schwabot\core\portfolio_tracker.py:319:101: E501 line too long (200 > 100 characters)
schwabot\core\portfolio_tracker.py:331:101: E501 line too long (287 > 100 characters)
schwabot\core\portfolio_tracker.py:337:101: E501 line too long (168 > 100 characters)
schwabot\core\portfolio_tracker.py:341:101: E501 line too long (144 > 100 characters)
schwabot\core\portfolio_tracker.py:345:101: E501 line too long (200 > 100 characters)
schwabot\core\portfolio_tracker.py:363:101: E501 line too long (173 > 100 characters)
schwabot\core\profit_cycle_allocator.py:261:14: E999 SyntaxError: unmatched '}'
schwabot\core\profit_memory_echo.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\profit_memory_echo.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\profit_memory_echo.py:1:1: D400 First line should end with a period
schwabot\core\profit_memory_echo.py:49:101: E501 line too long (354 > 100 characters)
schwabot\core\profit_memory_echo.py:57:101: E501 line too long (111 > 100 characters)
schwabot\core\profit_memory_echo.py:63:101: E501 line too long (103 > 100 characters)
schwabot\core\profit_memory_echo.py:79:101: E501 line too long (178 > 100 characters)
schwabot\core\profit_memory_echo.py:89:101: E501 line too long (106 > 100 characters)
schwabot\core\profit_memory_echo.py:93:21: W291 trailing whitespace
schwabot\core\profit_memory_echo.py:107:101: E501 line too long (130 > 100 characters)
schwabot\core\profit_memory_echo.py:117:101: E501 line too long (105 > 100 characters)
schwabot\core\profit_memory_echo.py:139:101: E501 line too long (149 > 100 characters)
schwabot\core\profit_memory_echo.py:149:101: E501 line too long (117 > 100 characters)
schwabot\core\profit_memory_echo.py:223:101: E501 line too long (108 > 100 characters)
schwabot\core\profit_memory_echo.py:227:101: E501 line too long (118 > 100 characters)
schwabot\core\profit_optimization_engine.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\profit_optimization_engine.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\profit_optimization_engine.py:1:1: D400 First line should end with a period
schwabot\core\profit_optimization_engine.py:83:101: E501 line too long (159 > 100 characters)
schwabot\core\profit_optimization_engine.py:137:101: E501 line too long (261 > 100 characters)
schwabot\core\profit_optimization_engine.py:213:101: E501 line too long (191 > 100 characters)
schwabot\core\profit_optimization_engine.py:221:101: E501 line too long (366 > 100 characters)
schwabot\core\profit_optimization_engine.py:251:101: E501 line too long (290 > 100 characters)
schwabot\core\profit_optimization_engine.py:269:101: E501 line too long (136 > 100 characters)
schwabot\core\profit_optimization_engine.py:281:101: E501 line too long (506 > 100 characters)
schwabot\core\profit_optimization_engine.py:325:101: E501 line too long (122 > 100 characters)
schwabot\core\profit_optimization_engine.py:497:101: E501 line too long (150 > 100 characters)
schwabot\core\profit_optimization_engine.py:599:101: E501 line too long (138 > 100 characters)
schwabot\core\profit_optimization_engine.py:661:101: E501 line too long (122 > 100 characters)
schwabot\core\profit_optimization_engine.py:709:101: E501 line too long (125 > 100 characters)
schwabot\core\profit_optimization_engine.py:741:101: E501 line too long (122 > 100 characters)
schwabot\core\profit_optimization_engine.py:833:101: E501 line too long (239 > 100 characters)
schwabot\core\profit_optimization_engine.py:869:101: E501 line too long (111 > 100 characters)
schwabot\core\profit_optimization_engine.py:1209:101: E501 line too long (113 > 100 characters)
schwabot\core\profit_optimization_engine.py:1219:101: E501 line too long (556 > 100 characters)
schwabot\core\profit_optimization_engine.py:1233:101: E501 line too long (156 > 100 characters)
schwabot\core\profit_optimization_engine.py:1239:101: E501 line too long (367 > 100 characters)
schwabot\core\profit_optimization_engine.py:1257:101: E501 line too long (105 > 100 characters)
schwabot\core\profit_optimization_engine.py:1279:101: E501 line too long (151 > 100 characters)
schwabot\core\profit_optimization_engine.py:1293:101: E501 line too long (402 > 100 characters)
schwabot\core\profit_vector_forecast.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\profit_vector_forecast.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\profit_vector_forecast.py:1:1: D400 First line should end with a period
schwabot\core\profit_vector_forecast.py:75:101: E501 line too long (155 > 100 characters)
schwabot\core\profit_vector_forecast.py:137:101: E501 line too long (141 > 100 characters)
schwabot\core\profit_vector_forecast.py:151:101: E501 line too long (189 > 100 characters)
schwabot\core\profit_vector_forecast.py:167:101: E501 line too long (152 > 100 characters)
schwabot\core\profit_vector_forecast.py:175:101: E501 line too long (139 > 100 characters)
schwabot\core\profit_vector_forecast.py:203:101: E501 line too long (127 > 100 characters)
schwabot\core\profit_vector_forecast.py:211:101: E501 line too long (201 > 100 characters)
schwabot\core\profit_vector_forecast.py:217:101: E501 line too long (137 > 100 characters)
schwabot\core\profit_vector_forecast.py:227:101: E501 line too long (199 > 100 characters)
schwabot\core\profit_vector_forecast.py:235:101: E501 line too long (104 > 100 characters)
schwabot\core\profit_vector_forecast.py:247:101: E501 line too long (118 > 100 characters)
schwabot\core\profit_vector_forecast.py:309:101: E501 line too long (126 > 100 characters)
schwabot\core\profit_vector_forecast.py:377:101: E501 line too long (132 > 100 characters)
schwabot\core\profit_vector_forecast.py:389:101: E501 line too long (191 > 100 characters)
schwabot\core\profit_vector_forecast.py:395:101: E501 line too long (159 > 100 characters)
schwabot\core\profit_vector_forecast.py:429:101: E501 line too long (108 > 100 characters)
schwabot\core\profit_vector_forecast.py:435:101: E501 line too long (115 > 100 characters)
schwabot\core\profit_vector_forecast.py:437:101: E501 line too long (119 > 100 characters)
schwabot\core\profit_vector_forecast.py:471:101: E501 line too long (242 > 100 characters)
schwabot\core\profit_vector_forecast.py:479:101: E501 line too long (102 > 100 characters)
schwabot\core\profit_vector_forecast.py:503:101: E501 line too long (111 > 100 characters)
schwabot\core\profit_vector_forecast.py:521:101: E501 line too long (142 > 100 characters)
schwabot\core\profit_vector_forecast.py:557:101: E501 line too long (163 > 100 characters)
schwabot\core\profit_vector_forecast.py:579:101: E501 line too long (107 > 100 characters)
schwabot\core\profit_vector_forecast.py:613:101: E501 line too long (101 > 100 characters)
schwabot\core\profit_vector_forecast.py:841:101: E501 line too long (116 > 100 characters)
schwabot\core\profit_vector_forecast.py:909:101: E501 line too long (107 > 100 characters)
schwabot\core\profit_vector_forecast.py:967:101: E501 line too long (116 > 100 characters)
schwabot\core\profit_vector_forecast.py:969:101: E501 line too long (114 > 100 characters)
schwabot\core\profit_vector_forecast.py:1089:101: E501 line too long (139 > 100 characters)
schwabot\core\profit_vector_forecast.py:1259:101: E501 line too long (113 > 100 characters)
schwabot\core\profit_vector_forecast.py:1355:101: E501 line too long (127 > 100 characters)
schwabot\core\profit_vector_forecast.py:1363:101: E501 line too long (170 > 100 characters)
schwabot\core\profit_vector_forecast.py:1385:101: E501 line too long (139 > 100 characters)
schwabot\core\profit_vector_forecast.py:1403:101: E501 line too long (117 > 100 characters)
schwabot\core\profit_vector_forecast.py:1407:101: E501 line too long (199 > 100 characters)
schwabot\core\profit_vector_forecast.py:1411:101: E501 line too long (208 > 100 characters)
schwabot\core\profit_vector_forecast.py:1425:101: E501 line too long (108 > 100 characters)
schwabot\core\profit_vector_forecast.py:1479:101: E501 line too long (188 > 100 characters)
schwabot\core\profit_vector_forecast.py:1505:101: E501 line too long (161 > 100 characters)
schwabot\core\profit_vector_forecast.py:1517:101: E501 line too long (257 > 100 characters)
schwabot\core\profit_vector_forecast.py:1529:101: E501 line too long (272 > 100 characters)
schwabot\core\profit_vector_forecast.py:1563:101: E501 line too long (352 > 100 characters)
schwabot\core\pure_profit_calculator.py:5:1: D205 1 blank line required between summary line and description
schwabot\core\pure_profit_calculator.py:5:1: D400 First line should end with a period
schwabot\core\pure_profit_calculator.py:34:1: I202 Additional newline in a group of imports. 'import logging' is identified as Stdlib and 'import hashlib' is identified as Stdlib.
schwabot\core\pure_profit_calculator.py:36:1: I202 Additional newline in a group of imports. 'import time' is identified as Stdlib and 'import logging' is identified as Stdlib.
schwabot\core\pure_profit_calculator.py:38:1: I202 Additional newline in a group of imports. 'from dataclasses import dataclass, field' is identified as Stdlib and 'import time' is identified as Stdlib.
schwabot\core\pure_profit_calculator.py:40:1: I202 Additional newline in a group of imports. 'from enum import Enum' is identified as Stdlib and 'from dataclasses import dataclass, field' is identified as Stdlib.
schwabot\core\pure_profit_calculator.py:42:1: I202 Additional newline in a group of imports. 'from typing import Any, Dict, List' is identified as Stdlib and 'from enum import Enum' is identified as Stdlib.
schwabot\core\pure_profit_calculator.py:71:23: ANN101 Missing type annotation for self in method
schwabot\core\pure_profit_calculator.py:71:28: ANN204 Missing return type annotation for special method
schwabot\core\pure_profit_calculator.py:72:1: D202 No blank lines allowed after function docstring
schwabot\core\pure_profit_calculator.py:97:28: ANN101 Missing type annotation for self in method
schwabot\core\pure_profit_calculator.py:98:1: D202 No blank lines allowed after function docstring
schwabot\core\pure_profit_calculator.py:160:23: ANN101 Missing type annotation for self in method
schwabot\core\pure_profit_calculator.py:160:28: ANN204 Missing return type annotation for special method
schwabot\core\pure_profit_calculator.py:161:1: D202 No blank lines allowed after function docstring
schwabot\core\pure_profit_calculator.py:169:1: D205 1 blank line required between summary line and description
schwabot\core\pure_profit_calculator.py:183:18: ANN101 Missing type annotation for self in method
schwabot\core\pure_profit_calculator.py:183:60: ANN204 Missing return type annotation for special method
schwabot\core\pure_profit_calculator.py:184:1: D202 No blank lines allowed after function docstring
schwabot\core\pure_profit_calculator.py:203:9: ANN101 Missing type annotation for self in method
schwabot\core\pure_profit_calculator.py:208:1: D202 No blank lines allowed after function docstring
schwabot\core\pure_profit_calculator.py:208:1: D205 1 blank line required between summary line and description
schwabot\core\pure_profit_calculator.py:208:1: D412 No blank lines allowed between a section header and its content
schwabot\core\pure_profit_calculator.py:320:32: ANN101 Missing type annotation for self in method
schwabot\core\pure_profit_calculator.py:321:1: D202 No blank lines allowed after function docstring
schwabot\core\pure_profit_calculator.py:357:36: ANN101 Missing type annotation for self in method
schwabot\core\pure_profit_calculator.py:358:1: D202 No blank lines allowed after function docstring
schwabot\core\pure_profit_calculator.py:387:9: ANN101 Missing type annotation for self in method
schwabot\core\pure_profit_calculator.py:389:1: D202 No blank lines allowed after function docstring
schwabot\core\pure_profit_calculator.py:410:17: B007 Loop control variable 'bucket_name' not used within the loop body. If this is intended, start the name with an underscore.
schwabot\core\pure_profit_calculator.py:442:9: ANN101 Missing type annotation for self in method
schwabot\core\pure_profit_calculator.py:444:1: D202 No blank lines allowed after function docstring
schwabot\core\pure_profit_calculator.py:489:9: ANN101 Missing type annotation for self in method
schwabot\core\pure_profit_calculator.py:491:1: D202 No blank lines allowed after function docstring
schwabot\core\pure_profit_calculator.py:541:30: ANN101 Missing type annotation for self in method
schwabot\core\pure_profit_calculator.py:542:1: D202 No blank lines allowed after function docstring
schwabot\core\pure_profit_calculator.py:553:33: ANN101 Missing type annotation for self in method
schwabot\core\pure_profit_calculator.py:554:1: D202 No blank lines allowed after function docstring
schwabot\core\pure_profit_calculator.py:576:32: ANN101 Missing type annotation for self in method
schwabot\core\pure_profit_calculator.py:577:1: D202 No blank lines allowed after function docstring
schwabot\core\pure_profit_calculator.py:577:1: D205 1 blank line required between summary line and description
schwabot\core\pure_profit_calculator.py:613:1: D202 No blank lines allowed after function docstring
schwabot\core\pure_profit_calculator.py:613:1: D205 1 blank line required between summary line and description
schwabot\core\pure_profit_calculator.py:641:1: D202 No blank lines allowed after function docstring
schwabot\core\pure_profit_calculator.py:656:1: D202 No blank lines allowed after function docstring
schwabot\core\pure_profit_calculator.py:667:35: ANN201 Missing return type annotation for public function
schwabot\core\pure_profit_calculator.py:668:1: D202 No blank lines allowed after function docstring
schwabot\core\qsc_enhanced_profit_allocator.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\qsc_enhanced_profit_allocator.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\qsc_enhanced_profit_allocator.py:1:1: D400 First line should end with a period
schwabot\core\qsc_enhanced_profit_allocator.py:83:101: E501 line too long (280 > 100 characters)
schwabot\core\qsc_enhanced_profit_allocator.py:123:101: E501 line too long (175 > 100 characters)
schwabot\core\qsc_enhanced_profit_allocator.py:137:101: E501 line too long (156 > 100 characters)
schwabot\core\qsc_enhanced_profit_allocator.py:139:101: E501 line too long (135 > 100 characters)
schwabot\core\qsc_enhanced_profit_allocator.py:141:101: E501 line too long (137 > 100 characters)
schwabot\core\qsc_enhanced_profit_allocator.py:143:101: E501 line too long (143 > 100 characters)
schwabot\core\qsc_enhanced_profit_allocator.py:179:101: E501 line too long (406 > 100 characters)
schwabot\core\qsc_enhanced_profit_allocator.py:189:101: E501 line too long (110 > 100 characters)
schwabot\core\qsc_enhanced_profit_allocator.py:191:101: E501 line too long (110 > 100 characters)
schwabot\core\qsc_enhanced_profit_allocator.py:249:101: E501 line too long (146 > 100 characters)
schwabot\core\qsc_enhanced_profit_allocator.py:271:101: E501 line too long (148 > 100 characters)
schwabot\core\qsc_enhanced_profit_allocator.py:425:101: E501 line too long (178 > 100 characters)
schwabot\core\qsc_enhanced_profit_allocator.py:483:101: E501 line too long (226 > 100 characters)
schwabot\core\qsc_enhanced_profit_allocator.py:485:101: E501 line too long (198 > 100 characters)
schwabot\core\qsc_enhanced_profit_allocator.py:511:101: E501 line too long (121 > 100 characters)
schwabot\core\qsc_enhanced_profit_allocator.py:517:101: E501 line too long (139 > 100 characters)
schwabot\core\qsc_enhanced_profit_allocator.py:547:101: E501 line too long (191 > 100 characters)
schwabot\core\qsc_enhanced_profit_allocator.py:571:101: E501 line too long (137 > 100 characters)
schwabot\core\qsc_enhanced_profit_allocator.py:585:101: E501 line too long (152 > 100 characters)
schwabot\core\qsc_enhanced_profit_allocator.py:593:101: E501 line too long (336 > 100 characters)
schwabot\core\qsc_enhanced_profit_allocator.py:607:101: E501 line too long (120 > 100 characters)
schwabot\core\qsc_enhanced_profit_allocator.py:665:101: E501 line too long (134 > 100 characters)
schwabot\core\qsc_enhanced_profit_allocator.py:677:101: E501 line too long (489 > 100 characters)
schwabot\core\qsc_enhanced_profit_allocator.py:701:101: E501 line too long (107 > 100 characters)
schwabot\core\quantum_drift_shell_engine.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\quantum_drift_shell_engine.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\quantum_drift_shell_engine.py:1:1: D400 First line should end with a period
schwabot\core\quantum_drift_shell_engine.py:39:101: E501 line too long (101 > 100 characters)
schwabot\core\quantum_drift_shell_engine.py:71:101: E501 line too long (108 > 100 characters)
schwabot\core\quantum_static_core.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\quantum_static_core.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\quantum_static_core.py:1:1: D400 First line should end with a period
schwabot\core\quantum_static_core.py:85:101: E501 line too long (281 > 100 characters)
schwabot\core\quantum_static_core.py:145:101: E501 line too long (103 > 100 characters)
schwabot\core\quantum_static_core.py:159:101: E501 line too long (175 > 100 characters)
schwabot\core\quantum_static_core.py:301:101: E501 line too long (119 > 100 characters)
schwabot\core\quantum_static_core.py:311:101: E501 line too long (113 > 100 characters)
schwabot\core\quantum_static_core.py:543:101: E501 line too long (180 > 100 characters)
schwabot\core\quantum_static_core.py:619:101: E501 line too long (165 > 100 characters)
schwabot\core\quantum_static_core.py:677:101: E501 line too long (383 > 100 characters)
schwabot\core\quantum_static_core.py:713:101: E501 line too long (165 > 100 characters)
schwabot\core\quantum_static_core.py:743:101: E501 line too long (542 > 100 characters)
schwabot\core\quantum_superpositional_trigger.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\quantum_superpositional_trigger.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\quantum_superpositional_trigger.py:1:1: D400 First line should end with a period
schwabot\core\quantum_superpositional_trigger.py:67:101: E501 line too long (166 > 100 characters)
schwabot\core\quantum_superpositional_trigger.py:69:101: E501 line too long (107 > 100 characters)
schwabot\core\quantum_superpositional_trigger.py:143:101: E501 line too long (170 > 100 characters)
schwabot\core\quantum_superpositional_trigger.py:179:101: E501 line too long (134 > 100 characters)
schwabot\core\risk_manager.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\risk_manager.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\risk_manager.py:1:1: D400 First line should end with a period
schwabot\core\risk_manager.py:43:101: E501 line too long (101 > 100 characters)
schwabot\core\risk_manager.py:89:101: E501 line too long (110 > 100 characters)
schwabot\core\risk_manager.py:95:101: E501 line too long (111 > 100 characters)
schwabot\core\risk_manager.py:123:101: E501 line too long (124 > 100 characters)
schwabot\core\risk_manager.py:135:101: E501 line too long (179 > 100 characters)
schwabot\core\risk_manager.py:137:101: E501 line too long (115 > 100 characters)
schwabot\core\risk_manager.py:139:101: E501 line too long (109 > 100 characters)
schwabot\core\risk_manager.py:267:101: E501 line too long (158 > 100 characters)
schwabot\core\risk_manager.py:367:101: E501 line too long (132 > 100 characters)
schwabot\core\risk_manager.py:371:101: E501 line too long (176 > 100 characters)
schwabot\core\risk_manager.py:419:101: E501 line too long (107 > 100 characters)
schwabot\core\risk_manager.py:635:101: E501 line too long (110 > 100 characters)
schwabot\core\risk_manager.py:657:101: E501 line too long (119 > 100 characters)
schwabot\core\risk_manager.py:709:101: E501 line too long (101 > 100 characters)
schwabot\core\risk_manager.py:799:101: E501 line too long (140 > 100 characters)
schwabot\core\risk_manager.py:843:101: E501 line too long (117 > 100 characters)
schwabot\core\risk_manager.py:861:101: E501 line too long (124 > 100 characters)
schwabot\core\risk_manager.py:873:101: E501 line too long (115 > 100 characters)
schwabot\core\risk_manager.py:889:101: E501 line too long (203 > 100 characters)
schwabot\core\risk_manager.py:895:101: E501 line too long (131 > 100 characters)
schwabot\core\risk_manager.py:1033:101: E501 line too long (157 > 100 characters)
schwabot\core\risk_manager.py:1077:101: E501 line too long (112 > 100 characters)
schwabot\core\risk_manager.py:1083:101: E501 line too long (115 > 100 characters)
schwabot\core\risk_manager.py:1107:101: E501 line too long (112 > 100 characters)
schwabot\core\risk_manager.py:1113:101: E501 line too long (115 > 100 characters)
schwabot\core\risk_manager.py:1141:101: E501 line too long (114 > 100 characters)
schwabot\core\risk_manager.py:1147:101: E501 line too long (115 > 100 characters)
schwabot\core\schwabot_integrated_launcher.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\schwabot_integrated_launcher.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\schwabot_integrated_launcher.py:1:1: D400 First line should end with a period
schwabot\core\schwabot_integrated_launcher.py:143:101: E501 line too long (122 > 100 characters)
schwabot\core\schwabot_integrated_launcher.py:195:101: E501 line too long (171 > 100 characters)
schwabot\core\schwabot_integrated_launcher.py:197:101: E501 line too long (170 > 100 characters)
schwabot\core\schwabot_integrated_launcher.py:199:101: E501 line too long (105 > 100 characters)
schwabot\core\schwabot_integrated_launcher.py:201:101: E501 line too long (277 > 100 characters)
schwabot\core\schwabot_integrated_launcher.py:211:101: E501 line too long (106 > 100 characters)
schwabot\core\schwabot_integrated_launcher.py:463:101: E501 line too long (102 > 100 characters)
schwabot\core\schwabot_integrated_launcher.py:489:101: E501 line too long (116 > 100 characters)
schwabot\core\schwabot_integrated_launcher.py:559:101: E501 line too long (101 > 100 characters)
schwabot\core\schwabot_integrated_launcher.py:707:101: E501 line too long (102 > 100 characters)
schwabot\core\schwabot_integrated_launcher.py:1063:101: E501 line too long (114 > 100 characters)
schwabot\core\schwabot_integrated_launcher.py:1105:101: E501 line too long (105 > 100 characters)
schwabot\core\schwabot_integrated_launcher.py:1439:101: E501 line too long (106 > 100 characters)
schwabot\core\schwabot_integrated_launcher.py:1449:101: E501 line too long (102 > 100 characters)
schwabot\core\schwabot_integrated_launcher.py:1463:101: E501 line too long (141 > 100 characters)
schwabot\core\schwabot_integrated_launcher.py:1523:101: E501 line too long (157 > 100 characters)
schwabot\core\schwabot_integrated_launcher.py:1527:101: E501 line too long (163 > 100 characters)
schwabot\core\schwabot_integrated_launcher.py:1541:101: E501 line too long (113 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\schwabot_integration_pipeline.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\schwabot_integration_pipeline.py:1:1: D400 First line should end with a period
schwabot\core\schwabot_integration_pipeline.py:147:101: E501 line too long (169 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:193:101: E501 line too long (221 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:201:101: E501 line too long (195 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:213:101: E501 line too long (150 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:217:101: E501 line too long (160 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:229:101: E501 line too long (168 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:303:101: E501 line too long (123 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:351:101: E501 line too long (136 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:373:101: E501 line too long (106 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:419:101: E501 line too long (108 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:443:101: E501 line too long (592 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:449:101: E501 line too long (120 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:619:101: E501 line too long (110 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:629:101: E501 line too long (119 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:679:101: E501 line too long (108 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:763:101: E501 line too long (157 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:773:101: E501 line too long (107 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:781:101: E501 line too long (143 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:869:101: E501 line too long (139 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:893:101: E501 line too long (155 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:913:101: E501 line too long (139 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:949:101: E501 line too long (106 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:957:101: E501 line too long (112 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:961:101: E501 line too long (149 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:1005:101: E501 line too long (159 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:1031:101: E501 line too long (103 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:1073:101: E501 line too long (203 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:1085:101: E501 line too long (150 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:1113:101: E501 line too long (152 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:1115:101: E501 line too long (145 > 100 characters)
schwabot\core\schwabot_integration_pipeline.py:1121:101: E501 line too long (132 > 100 characters)
schwabot\core\schwabot_unified_integration.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\schwabot_unified_integration.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\schwabot_unified_integration.py:1:1: D400 First line should end with a period
schwabot\core\schwabot_unified_integration.py:61:101: E501 line too long (107 > 100 characters)
schwabot\core\schwabot_unified_integration.py:115:101: E501 line too long (302 > 100 characters)
schwabot\core\schwabot_unified_integration.py:179:101: E501 line too long (136 > 100 characters)
schwabot\core\schwabot_unified_integration.py:213:101: E501 line too long (365 > 100 characters)
schwabot\core\schwabot_unified_integration.py:215:101: E501 line too long (105 > 100 characters)
schwabot\core\schwabot_unified_integration.py:217:101: E501 line too long (109 > 100 characters)
schwabot\core\schwabot_unified_integration.py:375:101: E501 line too long (305 > 100 characters)
schwabot\core\schwabot_unified_integration.py:531:101: E501 line too long (296 > 100 characters)
schwabot\core\schwabot_unified_integration.py:589:101: E501 line too long (134 > 100 characters)
schwabot\core\schwabot_unified_integration.py:591:101: E501 line too long (154 > 100 characters)
schwabot\core\schwabot_unified_integration.py:629:101: E501 line too long (129 > 100 characters)
schwabot\core\schwabot_unified_integration.py:649:101: E501 line too long (335 > 100 characters)
schwabot\core\schwabot_unified_integration.py:829:101: E501 line too long (113 > 100 characters)
schwabot\core\schwabot_unified_integration.py:875:101: E501 line too long (301 > 100 characters)
schwabot\core\schwabot_unified_integration.py:881:101: E501 line too long (304 > 100 characters)
schwabot\core\schwabot_unified_integration.py:883:101: E501 line too long (234 > 100 characters)
schwabot\core\schwabot_unified_integration.py:891:101: E501 line too long (124 > 100 characters)
schwabot\core\schwabot_unified_integration.py:921:101: E501 line too long (125 > 100 characters)
schwabot\core\schwabot_unified_integration.py:943:101: E501 line too long (199 > 100 characters)
schwabot\core\schwabot_unified_integration.py:953:101: E501 line too long (137 > 100 characters)
schwabot\core\schwabot_unified_pipeline.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\schwabot_unified_pipeline.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\schwabot_unified_pipeline.py:1:1: D400 First line should end with a period
schwabot\core\schwabot_unified_pipeline.py:95:101: E501 line too long (126 > 100 characters)
schwabot\core\schwabot_unified_pipeline.py:137:101: E501 line too long (175 > 100 characters)
schwabot\core\schwabot_unified_pipeline.py:197:101: E501 line too long (131 > 100 characters)
schwabot\core\schwabot_unified_pipeline.py:407:101: E501 line too long (186 > 100 characters)
schwabot\core\schwabot_unified_pipeline.py:511:101: E501 line too long (110 > 100 characters)
schwabot\core\schwabot_unified_pipeline.py:513:101: E501 line too long (113 > 100 characters)
schwabot\core\schwabot_unified_pipeline.py:519:101: E501 line too long (131 > 100 characters)
schwabot\core\schwabot_unified_pipeline.py:555:101: E501 line too long (293 > 100 characters)
schwabot\core\schwabot_unified_pipeline.py:565:101: E501 line too long (136 > 100 characters)
schwabot\core\schwabot_unified_pipeline.py:571:101: E501 line too long (123 > 100 characters)
schwabot\core\schwabot_unified_pipeline.py:577:101: E501 line too long (122 > 100 characters)
schwabot\core\schwabot_unified_pipeline.py:605:101: E501 line too long (151 > 100 characters)
schwabot\core\schwabot_unified_pipeline.py:615:101: E501 line too long (129 > 100 characters)
schwabot\core\schwabot_unified_pipeline.py:635:101: E501 line too long (743 > 100 characters)
schwabot\core\schwabot_unified_pipeline.py:673:101: E501 line too long (313 > 100 characters)
schwabot\core\schwabot_unified_pipeline.py:687:101: E501 line too long (191 > 100 characters)
schwabot\core\schwabot_unified_pipeline.py:755:101: E501 line too long (199 > 100 characters)
schwabot\core\schwabot_unified_pipeline.py:803:101: E501 line too long (214 > 100 characters)
schwabot\core\schwabot_unified_pipeline.py:829:101: E501 line too long (114 > 100 characters)
schwabot\core\schwabot_unified_pipeline.py:887:101: E501 line too long (303 > 100 characters)
schwabot\core\schwabot_unified_pipeline.py:903:101: E501 line too long (636 > 100 characters)
schwabot\core\schwabot_unified_pipeline.py:951:101: E501 line too long (121 > 100 characters)
schwabot\core\schwabot_unified_pipeline.py:1005:101: E501 line too long (221 > 100 characters)
schwabot\core\schwabot_unified_pipeline.py:1015:101: E501 line too long (261 > 100 characters)
schwabot\core\schwabot_unified_pipeline.py:1017:101: E501 line too long (243 > 100 characters)
schwabot\core\secure_api_coordinator.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\secure_api_coordinator.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\secure_api_coordinator.py:1:1: D400 First line should end with a period
schwabot\core\secure_api_coordinator.py:79:101: E501 line too long (142 > 100 characters)
schwabot\core\secure_api_coordinator.py:113:101: E501 line too long (293 > 100 characters)
schwabot\core\secure_api_coordinator.py:197:101: E501 line too long (161 > 100 characters)
schwabot\core\secure_api_coordinator.py:237:101: E501 line too long (119 > 100 characters)
schwabot\core\secure_api_coordinator.py:255:101: E501 line too long (299 > 100 characters)
schwabot\core\secure_api_coordinator.py:439:101: E501 line too long (232 > 100 characters)
schwabot\core\secure_api_coordinator.py:613:101: E501 line too long (187 > 100 characters)
schwabot\core\secure_api_coordinator.py:695:101: E501 line too long (105 > 100 characters)
schwabot\core\secure_api_coordinator.py:781:101: E501 line too long (133 > 100 characters)
schwabot\core\secure_api_coordinator.py:819:101: E501 line too long (149 > 100 characters)
schwabot\core\secure_api_coordinator.py:851:101: E501 line too long (122 > 100 characters)
schwabot\core\secure_api_coordinator.py:911:101: E501 line too long (384 > 100 characters)
schwabot\core\secure_api_coordinator.py:951:101: E501 line too long (111 > 100 characters)
schwabot\core\secure_api_coordinator.py:977:101: E501 line too long (118 > 100 characters)
schwabot\core\secure_api_coordinator.py:987:101: E501 line too long (138 > 100 characters)
schwabot\core\secure_api_coordinator.py:1005:101: E501 line too long (172 > 100 characters)
schwabot\core\secure_api_coordinator.py:1031:101: E501 line too long (280 > 100 characters)
schwabot\core\secure_api_coordinator.py:1057:101: E501 line too long (111 > 100 characters)
schwabot\core\secure_api_coordinator.py:1079:101: E501 line too long (188 > 100 characters)
schwabot\core\secure_api_coordinator.py:1111:101: E501 line too long (110 > 100 characters)
schwabot\core\secure_api_coordinator.py:1133:101: E501 line too long (188 > 100 characters)
schwabot\core\secure_api_coordinator.py:1161:101: E501 line too long (250 > 100 characters)
schwabot\core\secure_api_coordinator.py:1173:101: E501 line too long (137 > 100 characters)
schwabot\core\secure_api_coordinator.py:1199:101: E501 line too long (153 > 100 characters)
schwabot\core\secure_api_coordinator.py:1217:101: E501 line too long (174 > 100 characters)
schwabot\core\secure_api_coordinator.py:1237:101: E501 line too long (113 > 100 characters)
schwabot\core\secure_api_coordinator.py:1263:101: E501 line too long (383 > 100 characters)
schwabot\core\secure_api_coordinator.py:1331:101: E501 line too long (108 > 100 characters)
schwabot\core\secure_api_coordinator.py:1387:101: E501 line too long (197 > 100 characters)
schwabot\core\security_vector_allocator.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\security_vector_allocator.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\security_vector_allocator.py:1:1: D400 First line should end with a period
schwabot\core\security_vector_allocator.py:83:101: E501 line too long (131 > 100 characters)
schwabot\core\security_vector_allocator.py:131:25: W291 trailing whitespace
schwabot\core\sfsss\__init__.py:1:1: D104 Missing docstring in public package
schwabot\core\speed_lattice_trading_integration.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\speed_lattice_trading_integration.py:15:1: I202 Additional newline in a group of imports. 'import time' is identified as Stdlib and 'import hashlib' is identified as Stdlib.
schwabot\core\speed_lattice_trading_integration.py:17:1: I202 Additional newline in a group of imports. 'from typing import Callable, Dict, Optional' is identified as Stdlib and 'import time' is identified as Stdlib.
schwabot\core\speed_lattice_trading_integration.py:23:18: ANN101 Missing type annotation for self in method
schwabot\core\speed_lattice_trading_integration.py:23:54: ANN204 Missing return type annotation for special method
schwabot\core\speed_lattice_trading_integration.py:24:1: D202 No blank lines allowed after function docstring
schwabot\core\speed_lattice_trading_integration.py:32:19: ANN101 Missing type annotation for self in method
schwabot\core\speed_lattice_trading_integration.py:33:1: D202 No blank lines allowed after function docstring
schwabot\core\speed_lattice_trading_integration.py:39:27: ANN101 Missing type annotation for self in method
schwabot\core\speed_lattice_trading_integration.py:39:75: ANN201 Missing return type annotation for public function
schwabot\core\speed_lattice_trading_integration.py:40:1: D202 No blank lines allowed after function docstring
schwabot\core\speed_lattice_trading_integration.py:44:17: ANN101 Missing type annotation for self in method
schwabot\core\speed_lattice_trading_integration.py:45:1: D202 No blank lines allowed after function docstring
schwabot\core\strategic_immunity_integration_test.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\strategic_immunity_integration_test.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\strategic_immunity_integration_test.py:1:1: D400 First line should end with a period
schwabot\core\strategic_immunity_integration_test.py:83:101: E501 line too long (126 > 100 characters)
schwabot\core\strategic_immunity_integration_test.py:257:101: E501 line too long (107 > 100 characters)
schwabot\core\strategic_immunity_integration_test.py:285:101: E501 line too long (281 > 100 characters)
schwabot\core\strategic_immunity_integration_test.py:307:101: E501 line too long (111 > 100 characters)
schwabot\core\strategic_immunity_integration_test.py:325:101: E501 line too long (248 > 100 characters)
schwabot\core\strategic_immunity_integration_test.py:329:101: E501 line too long (210 > 100 characters)
schwabot\core\strategic_immunity_integration_test.py:335:101: E501 line too long (126 > 100 characters)
schwabot\core\strategic_immunity_integration_test.py:349:101: E501 line too long (157 > 100 characters)
schwabot\core\strategic_immunity_integration_test.py:361:101: E501 line too long (121 > 100 characters)
schwabot\core\strategic_immunity_integration_test.py:375:101: E501 line too long (147 > 100 characters)
schwabot\core\strategic_immunity_integration_test.py:379:101: E501 line too long (149 > 100 characters)
schwabot\core\strategic_immunity_integration_test.py:383:101: E501 line too long (142 > 100 characters)
schwabot\core\strategy\__init__.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\strategy\__init__.py:1:1: D400 First line should end with a period
schwabot\core\strategy\__init__.py:36:101: E501 line too long (127 > 100 characters)
schwabot\core\strategy\entry_exit_portal.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\strategy\entry_exit_portal.py:1:1: D400 First line should end with a period
schwabot\core\strategy\entry_exit_portal.py:91:101: E501 line too long (115 > 100 characters)
schwabot\core\strategy\entry_exit_portal.py:293:101: E501 line too long (121 > 100 characters)
schwabot\core\strategy\entry_exit_portal.py:302:101: E501 line too long (226 > 100 characters)
schwabot\core\strategy\entry_exit_portal.py:313:101: E501 line too long (213 > 100 characters)
schwabot\core\strategy\entry_exit_portal.py:331:101: E501 line too long (123 > 100 characters)
schwabot\core\strategy\entry_exit_portal.py:333:101: E501 line too long (148 > 100 characters)
schwabot\core\strategy\entry_exit_portal.py:335:101: E501 line too long (105 > 100 characters)
schwabot\core\strategy\flip_switch_logic_lattice.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\strategy\flip_switch_logic_lattice.py:1:1: D400 First line should end with a period
schwabot\core\strategy\flip_switch_logic_lattice.py:30:101: E501 line too long (165 > 100 characters)
schwabot\core\strategy\flip_switch_logic_lattice.py:31:101: E501 line too long (115 > 100 characters)
schwabot\core\strategy\flip_switch_logic_lattice.py:34:101: E501 line too long (168 > 100 characters)
schwabot\core\strategy\flip_switch_logic_lattice.py:38:101: E501 line too long (148 > 100 characters)
schwabot\core\strategy\flip_switch_logic_lattice.py:46:101: E501 line too long (227 > 100 characters)
schwabot\core\strategy\flip_switch_logic_lattice.py:55:101: E501 line too long (103 > 100 characters)
schwabot\core\strategy\flip_switch_logic_lattice.py:70:101: E501 line too long (153 > 100 characters)
schwabot\core\strategy\flip_switch_logic_lattice.py:102:101: E501 line too long (141 > 100 characters)
schwabot\core\strategy\flip_switch_logic_lattice.py:105:101: E501 line too long (133 > 100 characters)
schwabot\core\strategy\flip_switch_logic_lattice.py:116:101: E501 line too long (145 > 100 characters)
schwabot\core\strategy\flip_switch_logic_lattice.py:127:101: E501 line too long (112 > 100 characters)
schwabot\core\strategy\flip_switch_logic_lattice.py:129:101: E501 line too long (111 > 100 characters)
schwabot\core\strategy\flip_switch_logic_lattice.py:142:101: E501 line too long (116 > 100 characters)
schwabot\core\strategy\flip_switch_logic_lattice.py:145:101: E501 line too long (116 > 100 characters)
schwabot\core\strategy\flip_switch_logic_lattice.py:149:101: E501 line too long (141 > 100 characters)
schwabot\core\strategy\glyph_gate_engine.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\strategy\glyph_gate_engine.py:1:1: D400 First line should end with a period
schwabot\core\strategy\glyph_gate_engine.py:58:101: E501 line too long (184 > 100 characters)
schwabot\core\strategy\glyph_gate_engine.py:94:101: E501 line too long (107 > 100 characters)
schwabot\core\strategy\glyph_gate_engine.py:173:101: E501 line too long (103 > 100 characters)
schwabot\core\strategy\glyph_gate_engine.py:179:101: E501 line too long (101 > 100 characters)
schwabot\core\strategy\glyph_gate_engine.py:199:101: E501 line too long (302 > 100 characters)
schwabot\core\strategy\glyph_gate_engine.py:208:101: E501 line too long (149 > 100 characters)
schwabot\core\strategy\glyph_gate_engine.py:229:101: E501 line too long (126 > 100 characters)
schwabot\core\strategy\glyph_gate_engine.py:249:101: E501 line too long (169 > 100 characters)
schwabot\core\strategy\glyph_gate_engine.py:251:101: E501 line too long (171 > 100 characters)
schwabot\core\strategy\glyph_gate_engine.py:253:101: E501 line too long (108 > 100 characters)
schwabot\core\strategy\glyph_gate_engine.py:261:101: E501 line too long (184 > 100 characters)
schwabot\core\strategy\loss_anticipation_curve.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\strategy\loss_anticipation_curve.py:1:1: D400 First line should end with a period
schwabot\core\strategy\loss_anticipation_curve.py:35:101: E501 line too long (102 > 100 characters)
schwabot\core\strategy\loss_anticipation_curve.py:42:101: E501 line too long (110 > 100 characters)
schwabot\core\strategy\loss_anticipation_curve.py:46:101: E501 line too long (123 > 100 characters)
schwabot\core\strategy\loss_anticipation_curve.py:52:101: E501 line too long (106 > 100 characters)
schwabot\core\strategy\loss_anticipation_curve.py:59:101: E501 line too long (135 > 100 characters)
schwabot\core\strategy\loss_anticipation_curve.py:70:101: E501 line too long (142 > 100 characters)
schwabot\core\strategy\loss_anticipation_curve.py:75:101: E501 line too long (147 > 100 characters)
schwabot\core\strategy\loss_anticipation_curve.py:109:101: E501 line too long (154 > 100 characters)
schwabot\core\strategy\loss_anticipation_curve.py:114:101: E501 line too long (133 > 100 characters)
schwabot\core\strategy\loss_anticipation_curve.py:116:101: E501 line too long (129 > 100 characters)
schwabot\core\strategy\loss_anticipation_curve.py:140:101: E501 line too long (104 > 100 characters)
schwabot\core\strategy\loss_anticipation_curve.py:153:101: E501 line too long (114 > 100 characters)
schwabot\core\strategy\multi_phase_strategy_weight_tensor.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\strategy\multi_phase_strategy_weight_tensor.py:1:1: D400 First line should end with a period
schwabot\core\strategy\multi_phase_strategy_weight_tensor.py:44:101: E501 line too long (327 > 100 characters)
schwabot\core\strategy\multi_phase_strategy_weight_tensor.py:52:101: E501 line too long (103 > 100 characters)
schwabot\core\strategy\multi_phase_strategy_weight_tensor.py:85:101: E501 line too long (133 > 100 characters)
schwabot\core\strategy\multi_phase_strategy_weight_tensor.py:89:101: E501 line too long (102 > 100 characters)
schwabot\core\strategy\multi_phase_strategy_weight_tensor.py:101:101: E501 line too long (119 > 100 characters)
schwabot\core\strategy\multi_phase_strategy_weight_tensor.py:118:101: E501 line too long (146 > 100 characters)
schwabot\core\strategy\multi_phase_strategy_weight_tensor.py:133:101: E501 line too long (101 > 100 characters)
schwabot\core\strategy\multi_phase_strategy_weight_tensor.py:147:101: E501 line too long (113 > 100 characters)
schwabot\core\strategy\multi_phase_strategy_weight_tensor.py:148:101: E501 line too long (167 > 100 characters)
schwabot\core\strategy\multi_phase_strategy_weight_tensor.py:160:101: E501 line too long (118 > 100 characters)
schwabot\core\strategy\multi_phase_strategy_weight_tensor.py:163:101: E501 line too long (109 > 100 characters)
schwabot\core\strategy\multi_phase_strategy_weight_tensor.py:173:101: E501 line too long (109 > 100 characters)
schwabot\core\strategy\multi_phase_strategy_weight_tensor.py:178:101: E501 line too long (215 > 100 characters)
schwabot\core\strategy\multi_phase_strategy_weight_tensor.py:187:101: E501 line too long (223 > 100 characters)
schwabot\core\strategy\multi_phase_strategy_weight_tensor.py:196:101: E501 line too long (217 > 100 characters)
schwabot\core\strategy\multi_phase_strategy_weight_tensor.py:204:101: E501 line too long (250 > 100 characters)
schwabot\core\strategy\volume_weighted_hash_oscillator.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\strategy\volume_weighted_hash_oscillator.py:1:1: D400 First line should end with a period
schwabot\core\strategy\volume_weighted_hash_oscillator.py:39:101: E501 line too long (156 > 100 characters)
schwabot\core\strategy\volume_weighted_hash_oscillator.py:57:101: E501 line too long (148 > 100 characters)
schwabot\core\strategy\volume_weighted_hash_oscillator.py:73:101: E501 line too long (140 > 100 characters)
schwabot\core\strategy\volume_weighted_hash_oscillator.py:76:101: E501 line too long (149 > 100 characters)
schwabot\core\strategy\volume_weighted_hash_oscillator.py:82:101: E501 line too long (121 > 100 characters)
schwabot\core\strategy\volume_weighted_hash_oscillator.py:145:101: E501 line too long (118 > 100 characters)
schwabot\core\strategy\volume_weighted_hash_oscillator.py:168:101: E501 line too long (112 > 100 characters)
schwabot\core\strategy\volume_weighted_hash_oscillator.py:173:101: E501 line too long (109 > 100 characters)
schwabot\core\strategy\volume_weighted_hash_oscillator.py:175:101: E501 line too long (157 > 100 characters)
schwabot\core\strategy\volume_weighted_hash_oscillator.py:182:101: E501 line too long (126 > 100 characters)
schwabot\core\strategy\volume_weighted_hash_oscillator.py:192:101: E501 line too long (302 > 100 characters)
schwabot\core\strategy\volume_weighted_hash_oscillator.py:220:101: E501 line too long (140 > 100 characters)
schwabot\core\strategy\zygot_zalgo_entropy_dual_key_gate.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\strategy\zygot_zalgo_entropy_dual_key_gate.py:1:1: D400 First line should end with a period
schwabot\core\strategy\zygot_zalgo_entropy_dual_key_gate.py:33:101: E501 line too long (139 > 100 characters)
schwabot\core\strategy\zygot_zalgo_entropy_dual_key_gate.py:34:101: E501 line too long (235 > 100 characters)
schwabot\core\strategy\zygot_zalgo_entropy_dual_key_gate.py:41:101: E501 line too long (136 > 100 characters)
schwabot\core\strategy\zygot_zalgo_entropy_dual_key_gate.py:52:101: E501 line too long (210 > 100 characters)
schwabot\core\strategy\zygot_zalgo_entropy_dual_key_gate.py:60:101: E501 line too long (102 > 100 characters)
schwabot\core\strategy\zygot_zalgo_entropy_dual_key_gate.py:64:101: E501 line too long (148 > 100 characters)
schwabot\core\strategy\zygot_zalgo_entropy_dual_key_gate.py:77:101: E501 line too long (151 > 100 characters)
schwabot\core\strategy\zygot_zalgo_entropy_dual_key_gate.py:81:101: E501 line too long (106 > 100 characters)
schwabot\core\strategy\zygot_zalgo_entropy_dual_key_gate.py:89:101: E501 line too long (111 > 100 characters)
schwabot\core\strategy\zygot_zalgo_entropy_dual_key_gate.py:99:101: E501 line too long (107 > 100 characters)
schwabot\core\strategy\zygot_zalgo_entropy_dual_key_gate.py:131:101: E501 line too long (160 > 100 characters)
schwabot\core\strategy\zygot_zalgo_entropy_dual_key_gate.py:136:101: E501 line too long (110 > 100 characters)
schwabot\core\strategy\zygot_zalgo_entropy_dual_key_gate.py:168:101: E501 line too long (105 > 100 characters)
schwabot\core\strategy\zygot_zalgo_entropy_dual_key_gate.py:171:101: E501 line too long (112 > 100 characters)
schwabot\core\strategy\zygot_zalgo_entropy_dual_key_gate.py:196:101: E501 line too long (116 > 100 characters)
schwabot\core\strategy\zygot_zalgo_entropy_dual_key_gate.py:202:101: E501 line too long (133 > 100 characters)
schwabot\core\strategy\zygot_zalgo_entropy_dual_key_gate.py:210:101: E501 line too long (209 > 100 characters)
schwabot\core\strategy\zygot_zalgo_entropy_dual_key_gate.py:214:101: E501 line too long (193 > 100 characters)
schwabot\core\strategy\zygot_zalgo_entropy_dual_key_gate.py:215:101: E501 line too long (168 > 100 characters)
schwabot\core\strategy\zygot_zalgo_entropy_dual_key_gate.py:217:101: E501 line too long (271 > 100 characters)
schwabot\core\strategy_bit_mapper.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\strategy_bit_mapper.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\strategy_bit_mapper.py:1:1: D400 First line should end with a period
schwabot\core\strategy_bit_mapper.py:109:101: E501 line too long (131 > 100 characters)
schwabot\core\strategy_bit_mapper.py:147:101: E501 line too long (154 > 100 characters)
schwabot\core\strategy_bit_mapper.py:307:101: E501 line too long (131 > 100 characters)
schwabot\core\strategy_bit_mapper.py:349:101: E501 line too long (118 > 100 characters)
schwabot\core\strategy_bit_mapper.py:379:101: E501 line too long (169 > 100 characters)
schwabot\core\strategy_bit_mapper.py:465:101: E501 line too long (120 > 100 characters)
schwabot\core\strategy_bit_mapper.py:479:101: E501 line too long (110 > 100 characters)
schwabot\core\strategy_bit_mapper.py:513:101: E501 line too long (116 > 100 characters)
schwabot\core\strategy_bit_mapper.py:523:101: E501 line too long (105 > 100 characters)
schwabot\core\strategy_bit_mapper.py:547:101: E501 line too long (216 > 100 characters)
schwabot\core\strategy_bit_mapper.py:555:101: E501 line too long (136 > 100 characters)
schwabot\core\strategy_bit_mapper.py:557:101: E501 line too long (136 > 100 characters)
schwabot\core\strategy_bit_mapper.py:567:101: E501 line too long (124 > 100 characters)
schwabot\core\strategy_bit_mapper.py:581:101: E501 line too long (102 > 100 characters)
schwabot\core\strategy_bit_mapper.py:587:101: E501 line too long (117 > 100 characters)
schwabot\core\strategy_bit_mapper.py:597:101: E501 line too long (181 > 100 characters)
schwabot\core\strategy_bit_mapper.py:639:101: E501 line too long (112 > 100 characters)
schwabot\core\strategy_bit_mapper.py:645:101: E501 line too long (157 > 100 characters)
schwabot\core\strategy_bit_mapper.py:655:101: E501 line too long (115 > 100 characters)
schwabot\core\strategy_bit_mapper.py:665:101: E501 line too long (112 > 100 characters)
schwabot\core\strategy_integration_bridge.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\strategy_integration_bridge.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\strategy_integration_bridge.py:1:1: D400 First line should end with a period
schwabot\core\strategy_integration_bridge.py:87:101: E501 line too long (166 > 100 characters)
schwabot\core\strategy_integration_bridge.py:171:101: E501 line too long (105 > 100 characters)
schwabot\core\strategy_integration_bridge.py:273:101: E501 line too long (130 > 100 characters)
schwabot\core\strategy_integration_bridge.py:303:101: E501 line too long (112 > 100 characters)
schwabot\core\strategy_integration_bridge.py:311:101: E501 line too long (289 > 100 characters)
schwabot\core\strategy_integration_bridge.py:319:101: E501 line too long (442 > 100 characters)
schwabot\core\strategy_integration_bridge.py:531:101: E501 line too long (174 > 100 characters)
schwabot\core\strategy_integration_bridge.py:573:101: E501 line too long (125 > 100 characters)
schwabot\core\strategy_integration_bridge.py:595:101: E501 line too long (110 > 100 characters)
schwabot\core\strategy_integration_bridge.py:629:101: E501 line too long (120 > 100 characters)
schwabot\core\strategy_integration_bridge.py:651:101: E501 line too long (161 > 100 characters)
schwabot\core\strategy_integration_bridge.py:729:101: E501 line too long (105 > 100 characters)
schwabot\core\strategy_integration_bridge.py:837:101: E501 line too long (128 > 100 characters)
schwabot\core\strategy_integration_bridge.py:901:101: E501 line too long (238 > 100 characters)
schwabot\core\strategy_integration_bridge.py:1027:101: E501 line too long (123 > 100 characters)
schwabot\core\strategy_integration_bridge.py:1035:101: E501 line too long (166 > 100 characters)
schwabot\core\strategy_integration_bridge.py:1079:101: E501 line too long (135 > 100 characters)
schwabot\core\strategy_integration_bridge.py:1117:101: E501 line too long (160 > 100 characters)
schwabot\core\strategy_integration_bridge.py:1151:101: E501 line too long (168 > 100 characters)
schwabot\core\strategy_integration_bridge.py:1161:101: E501 line too long (258 > 100 characters)
schwabot\core\strategy_integration_bridge.py:1169:101: E501 line too long (192 > 100 characters)
schwabot\core\strategy_integration_bridge.py:1187:101: E501 line too long (234 > 100 characters)
schwabot\core\strategy_integration_bridge.py:1195:101: E501 line too long (115 > 100 characters)
schwabot\core\strategy_integration_bridge.py:1203:101: E501 line too long (324 > 100 characters)
schwabot\core\strategy_integration_bridge.py:1215:101: E501 line too long (416 > 100 characters)
schwabot\core\strategy_integration_bridge.py:1229:101: E501 line too long (436 > 100 characters)
schwabot\core\strategy_integration_bridge.py:1231:101: E501 line too long (128 > 100 characters)
schwabot\core\strategy_integration_bridge.py:1237:101: E501 line too long (232 > 100 characters)
schwabot\core\strategy_integration_bridge.py:1239:101: E501 line too long (580 > 100 characters)
schwabot\core\strategy_integration_bridge.py:1247:101: E501 line too long (116 > 100 characters)
schwabot\core\strategy_integration_bridge.py:1291:101: E501 line too long (293 > 100 characters)
schwabot\core\strategy_integration_bridge.py:1293:101: E501 line too long (215 > 100 characters)
schwabot\core\strategy_integration_bridge.py:1313:101: E501 line too long (127 > 100 characters)
schwabot\core\strategy_integration_bridge.py:1319:101: E501 line too long (132 > 100 characters)
schwabot\core\strategy_integration_bridge.py:1347:101: E501 line too long (293 > 100 characters)
schwabot\core\strategy_integration_bridge.py:1357:101: E501 line too long (109 > 100 characters)
schwabot\core\strategy_integration_bridge.py:1359:101: E501 line too long (137 > 100 characters)
schwabot\core\strategy_logic.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\strategy_logic.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\strategy_logic.py:1:1: D400 First line should end with a period
schwabot\core\strategy_logic.py:81:101: E501 line too long (137 > 100 characters)
schwabot\core\strategy_logic.py:101:101: E501 line too long (131 > 100 characters)
schwabot\core\strategy_logic.py:103:101: E501 line too long (101 > 100 characters)
schwabot\core\strategy_logic.py:147:101: E501 line too long (486 > 100 characters)
schwabot\core\strategy_logic.py:221:101: E501 line too long (158 > 100 characters)
schwabot\core\strategy_logic.py:269:101: E501 line too long (295 > 100 characters)
schwabot\core\strategy_logic.py:275:101: E501 line too long (124 > 100 characters)
schwabot\core\strategy_logic.py:353:101: E501 line too long (169 > 100 characters)
schwabot\core\strategy_logic.py:409:101: E501 line too long (259 > 100 characters)
schwabot\core\strategy_logic.py:589:101: E501 line too long (118 > 100 characters)
schwabot\core\strategy_logic.py:605:101: E501 line too long (116 > 100 characters)
schwabot\core\strategy_logic.py:621:101: E501 line too long (103 > 100 characters)
schwabot\core\strategy_logic.py:695:101: E501 line too long (104 > 100 characters)
schwabot\core\strategy_logic.py:827:101: E501 line too long (158 > 100 characters)
schwabot\core\strategy_logic.py:851:101: E501 line too long (108 > 100 characters)
schwabot\core\strategy_logic.py:993:101: E501 line too long (190 > 100 characters)
schwabot\core\strategy_logic.py:1015:101: E501 line too long (131 > 100 characters)
schwabot\core\strategy_logic.py:1093:101: E501 line too long (140 > 100 characters)
schwabot\core\strategy_logic.py:1119:101: E501 line too long (142 > 100 characters)
schwabot\core\strategy_logic.py:1163:101: E501 line too long (129 > 100 characters)
schwabot\core\strategy_logic.py:1193:101: E501 line too long (133 > 100 characters)
schwabot\core\strategy_logic.py:1277:101: E501 line too long (131 > 100 characters)
schwabot\core\strategy_logic.py:1281:101: E501 line too long (151 > 100 characters)
schwabot\core\strategy_logic.py:1285:101: E501 line too long (164 > 100 characters)
schwabot\core\strategy_logic.py:1309:101: E501 line too long (331 > 100 characters)
schwabot\core\strategy_logic.py:1351:101: E501 line too long (284 > 100 characters)
schwabot\core\strategy_mapper.py:3:1: D400 First line should end with a period
schwabot\core\strategy_mapper.py:20:1: I202 Additional newline in a group of imports. 'import json' is identified as Stdlib and 'import hashlib' is identified as Stdlib.
schwabot\core\strategy_mapper.py:22:1: I202 Additional newline in a group of imports. 'import logging' is identified as Stdlib and 'import json' is identified as Stdlib.
schwabot\core\strategy_mapper.py:24:1: I202 Additional newline in a group of imports. 'import os' is identified as Stdlib and 'import logging' is identified as Stdlib.
schwabot\core\strategy_mapper.py:29:1: I202 Additional newline in a group of imports. 'import sys' is identified as Stdlib and 'import os' is identified as Stdlib.
schwabot\core\strategy_mapper.py:31:1: I202 Additional newline in a group of imports. 'import time' is identified as Stdlib and 'import sys' is identified as Stdlib.
schwabot\core\strategy_mapper.py:33:1: I202 Additional newline in a group of imports. 'from dataclasses import dataclass, field' is identified as Stdlib and 'import time' is identified as Stdlib.
schwabot\core\strategy_mapper.py:35:1: I202 Additional newline in a group of imports. 'from enum import Enum' is identified as Stdlib and 'from dataclasses import dataclass, field' is identified as Stdlib.
schwabot\core\strategy_mapper.py:37:1: I202 Additional newline in a group of imports. 'from typing import Any, Dict, List, Optional, Tuple' is identified as Stdlib and 'from enum import Enum' is identified as Stdlib.
schwabot\core\strategy_mapper.py:45:1: I100 Import statements are in the wrong order. 'from core.advanced_tensor_algebra import UnifiedTensorAlgebra' should be before 'import numpy' and in a different group.
schwabot\core\strategy_mapper.py:45:1: E402 module level import not at top of file
schwabot\core\strategy_mapper.py:60:1: D103 Missing docstring in public function
schwabot\core\strategy_mapper.py:60:19: ANN001 Missing type annotation for function argument 'message'
schwabot\core\strategy_mapper.py:61:0: ANN201 Missing return type annotation for public function
schwabot\core\strategy_mapper.py:64:1: D103 Missing docstring in public function
schwabot\core\strategy_mapper.py:64:20: ANN001 Missing type annotation for function argument 'message'
schwabot\core\strategy_mapper.py:65:0: ANN201 Missing return type annotation for public function
schwabot\core\strategy_mapper.py:68:1: D103 Missing docstring in public function
schwabot\core\strategy_mapper.py:68:22: ANN001 Missing type annotation for function argument 'message'
schwabot\core\strategy_mapper.py:69:0: ANN201 Missing return type annotation for public function
schwabot\core\strategy_mapper.py:174:1: D205 1 blank line required between summary line and description
schwabot\core\strategy_mapper.py:186:18: ANN101 Missing type annotation for self in method
schwabot\core\strategy_mapper.py:186:64: ANN204 Missing return type annotation for special method
schwabot\core\strategy_mapper.py:187:1: D202 No blank lines allowed after function docstring
schwabot\core\strategy_mapper.py:229:25: ANN101 Missing type annotation for self in method
schwabot\core\strategy_mapper.py:230:1: D202 No blank lines allowed after function docstring
schwabot\core\strategy_mapper.py:230:1: D401 First line should be in imperative mood; try rephrasing
schwabot\core\strategy_mapper.py:244:40: ANN101 Missing type annotation for self in method
schwabot\core\strategy_mapper.py:244:45: ANN202 Missing return type annotation for protected function
schwabot\core\strategy_mapper.py:245:1: D202 No blank lines allowed after function docstring
schwabot\core\strategy_mapper.py:285:9: ANN101 Missing type annotation for self in method
schwabot\core\strategy_mapper.py:292:1: D202 No blank lines allowed after function docstring
schwabot\core\strategy_mapper.py:332:9: ANN101 Missing type annotation for self in method
schwabot\core\strategy_mapper.py:339:1: D202 No blank lines allowed after function docstring
schwabot\core\strategy_mapper.py:379:9: ANN101 Missing type annotation for self in method
schwabot\core\strategy_mapper.py:385:1: D202 No blank lines allowed after function docstring
schwabot\core\strategy_mapper.py:413:25: ANN101 Missing type annotation for self in method
schwabot\core\strategy_mapper.py:414:1: D202 No blank lines allowed after function docstring
schwabot\core\strategy_mapper.py:428:9: ANN101 Missing type annotation for self in method
schwabot\core\strategy_mapper.py:430:1: D202 No blank lines allowed after function docstring
schwabot\core\strategy_mapper.py:430:1: D205 1 blank line required between summary line and description
schwabot\core\strategy_mapper.py:430:1: D412 No blank lines allowed between a section header and its content
schwabot\core\strategy_mapper.py:484:17: B007 Loop control variable 'strategy_id' not used within the loop body. If this is intended, start the name with an underscore.
schwabot\core\strategy_mapper.py:498:31: ANN101 Missing type annotation for self in method
schwabot\core\strategy_mapper.py:499:1: D202 No blank lines allowed after function docstring
schwabot\core\strategy_mapper.py:522:32: ANN101 Missing type annotation for self in method
schwabot\core\strategy_mapper.py:523:1: D202 No blank lines allowed after function docstring
schwabot\core\strategy_mapper.py:557:31: ANN101 Missing type annotation for self in method
schwabot\core\strategy_mapper.py:558:1: D202 No blank lines allowed after function docstring
schwabot\core\strategy_mapper.py:584:30: ANN101 Missing type annotation for self in method
schwabot\core\strategy_mapper.py:585:1: D202 No blank lines allowed after function docstring
schwabot\core\strategy_mapper.py:608:9: ANN101 Missing type annotation for self in method
schwabot\core\strategy_mapper.py:613:1: D202 No blank lines allowed after function docstring
schwabot\core\strategy_mapper.py:613:1: D205 1 blank line required between summary line and description
schwabot\core\strategy_mapper.py:613:1: D412 No blank lines allowed between a section header and its content
schwabot\core\strategy_mapper.py:684:101: E501 line too long (112 > 100 characters)
schwabot\core\strategy_mapper.py:698:9: ANN101 Missing type annotation for self in method
schwabot\core\strategy_mapper.py:703:1: D202 No blank lines allowed after function docstring
schwabot\core\strategy_mapper.py:736:101: E501 line too long (102 > 100 characters)
schwabot\core\strategy_mapper.py:841:101: E501 line too long (143 > 100 characters)
schwabot\core\strategy_mapper.py:853:9: ANN101 Missing type annotation for self in method
schwabot\core\strategy_mapper.py:858:1: D202 No blank lines allowed after function docstring
schwabot\core\strategy_mapper.py:880:30: ANN101 Missing type annotation for self in method
schwabot\core\strategy_mapper.py:881:1: D202 No blank lines allowed after function docstring
schwabot\core\strategy_mapper.py:895:31: ANN101 Missing type annotation for self in method
schwabot\core\strategy_mapper.py:896:1: D202 No blank lines allowed after function docstring
schwabot\core\strategy_mapper.py:914:33: ANN101 Missing type annotation for self in method
schwabot\core\strategy_mapper.py:915:1: D202 No blank lines allowed after function docstring
schwabot\core\strategy_mapper.py:935:30: ANN101 Missing type annotation for self in method
schwabot\core\strategy_mapper.py:936:1: D202 No blank lines allowed after function docstring
schwabot\core\strategy_mapper.py:940:44: ANN101 Missing type annotation for self in method
schwabot\core\strategy_mapper.py:941:1: D202 No blank lines allowed after function docstring
schwabot\core\strategy_mapper.py:1018:37: ANN101 Missing type annotation for self in method
schwabot\core\strategy_mapper.py:1019:1: D202 No blank lines allowed after function docstring
schwabot\core\strategy_mapper.py:1092:27: ANN201 Missing return type annotation for public function
schwabot\core\strategy_mapper.py:1093:1: D202 No blank lines allowed after function docstring
schwabot\core\strategy_mapper.py:1140:101: E501 line too long (111 > 100 characters)
schwabot\core\strategy_mapper.py:1144:101: E501 line too long (169 > 100 characters)
schwabot\core\strategy_mapper.py:1180:101: E501 line too long (102 > 100 characters)
schwabot\core\strategy_mapper.py:1218:101: E501 line too long (102 > 100 characters)
schwabot\core\strategy_mapper.py:1252:101: E501 line too long (133 > 100 characters)
schwabot\core\trade_executor.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\trade_executor.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\trade_executor.py:1:1: D400 First line should end with a period
schwabot\core\trade_executor.py:65:101: E501 line too long (120 > 100 characters)
schwabot\core\trade_executor.py:95:101: E501 line too long (157 > 100 characters)
schwabot\core\trade_executor.py:111:101: E501 line too long (118 > 100 characters)
schwabot\core\trade_executor.py:135:101: E501 line too long (108 > 100 characters)
schwabot\core\trade_executor.py:145:101: E501 line too long (148 > 100 characters)
schwabot\core\trade_executor.py:235:101: E501 line too long (170 > 100 characters)
schwabot\core\trade_executor.py:243:101: E501 line too long (135 > 100 characters)
schwabot\core\trade_executor.py:259:101: E501 line too long (161 > 100 characters)
schwabot\core\trade_executor.py:271:101: E501 line too long (103 > 100 characters)
schwabot\core\trade_executor.py:297:101: E501 line too long (161 > 100 characters)
schwabot\core\trade_executor.py:301:101: E501 line too long (189 > 100 characters)
schwabot\core\trade_executor.py:319:101: E501 line too long (141 > 100 characters)
schwabot\core\trade_executor.py:343:101: E501 line too long (117 > 100 characters)
schwabot\core\trade_executor.py:349:101: E501 line too long (118 > 100 characters)
schwabot\core\trading_engine_integration.py:1:1: D100 Missing docstring in public module
schwabot\core\trading_engine_integration.py:3:1: I202 Additional newline in a group of imports. 'import hashlib' is identified as Stdlib and 'import asyncio' is identified as Stdlib.
schwabot\core\trading_engine_integration.py:5:1: I202 Additional newline in a group of imports. 'import json' is identified as Stdlib and 'import hashlib' is identified as Stdlib.
schwabot\core\trading_engine_integration.py:7:1: I202 Additional newline in a group of imports. 'import logging' is identified as Stdlib and 'import json' is identified as Stdlib.
schwabot\core\trading_engine_integration.py:9:1: I202 Additional newline in a group of imports. 'import time' is identified as Stdlib and 'import logging' is identified as Stdlib.
schwabot\core\trading_engine_integration.py:11:1: I202 Additional newline in a group of imports. 'from dataclasses import dataclass, field' is identified as Stdlib and 'import time' is identified as Stdlib.
schwabot\core\trading_engine_integration.py:13:1: I202 Additional newline in a group of imports. 'from enum import Enum' is identified as Stdlib and 'from dataclasses import dataclass, field' is identified as Stdlib.
schwabot\core\trading_engine_integration.py:15:1: I202 Additional newline in a group of imports. 'from pathlib import Path' is identified as Stdlib and 'from enum import Enum' is identified as Stdlib.
schwabot\core\trading_engine_integration.py:17:1: I202 Additional newline in a group of imports. 'from typing import Any, Dict, List, Optional' is identified as Stdlib and 'from pathlib import Path' is identified as Stdlib.
schwabot\core\trading_engine_integration.py:25:1: I100 Import statements are in the wrong order. 'from core.clean_unified_math import UnifiedMathSystem' should be before 'from utils.price_bridge import PriceData, get_secure_price' and in a different group.
schwabot\core\trading_engine_integration.py:27:1: I202 Additional newline in a group of imports. 'from core.enhanced_tcell_system import EnhancedTCellSystem' is identified as Third Party and 'from core.clean_unified_math import UnifiedMathSystem' is identified as Third Party.
schwabot\core\trading_engine_integration.py:29:1: I202 Additional newline in a group of imports. 'from core.portfolio_tracker import PortfolioTracker' is identified as Third Party and 'from core.enhanced_tcell_system import EnhancedTCellSystem' is identified as Third Party.
schwabot\core\trading_engine_integration.py:31:1: I202 Additional newline in a group of imports. 'from core.risk_manager import RiskManager' is identified as Third Party and 'from core.portfolio_tracker import PortfolioTracker' is identified as Third Party.
schwabot\core\trading_engine_integration.py:33:1: I202 Additional newline in a group of imports. 'from core.strategy_logic import StrategyLogic' is identified as Third Party and 'from core.risk_manager import RiskManager' is identified as Third Party.
schwabot\core\trading_engine_integration.py:55:1: D101 Missing docstring in public class
schwabot\core\trading_engine_integration.py:64:1: D101 Missing docstring in public class
schwabot\core\trading_engine_integration.py:75:1: D101 Missing docstring in public class
schwabot\core\trading_engine_integration.py:83:1: D101 Missing docstring in public class
schwabot\core\trading_engine_integration.py:121:1: D105 Missing docstring in magic method
schwabot\core\trading_engine_integration.py:121:23: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:122:0: ANN204 Missing return type annotation for special method
schwabot\core\trading_engine_integration.py:127:31: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:129:101: E501 line too long (112 > 100 characters)
schwabot\core\trading_engine_integration.py:133:1: D102 Missing docstring in public method
schwabot\core\trading_engine_integration.py:133:17: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:156:1: D101 Missing docstring in public class
schwabot\core\trading_engine_integration.py:180:1: D105 Missing docstring in magic method
schwabot\core\trading_engine_integration.py:180:23: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:181:0: ANN204 Missing return type annotation for special method
schwabot\core\trading_engine_integration.py:186:34: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:193:1: D101 Missing docstring in public class
schwabot\core\trading_engine_integration.py:195:1: D107 Missing docstring in __init__
schwabot\core\trading_engine_integration.py:195:18: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:196:0: ANN204 Missing return type annotation for special method
schwabot\core\trading_engine_integration.py:250:34: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:251:0: ANN202 Missing return type annotation for protected function
schwabot\core\trading_engine_integration.py:300:36: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:301:0: ANN202 Missing return type annotation for protected function
schwabot\core\trading_engine_integration.py:304:26: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:304:32: ANN001 Missing type annotation for function argument 'name'
schwabot\core\trading_engine_integration.py:305:0: ANN204 Missing return type annotation for special method
schwabot\core\trading_engine_integration.py:312:36: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:312:42: ANN001 Missing type annotation for function argument 'symbol'
schwabot\core\trading_engine_integration.py:312:50: ANN001 Missing type annotation for function argument 'order_type'
schwabot\core\trading_engine_integration.py:312:62: ANN001 Missing type annotation for function argument 'side'
schwabot\core\trading_engine_integration.py:312:68: ANN001 Missing type annotation for function argument 'amount'
schwabot\core\trading_engine_integration.py:312:76: ANN001 Missing type annotation for function argument 'price'
schwabot\core\trading_engine_integration.py:313:0: ANN201 Missing return type annotation for public function
schwabot\core\trading_engine_integration.py:364:42: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:365:0: ANN202 Missing return type annotation for protected function
schwabot\core\trading_engine_integration.py:378:31: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:379:0: ANN202 Missing return type annotation for protected function
schwabot\core\trading_engine_integration.py:414:1: D102 Missing docstring in public method
schwabot\core\trading_engine_integration.py:414:30: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:488:9: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:519:38: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:549:9: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:580:9: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:611:1: D102 Missing docstring in public method
schwabot\core\trading_engine_integration.py:611:29: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:657:26: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:673:28: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:681:35: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:747:35: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:787:33: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:788:0: ANN202 Missing return type annotation for protected function
schwabot\core\trading_engine_integration.py:793:37: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:794:0: ANN202 Missing return type annotation for protected function
schwabot\core\trading_engine_integration.py:815:1: D102 Missing docstring in public method
schwabot\core\trading_engine_integration.py:815:36: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:827:1: D102 Missing docstring in public method
schwabot\core\trading_engine_integration.py:827:29: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:828:0: ANN201 Missing return type annotation for public function
schwabot\core\trading_engine_integration.py:879:1: D102 Missing docstring in public method
schwabot\core\trading_engine_integration.py:879:28: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:880:0: ANN201 Missing return type annotation for public function
schwabot\core\trading_engine_integration.py:889:40: ANN101 Missing type annotation for self in method
schwabot\core\trading_engine_integration.py:941:1: D103 Missing docstring in public function
schwabot\core\trading_engine_integration.py:942:0: ANN201 Missing return type annotation for public function
schwabot\core\trading_engine_integration.py:960:1: D103 Missing docstring in public function
schwabot\core\trading_engine_integration.py:961:0: ANN201 Missing return type annotation for public function
schwabot\core\trading_engine_integration.py:977:1: D103 Missing docstring in public function
schwabot\core\trading_engine_integration.py:978:0: ANN201 Missing return type annotation for public function
schwabot\core\trading_engine_integration.py:995:1: S101 Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
schwabot\core\trading_engine_integration.py:1014:1: S101 Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
schwabot\core\trading_engine_integration.py:1024:1: S101 Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
schwabot\core\trading_engine_integration.py:1050:1: S101 Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
schwabot\core\trading_execution_engine.py:283:54: E999 SyntaxError: unmatched ')'
schwabot\core\truth_lattice_math.py:203:2: E999 SyntaxError: unmatched '}'
schwabot\core\truth_matrix_engine.py:261:10: E999 SyntaxError: unmatched ')'
schwabot\core\type_defs.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\type_defs.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\type_defs.py:1:1: D400 First line should end with a period
schwabot\core\type_defs.py:89:101: E501 line too long (118 > 100 characters)
schwabot\core\unified_api_coordinator.py:5:1: D205 1 blank line required between summary line and description
schwabot\core\unified_api_coordinator.py:5:1: D400 First line should end with a period
schwabot\core\unified_api_coordinator.py:19:18: ANN101 Missing type annotation for self in method
schwabot\core\unified_api_coordinator.py:19:24: ANN001 Missing type annotation for function argument 'config'
schwabot\core\unified_api_coordinator.py:19:36: ANN204 Missing return type annotation for special method
schwabot\core\unified_api_coordinator.py:20:1: D202 No blank lines allowed after function docstring
schwabot\core\unified_api_coordinator.py:26:30: ANN101 Missing type annotation for self in method
schwabot\core\unified_api_coordinator.py:26:36: ANN001 Missing type annotation for function argument 'requests'
schwabot\core\unified_api_coordinator.py:26:45: ANN201 Missing return type annotation for public function
schwabot\core\unified_api_coordinator.py:27:1: D202 No blank lines allowed after function docstring
schwabot\core\unified_math_system.py:5:1: D205 1 blank line required between summary line and description
schwabot\core\unified_math_system.py:5:1: D400 First line should end with a period
schwabot\core\unified_trading_pipeline.py:1:1: D205 1 blank line required between summary line and description
schwabot\core\unified_trading_pipeline.py:1:1: D400 First line should end with a period
schwabot\core\unified_trading_pipeline.py:37:1: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:55:1: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:55:1: E402 module level import not at top of file
schwabot\core\unified_trading_pipeline.py:57:1: I202 Additional newline in a group of imports. 'import random' is identified as Stdlib and 'import logging' is identified as Stdlib.
schwabot\core\unified_trading_pipeline.py:57:1: E402 module level import not at top of file
schwabot\core\unified_trading_pipeline.py:59:1: I202 Additional newline in a group of imports. 'import time' is identified as Stdlib and 'import random' is identified as Stdlib.
schwabot\core\unified_trading_pipeline.py:59:1: E402 module level import not at top of file
schwabot\core\unified_trading_pipeline.py:61:1: I202 Additional newline in a group of imports. 'from dataclasses import dataclass, field' is identified as Stdlib and 'import time' is identified as Stdlib.
schwabot\core\unified_trading_pipeline.py:61:1: E402 module level import not at top of file
schwabot\core\unified_trading_pipeline.py:63:1: I202 Additional newline in a group of imports. 'from typing import Any, Dict, List, Optional' is identified as Stdlib and 'from dataclasses import dataclass, field' is identified as Stdlib.
schwabot\core\unified_trading_pipeline.py:63:1: E402 module level import not at top of file
schwabot\core\unified_trading_pipeline.py:67:1: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:89:5: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:105:1: E303 too many blank lines (5)
schwabot\core\unified_trading_pipeline.py:111:1: E303 too many blank lines (5)
schwabot\core\unified_trading_pipeline.py:113:1: E304 blank lines found after function decorator
schwabot\core\unified_trading_pipeline.py:115:1: D211 No blank lines allowed before class docstring
schwabot\core\unified_trading_pipeline.py:115:1: D204 1 blank line required after class docstring
schwabot\core\unified_trading_pipeline.py:119:5: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:149:1: E303 too many blank lines (5)
schwabot\core\unified_trading_pipeline.py:151:1: E304 blank lines found after function decorator
schwabot\core\unified_trading_pipeline.py:153:1: D211 No blank lines allowed before class docstring
schwabot\core\unified_trading_pipeline.py:153:1: D204 1 blank line required after class docstring
schwabot\core\unified_trading_pipeline.py:157:5: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:181:1: E303 too many blank lines (5)
schwabot\core\unified_trading_pipeline.py:183:1: D211 No blank lines allowed before class docstring
schwabot\core\unified_trading_pipeline.py:183:1: D204 1 blank line required after class docstring
schwabot\core\unified_trading_pipeline.py:183:1: D205 1 blank line required between summary line and description
schwabot\core\unified_trading_pipeline.py:205:5: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:205:18: ANN101 Missing type annotation for self in method
schwabot\core\unified_trading_pipeline.py:205:24: ANN001 Missing type annotation for function argument 'config'
schwabot\core\unified_trading_pipeline.py:206:0: ANN204 Missing return type annotation for special method
schwabot\core\unified_trading_pipeline.py:207:1: D201 No blank lines allowed before function docstring
schwabot\core\unified_trading_pipeline.py:207:1: D202 No blank lines allowed after function docstring
schwabot\core\unified_trading_pipeline.py:215:9: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:221:9: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:227:9: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:251:9: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:259:9: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:269:5: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:269:32: ANN101 Missing type annotation for self in method
schwabot\core\unified_trading_pipeline.py:271:1: D201 No blank lines allowed before function docstring
schwabot\core\unified_trading_pipeline.py:271:1: D202 No blank lines allowed after function docstring
schwabot\core\unified_trading_pipeline.py:283:9: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:291:9: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:299:9: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:307:9: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:315:9: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:323:9: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:331:9: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:339:5: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:341:9: ANN101 Missing type annotation for self in method
schwabot\core\unified_trading_pipeline.py:355:1: D201 No blank lines allowed before function docstring
schwabot\core\unified_trading_pipeline.py:355:1: D202 No blank lines allowed after function docstring
schwabot\core\unified_trading_pipeline.py:355:1: D205 1 blank line required between summary line and description
schwabot\core\unified_trading_pipeline.py:355:1: D412 No blank lines allowed between a section header and its content
schwabot\core\unified_trading_pipeline.py:405:13: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:413:13: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:419:13: F841 local variable 'ghost_state' is assigned to but never used
schwabot\core\unified_trading_pipeline.py:423:13: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:435:13: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:441:9: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:449:5: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:449:39: ANN101 Missing type annotation for self in method
schwabot\core\unified_trading_pipeline.py:451:1: D201 No blank lines allowed before function docstring
schwabot\core\unified_trading_pipeline.py:451:1: D202 No blank lines allowed after function docstring
schwabot\core\unified_trading_pipeline.py:459:5: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:459:38: ANN101 Missing type annotation for self in method
schwabot\core\unified_trading_pipeline.py:461:1: D201 No blank lines allowed before function docstring
schwabot\core\unified_trading_pipeline.py:461:1: D202 No blank lines allowed after function docstring
schwabot\core\unified_trading_pipeline.py:471:1: E303 too many blank lines (5)
schwabot\core\unified_trading_pipeline.py:472:0: ANN201 Missing return type annotation for public function
schwabot\core\unified_trading_pipeline.py:473:1: D201 No blank lines allowed before function docstring
schwabot\core\unified_trading_pipeline.py:473:1: D202 No blank lines allowed after function docstring
schwabot\core\unified_trading_pipeline.py:483:5: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:487:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\core\unified_trading_pipeline.py:489:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\core\unified_trading_pipeline.py:493:9: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:501:9: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:507:9: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:513:1: E303 too many blank lines (5)
schwabot\core\unified_trading_pipeline.py:519:5: E303 too many blank lines (3)
schwabot\core\unified_trading_pipeline.py:520:1: W391 blank line at end of file
schwabot\core\vector_fortification_matrix.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\vector_fortification_matrix.py:1:1: D400 First line should end with a period
schwabot\core\vector_fortification_matrix.py:24:101: E501 line too long (101 > 100 characters)
schwabot\core\vector_fortification_matrix.py:32:101: E501 line too long (107 > 100 characters)
schwabot\core\vector_fortification_matrix.py:43:101: E501 line too long (206 > 100 characters)
schwabot\core\vector_fortification_matrix.py:194:101: E501 line too long (403 > 100 characters)
schwabot\core\vector_fortification_matrix.py:211:101: E501 line too long (121 > 100 characters)
schwabot\core\vector_fortification_matrix.py:215:101: E501 line too long (136 > 100 characters)
schwabot\core\vecu_core.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\vecu_core.py:1:1: D400 First line should end with a period
schwabot\core\vecu_core.py:36:101: E501 line too long (213 > 100 characters)
schwabot\core\vecu_core.py:147:101: E501 line too long (123 > 100 characters)
schwabot\core\wallet_tracker.py:181:18: E999 SyntaxError: unmatched '}'
schwabot\core\warp_sync_core.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\warp_sync_core.py:1:1: D400 First line should end with a period
schwabot\core\warp_sync_core.py:24:101: E501 line too long (108 > 100 characters)
schwabot\core\warp_sync_core.py:29:101: E501 line too long (218 > 100 characters)
schwabot\core\warp_sync_core.py:30:101: E501 line too long (103 > 100 characters)
schwabot\core\warp_sync_core.py:31:101: E501 line too long (680 > 100 characters)
schwabot\core\warp_sync_core.py:40:101: E501 line too long (114 > 100 characters)
schwabot\core\warp_sync_core.py:44:101: E501 line too long (218 > 100 characters)
schwabot\core\warp_sync_core.py:75:101: E501 line too long (138 > 100 characters)
schwabot\core\warp_sync_core.py:82:101: E501 line too long (123 > 100 characters)
schwabot\core\warp_sync_core.py:94:101: E501 line too long (101 > 100 characters)
schwabot\core\warp_sync_core.py:109:101: E501 line too long (156 > 100 characters)
schwabot\core\warp_sync_core.py:125:101: E501 line too long (149 > 100 characters)
schwabot\core\warp_sync_core.py:131:101: E501 line too long (113 > 100 characters)
schwabot\core\warp_sync_core.py:138:101: E501 line too long (130 > 100 characters)
schwabot\core\warp_sync_core.py:147:101: E501 line too long (117 > 100 characters)
schwabot\core\warp_sync_core.py:155:101: E501 line too long (137 > 100 characters)
schwabot\core\warp_sync_core.py:175:101: E501 line too long (101 > 100 characters)
schwabot\core\warp_sync_core.py:182:101: E501 line too long (337 > 100 characters)
schwabot\core\warp_sync_core.py:242:101: E501 line too long (111 > 100 characters)
schwabot\core\warp_sync_core.py:246:101: E501 line too long (145 > 100 characters)
schwabot\core\warp_sync_core.py:257:101: E501 line too long (104 > 100 characters)
schwabot\core\warp_sync_core.py:258:101: E501 line too long (203 > 100 characters)
schwabot\core\warp_sync_core.py:297:101: E501 line too long (260 > 100 characters)
schwabot\core\warp_sync_core.py:299:101: E501 line too long (123 > 100 characters)
schwabot\core\warp_sync_core.py:315:101: E501 line too long (118 > 100 characters)
schwabot\core\warp_sync_core.py:316:101: E501 line too long (132 > 100 characters)
schwabot\core\zbe_core.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\zbe_core.py:1:1: D400 First line should end with a period
schwabot\core\zbe_core.py:37:101: E501 line too long (356 > 100 characters)
schwabot\core\zbe_core.py:94:101: E501 line too long (197 > 100 characters)
schwabot\core\zbe_core.py:126:101: E501 line too long (124 > 100 characters)
schwabot\core\zbe_core.py:171:101: E501 line too long (104 > 100 characters)
schwabot\core\zbe_core.py:227:101: E501 line too long (151 > 100 characters)
schwabot\core\zbe_core.py:324:101: E501 line too long (315 > 100 characters)
schwabot\core\zbe_core.py:329:101: E501 line too long (151 > 100 characters)
schwabot\core\zbe_core.py:372:101: E501 line too long (174 > 100 characters)
schwabot\core\zbe_core.py:375:101: E501 line too long (155 > 100 characters)
schwabot\core\zbe_core.py:378:101: E501 line too long (125 > 100 characters)
schwabot\core\zbe_core.py:381:101: E501 line too long (134 > 100 characters)
schwabot\core\zbe_core.py:384:101: E501 line too long (155 > 100 characters)
schwabot\core\zbe_core.py:387:101: E501 line too long (113 > 100 characters)
schwabot\core\zbe_core.py:395:101: E501 line too long (139 > 100 characters)
schwabot\core\zpe_core.py:1:1: D301 Use r""" if any backslashes in a docstring
schwabot\core\zpe_core.py:1:1: D400 First line should end with a period
schwabot\core\zpe_core.py:104:101: E501 line too long (119 > 100 characters)
schwabot\core\zpe_core.py:175:101: E501 line too long (103 > 100 characters)
schwabot\core\zpe_core.py:190:101: E501 line too long (124 > 100 characters)
schwabot\core\zpe_core.py:219:101: E501 line too long (139 > 100 characters)
schwabot\core\zpe_core.py:224:101: E501 line too long (168 > 100 characters)
schwabot\core\zpe_core.py:247:101: E501 line too long (251 > 100 characters)
schwabot\core\zpe_core.py:261:101: E501 line too long (172 > 100 characters)
schwabot\dual_unicore_handler.py:3:1: D400 First line should end with a period
schwabot\dual_unicore_handler.py:48:1: D400 First line should end with a period
schwabot\dual_unicore_handler.py:85:1: D400 First line should end with a period
schwabot\dual_unicore_handler.py:101:1: D205 1 blank line required between summary line and description
schwabot\dual_unicore_handler.py:101:1: D400 First line should end with a period
schwabot\dual_unicore_handler.py:113:1: D107 Missing docstring in __init__
schwabot\dual_unicore_handler.py:113:18: ANN101 Missing type annotation for self in method
schwabot\dual_unicore_handler.py:114:0: ANN204 Missing return type annotation for special method
schwabot\dual_unicore_handler.py:122:13: F601 dictionary key '' repeated with different values
schwabot\dual_unicore_handler.py:123:13: F601 dictionary key '' repeated with different values
schwabot\dual_unicore_handler.py:124:13: F601 dictionary key '' repeated with different values
schwabot\dual_unicore_handler.py:125:13: F601 dictionary key '' repeated with different values
schwabot\dual_unicore_handler.py:126:13: F601 dictionary key '' repeated with different values
schwabot\dual_unicore_handler.py:127:13: F601 dictionary key '' repeated with different values
schwabot\dual_unicore_handler.py:128:13: F601 dictionary key '' repeated with different values
schwabot\dual_unicore_handler.py:129:13: F601 dictionary key '' repeated with different values
schwabot\dual_unicore_handler.py:131:13: F601 dictionary key '' repeated with different values
schwabot\dual_unicore_handler.py:132:13: F601 dictionary key '' repeated with different values
schwabot\dual_unicore_handler.py:133:13: F601 dictionary key '' repeated with different values
schwabot\dual_unicore_handler.py:134:13: F601 dictionary key '' repeated with different values
schwabot\dual_unicore_handler.py:135:13: F601 dictionary key '' repeated with different values
schwabot\dual_unicore_handler.py:136:13: F601 dictionary key '' repeated with different values
schwabot\dual_unicore_handler.py:137:13: F601 dictionary key '' repeated with different values
schwabot\dual_unicore_handler.py:151:30: ANN101 Missing type annotation for self in method
schwabot\dual_unicore_handler.py:152:1: D202 No blank lines allowed after function docstring
schwabot\dual_unicore_handler.py:152:1: D205 1 blank line required between summary line and description
schwabot\dual_unicore_handler.py:152:1: D400 First line should end with a period
schwabot\dual_unicore_handler.py:152:1: D401 First line should be in imperative mood
schwabot\dual_unicore_handler.py:152:1: D412 No blank lines allowed between a section header and its content
schwabot\dual_unicore_handler.py:223:27: ANN101 Missing type annotation for self in method
schwabot\dual_unicore_handler.py:224:1: D202 No blank lines allowed after function docstring
schwabot\dual_unicore_handler.py:224:1: D205 1 blank line required between summary line and description
schwabot\dual_unicore_handler.py:224:1: D400 First line should end with a period
schwabot\dual_unicore_handler.py:242:30: ANN101 Missing type annotation for self in method
schwabot\dual_unicore_handler.py:243:1: D202 No blank lines allowed after function docstring
schwabot\dual_unicore_handler.py:247:23: ANN101 Missing type annotation for self in method
schwabot\dual_unicore_handler.py:248:1: D202 No blank lines allowed after function docstring
schwabot\dual_unicore_handler.py:256:38: ANN101 Missing type annotation for self in method
schwabot\dual_unicore_handler.py:257:1: D202 No blank lines allowed after function docstring
schwabot\dual_unicore_handler.py:263:21: ANN101 Missing type annotation for self in method
schwabot\dual_unicore_handler.py:264:1: D202 No blank lines allowed after function docstring
schwabot\dual_unicore_handler.py:272:25: ANN101 Missing type annotation for self in method
schwabot\dual_unicore_handler.py:273:1: D202 No blank lines allowed after function docstring
schwabot\enhanced_cli_test.py:1:1: D100 Missing docstring in public module
schwabot\gatekeeper\recursive_gate_stack.py:21:1: D101 Missing docstring in public class
schwabot\gatekeeper\recursive_gate_stack.py:39:9: ANN101 Missing type annotation for self in method
schwabot\gatekeeper\recursive_gate_stack.py:59:22: ANN101 Missing type annotation for self in method
schwabot\gatekeeper\recursive_gate_stack.py:70:33: ANN101 Missing type annotation for self in method
schwabot\gatekeeper\recursive_gate_stack.py:80:35: ANN101 Missing type annotation for self in method
schwabot\gatekeeper\recursive_gate_stack.py:110:25: ANN101 Missing type annotation for self in method
schwabot\gatekeeper\recursive_gate_stack.py:129:28: ANN101 Missing type annotation for self in method
schwabot\gatekeeper\recursive_gate_stack.py:141:29: ANN101 Missing type annotation for self in method
schwabot\gatekeeper\recursive_gate_stack.py:162:34: ANN101 Missing type annotation for self in method
schwabot\gatekeeper\recursive_gate_stack.py:171:25: ANN101 Missing type annotation for self in method
schwabot\gatekeeper\recursive_gate_stack.py:187:34: ANN101 Missing type annotation for self in method
schwabot\gatekeeper\recursive_gate_stack.py:202:36: ANN101 Missing type annotation for self in method
schwabot\gatekeeper\recursive_gate_stack.py:210:33: ANN101 Missing type annotation for self in method
schwabot\gatekeeper\recursive_gate_stack.py:231:28: ANN101 Missing type annotation for self in method
schwabot\gatekeeper\recursive_gate_stack.py:242:9: ANN101 Missing type annotation for self in method
schwabot\gatekeeper\recursive_gate_stack.py:278:32: ANN101 Missing type annotation for self in method
schwabot\gatekeeper\recursive_gate_stack.py:293:32: ANN101 Missing type annotation for self in method
schwabot\gui\__init__.py:1:1: D104 Missing docstring in public package
schwabot\gui\__init__.py:10:1: S404 Consider possible security implications associated with the subprocess module.
schwabot\gui\__init__.py:16:1: D101 Missing docstring in public class
schwabot\gui\__init__.py:17:1: D107 Missing docstring in __init__
schwabot\gui\__init__.py:17:18: ANN101 Missing type annotation for self in method
schwabot\gui\__init__.py:50:16: ANN101 Missing type annotation for self in method
schwabot\gui\__init__.py:52:1: S603 subprocess call - check for execution of untrusted input.
schwabot\gui\__init__.py:56:21: ANN101 Missing type annotation for self in method
schwabot\gui\__init__.py:59:24: ANN101 Missing type annotation for self in method
schwabot\gui\__init__.py:62:24: ANN101 Missing type annotation for self in method
schwabot\gui\__init__.py:65:17: ANN101 Missing type annotation for self in method
schwabot\gui\__init__.py:69:1: D103 Missing docstring in public function
schwabot\instruction_listener.py:1:1: D100 Missing docstring in public module
schwabot\integration_hub.py:1:1: D100 Missing docstring in public module
schwabot\integration_hub.py:20:1: D400 First line should end with a period
schwabot\integration_hub.py:29:9: ANN101 Missing type annotation for self in method
schwabot\integration_hub.py:33:6: ANN204 Missing return type annotation for special method
schwabot\integration_hub.py:34:1: D202 No blank lines allowed after function docstring
schwabot\integration_hub.py:34:1: D205 1 blank line required between summary line and description
schwabot\integration_hub.py:34:1: D412 No blank lines allowed between a section header and its content
schwabot\integration_hub.py:112:34: ANN101 Missing type annotation for self in method
schwabot\integration_hub.py:112:39: ANN201 Missing return type annotation for public function
schwabot\integration_hub.py:113:1: D202 No blank lines allowed after function docstring
schwabot\integration_hub.py:163:35: ANN101 Missing type annotation for self in method
schwabot\integration_hub.py:164:1: D202 No blank lines allowed after function docstring
schwabot\integration_hub.py:164:1: D205 1 blank line required between summary line and description
schwabot\integration_hub.py:164:1: D412 No blank lines allowed between a section header and its content
schwabot\integration_hub.py:210:43: ANN101 Missing type annotation for self in method
schwabot\integration_hub.py:211:1: D202 No blank lines allowed after function docstring
schwabot\integration_hub.py:211:1: D205 1 blank line required between summary line and description
schwabot\integration_hub.py:211:1: D412 No blank lines allowed between a section header and its content
schwabot\integration_hub.py:255:40: ANN101 Missing type annotation for self in method
schwabot\integration_hub.py:255:78: ANN201 Missing return type annotation for public function
schwabot\integration_hub.py:256:1: D202 No blank lines allowed after function docstring
schwabot\integration_hub.py:256:1: D205 1 blank line required between summary line and description
schwabot\integration_hub.py:256:1: D412 No blank lines allowed between a section header and its content
schwabot\integration_hub.py:317:27: ANN101 Missing type annotation for self in method
schwabot\integration_hub.py:318:1: D202 No blank lines allowed after function docstring
schwabot\integration_hub.py:318:1: D205 1 blank line required between summary line and description
schwabot\integration_hub.py:318:1: D412 No blank lines allowed between a section header and its content
schwabot\integration_hub.py:363:24: ANN101 Missing type annotation for self in method
schwabot\integration_hub.py:363:29: ANN201 Missing return type annotation for public function
schwabot\integration_hub.py:364:1: D202 No blank lines allowed after function docstring
schwabot\integration_hub.py:364:1: D400 First line should end with a period
schwabot\integration_hub.py:407:2: ANN201 Missing return type annotation for public function
schwabot\integration_hub.py:408:1: D202 No blank lines allowed after function docstring
schwabot\integration_hub.py:408:1: D205 1 blank line required between summary line and description
schwabot\integration_hub.py:408:1: D412 No blank lines allowed between a section header and its content
schwabot\lantern_core\__init__.py:21:1: I202 Additional newline in a group of imports. 'from .entropy_generator import EntropyGenerator, FractalBlock' is identified as Application Relative and 'from .enhanced_main_loop import EnhancedLanternMainLoop' is identified as Application Relative.
schwabot\lantern_core\__init__.py:24:1: I202 Additional newline in a group of imports. 'from .hash_memory import HashMemoryDatabase, SemanticCorrelation' is identified as Application Relative and 'from .entropy_generator import EntropyGenerator, FractalBlock' is identified as Application Relative.
schwabot\lantern_core\__init__.py:27:1: I202 Additional newline in a group of imports. 'from .lantern_eye import HashBlock, LanternEye, SemanticInterpretation' is identified as Application Relative and 'from .hash_memory import HashMemoryDatabase, SemanticCorrelation' is identified as Application Relative.
schwabot\lantern_core\__init__.py:28:1: I101 Imported names are in the wrong order. Should be ConnectivityMatrix, LegacyMathVector, LegacyMathematicalConnectivity
schwabot\lantern_core\__init__.py:76:1: D400 First line should end with a period
schwabot\lantern_core\channel_relay_navigator.py:61:23: ANN101 Missing type annotation for self in method
schwabot\lantern_core\channel_relay_navigator.py:61:28: ANN204 Missing return type annotation for special method
schwabot\lantern_core\channel_relay_navigator.py:85:23: ANN101 Missing type annotation for self in method
schwabot\lantern_core\channel_relay_navigator.py:85:28: ANN204 Missing return type annotation for special method
schwabot\lantern_core\channel_relay_navigator.py:90:20: ANN101 Missing type annotation for self in method
schwabot\lantern_core\channel_relay_navigator.py:94:18: ANN101 Missing type annotation for self in method
schwabot\lantern_core\channel_relay_navigator.py:108:9: ANN101 Missing type annotation for self in method
schwabot\lantern_core\channel_relay_navigator.py:112:6: ANN204 Missing return type annotation for special method
schwabot\lantern_core\channel_relay_navigator.py:161:9: ANN101 Missing type annotation for self in method
schwabot\lantern_core\channel_relay_navigator.py:209:34: ANN101 Missing type annotation for self in method
schwabot\lantern_core\channel_relay_navigator.py:241:42: ANN101 Missing type annotation for self in method
schwabot\lantern_core\channel_relay_navigator.py:284:9: ANN101 Missing type annotation for self in method
schwabot\lantern_core\channel_relay_navigator.py:297:36: ANN101 Missing type annotation for self in method
schwabot\lantern_core\channel_relay_navigator.py:308:9: ANN101 Missing type annotation for self in method
schwabot\lantern_core\channel_relay_navigator.py:322:40: ANN101 Missing type annotation for self in method
schwabot\lantern_core\channel_relay_navigator.py:359:40: ANN101 Missing type annotation for self in method
schwabot\lantern_core\channel_relay_navigator.py:391:38: ANN101 Missing type annotation for self in method
schwabot\lantern_core\channel_relay_navigator.py:412:36: ANN101 Missing type annotation for self in method
schwabot\lantern_core\channel_relay_navigator.py:425:32: ANN101 Missing type annotation for self in method
schwabot\lantern_core\channel_relay_navigator.py:456:30: ANN101 Missing type annotation for self in method
schwabot\lantern_core\channel_relay_navigator.py:490:31: ANN101 Missing type annotation for self in method
schwabot\lantern_core\channel_relay_navigator.py:529:38: ANN101 Missing type annotation for self in method
schwabot\lantern_core\channel_relay_navigator.py:631:5: F811 redefinition of unused 'asyncio' from line 8
schwabot\lantern_core\enhanced_main_loop.py:34:9: ANN101 Missing type annotation for self in method
schwabot\lantern_core\enhanced_main_loop.py:81:9: ANN101 Missing type annotation for self in method
schwabot\lantern_core\enhanced_main_loop.py:117:9: ANN101 Missing type annotation for self in method
schwabot\lantern_core\enhanced_main_loop.py:165:9: ANN101 Missing type annotation for self in method
schwabot\lantern_core\enhanced_main_loop.py:224:46: ANN101 Missing type annotation for self in method
schwabot\lantern_core\enhanced_main_loop.py:263:46: ANN101 Missing type annotation for self in method
schwabot\lantern_core\enhanced_main_loop.py:278:44: ANN101 Missing type annotation for self in method
schwabot\lantern_core\enhanced_main_loop.py:319:45: ANN101 Missing type annotation for self in method
schwabot\lantern_core\enhanced_main_loop.py:329:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\lantern_core\enhanced_main_loop.py:330:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\lantern_core\enhanced_main_loop.py:331:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\lantern_core\enhanced_main_loop.py:337:42: ANN101 Missing type annotation for self in method
schwabot\lantern_core\enhanced_main_loop.py:360:37: ANN101 Missing type annotation for self in method
schwabot\lantern_core\enhanced_main_loop.py:373:44: ANN101 Missing type annotation for self in method
schwabot\lantern_core\enhanced_main_loop.py:425:49: ANN101 Missing type annotation for self in method
schwabot\lantern_core\entropy_generator.py:1:1: D205 1 blank line required between summary line and description
schwabot\lantern_core\entropy_generator.py:1:1: D400 First line should end with a period
schwabot\lantern_core\entropy_generator.py:26:1: D400 First line should end with a period
schwabot\lantern_core\entropy_generator.py:40:17: ANN101 Missing type annotation for self in method
schwabot\lantern_core\entropy_generator.py:41:1: D400 First line should end with a period
schwabot\lantern_core\entropy_generator.py:60:1: D400 First line should end with a period
schwabot\lantern_core\entropy_generator.py:67:1: D107 Missing docstring in __init__
schwabot\lantern_core\entropy_generator.py:67:18: ANN101 Missing type annotation for self in method
schwabot\lantern_core\entropy_generator.py:67:76: ANN204 Missing return type annotation for special method
schwabot\lantern_core\entropy_generator.py:80:31: ANN101 Missing type annotation for self in method
schwabot\lantern_core\entropy_generator.py:81:1: D400 First line should end with a period
schwabot\lantern_core\entropy_generator.py:92:36: ANN101 Missing type annotation for self in method
schwabot\lantern_core\entropy_generator.py:93:1: D400 First line should end with a period
schwabot\lantern_core\entropy_generator.py:121:32: ANN101 Missing type annotation for self in method
schwabot\lantern_core\entropy_generator.py:122:1: D400 First line should end with a period
schwabot\lantern_core\entropy_generator.py:129:17: B007 Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.
schwabot\lantern_core\entropy_generator.py:154:41: ANN101 Missing type annotation for self in method
schwabot\lantern_core\entropy_generator.py:155:1: D400 First line should end with a period
schwabot\lantern_core\entropy_generator.py:183:40: ANN101 Missing type annotation for self in method
schwabot\lantern_core\entropy_generator.py:184:1: D400 First line should end with a period
schwabot\lantern_core\entropy_generator.py:205:34: ANN101 Missing type annotation for self in method
schwabot\lantern_core\entropy_generator.py:206:1: D400 First line should end with a period
schwabot\lantern_core\entropy_generator.py:226:9: ANN101 Missing type annotation for self in method
schwabot\lantern_core\entropy_generator.py:228:1: D400 First line should end with a period
schwabot\lantern_core\entropy_generator.py:241:38: ANN101 Missing type annotation for self in method
schwabot\lantern_core\entropy_generator.py:242:1: D400 First line should end with a period
schwabot\lantern_core\entropy_generator.py:265:9: ANN101 Missing type annotation for self in method
schwabot\lantern_core\entropy_generator.py:267:1: D400 First line should end with a period
schwabot\lantern_core\entropy_generator.py:332:32: ANN101 Missing type annotation for self in method
schwabot\lantern_core\entropy_generator.py:333:1: D400 First line should end with a period
schwabot\lantern_core\entropy_generator.py:361:35: ANN101 Missing type annotation for self in method
schwabot\lantern_core\entropy_generator.py:362:1: D400 First line should end with a period
schwabot\lantern_core\hash_memory.py:1:1: D205 1 blank line required between summary line and description
schwabot\lantern_core\hash_memory.py:19:1: I101 Imported names are in the wrong order. Should be Any, Dict, List, Optional, TYPE_CHECKING
schwabot\lantern_core\hash_memory.py:26:1: I202 Additional newline in a group of imports. 'from .semantic_interpreter import LanguagePattern, SemanticCategory' is identified as Application Relative and 'from .lantern_eye import HashBlock' is identified as Application Relative.
schwabot\lantern_core\hash_memory.py:56:19: ANN102 Missing type annotation for cls in classmethod
schwabot\lantern_core\hash_memory.py:528:9: B036 Don't except `BaseException` unless you plan to re-raise it.
schwabot\lantern_core\lantern_core.py:233:26: ANN101 Missing type annotation for self in method
schwabot\lantern_core\lantern_core.py:237:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\lantern_core\lantern_core.py:239:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\lantern_core\lantern_core.py:241:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\lantern_core\lantern_core.py:243:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\lantern_core\lantern_core.py:245:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\lantern_core\lantern_core.py:247:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\lantern_core\lantern_core.py:444:38: ANN401 Dynamically typed expressions (typing.Any) are disallowed
schwabot\lantern_core\lantern_eye.py:1:1: D205 1 blank line required between summary line and description
schwabot\lantern_core\lantern_eye.py:1:1: D400 First line should end with a period
schwabot\lantern_core\lantern_eye.py:93:1: D401 First line should be in imperative mood
schwabot\lantern_core\lantern_eye.py:277:1: D401 First line should be in imperative mood
schwabot\lantern_core\lantern_eye.py:307:1: D401 First line should be in imperative mood
schwabot\lantern_core\legacy_math_connectivity.py:27:29: F821 undefined name 'LegacyMathVector'
schwabot\lantern_core\legacy_math_connectivity.py:52:19: F821 undefined name 'ConnectivityMatrix'
schwabot\lantern_core\legacy_math_connectivity.py:53:10: F821 undefined name 'ConnectivityMatrix'
schwabot\lantern_core\legacy_math_connectivity.py:104:24: F821 undefined name 'LegacyMathematicalConnectivity'
schwabot\lantern_core\legacy_math_connectivity.py:129:15: F821 undefined name 'LegacyMathematicalConnectivity'
schwabot\lantern_core\legacy_math_connectivity.py:178:15: F821 undefined name 'LegacyMathematicalConnectivity'
schwabot\lantern_core\legacy_math_connectivity.py:201:15: F821 undefined name 'LegacyMathematicalConnectivity'
schwabot\lantern_core\legacy_math_connectivity.py:222:15: F821 undefined name 'LegacyMathematicalConnectivity'
schwabot\lantern_core\legacy_math_connectivity.py:252:15: F821 undefined name 'LegacyMathematicalConnectivity'
schwabot\lantern_core\legacy_math_connectivity.py:270:15: F821 undefined name 'LegacyMathematicalConnectivity'
schwabot\lantern_core\legacy_math_connectivity.py:285:15: F821 undefined name 'LegacyMathematicalConnectivity'
schwabot\lantern_core\legacy_math_connectivity.py:293:15: F821 undefined name 'LegacyMathematicalConnectivity'
schwabot\lantern_core\legacy_math_connectivity.py:307:15: F821 undefined name 'LegacyMathematicalConnectivity'
schwabot\lantern_core\legacy_math_connectivity.py:319:41: F821 undefined name 'LegacyMathematicalConnectivity'
schwabot\lantern_core\legacy_math_connectivity.py:345:15: F821 undefined name 'LegacyMathematicalConnectivity'
schwabot\lantern_core\legacy_math_connectivity.py:347:1: D401 First line should be in imperative mood
schwabot\lantern_core\legacy_math_connectivity.py:380:36: F821 undefined name 'LegacyMathematicalConnectivity'
schwabot\lantern_core\legacy_math_connectivity.py:413:5: F821 undefined name 'safe_print'
schwabot\lantern_core\legacy_math_connectivity.py:426:5: F821 undefined name 'safe_print'
schwabot\lantern_core\legacy_math_connectivity.py:427:5: F821 undefined name 'safe_print'
schwabot\lantern_core\legacy_math_connectivity.py:434:9: F821 undefined name 'safe_print'
schwabot\lantern_core\legacy_math_connectivity.py:440:5: F821 undefined name 'safe_print'
schwabot\lantern_core\legacy_math_connectivity.py:441:5: F821 undefined name 'safe_print'
schwabot\lantern_core\legacy_math_connectivity.py:445:5: F821 undefined name 'safe_print'
schwabot\lantern_core\legacy_math_connectivity.py:446:5: F821 undefined name 'safe_print'
schwabot\lantern_core\legacy_math_connectivity.py:450:5: F821 undefined name 'safe_print'
schwabot\lantern_core\legacy_math_connectivity.py:451:5: F821 undefined name 'safe_print'
schwabot\lantern_core\legacy_math_connectivity.py:453:5: F821 undefined name 'safe_print'
schwabot\lantern_core\main_loop.py:353:17: E999 IndentationError: unexpected indent
schwabot\lantern_core\nexus_thought_core.py:35:24: F821 undefined name 'NexusThoughtCore'
schwabot\lantern_core\nexus_thought_core.py:62:38: F821 undefined name 'NexusThoughtCore'
schwabot\lantern_core\nexus_thought_core.py:75:42: F821 undefined name 'NexusThoughtCore'
schwabot\lantern_core\nexus_thought_core.py:94:15: F821 undefined name 'NexusThoughtCore'
schwabot\lantern_core\nexus_thought_core.py:108:15: F821 undefined name 'NexusThoughtCore'
schwabot\lantern_core\nexus_thought_core.py:159:15: F821 undefined name 'NexusThoughtCore'
schwabot\lantern_core\nexus_thought_core.py:208:15: F821 undefined name 'NexusThoughtCore'
schwabot\lantern_core\nexus_thought_core.py:230:15: F821 undefined name 'NexusThoughtCore'
schwabot\lantern_core\nexus_thought_core.py:255:43: F821 undefined name 'NexusThoughtCore'
schwabot\lantern_core\nexus_thought_core.py:266:38: F821 undefined name 'NexusThoughtCore'
schwabot\lantern_core\nexus_thought_core_backup.py:36:24: F821 undefined name 'NexusThoughtCore'
schwabot\lantern_core\nexus_thought_core_backup.py:63:38: F821 undefined name 'NexusThoughtCore'
schwabot\lantern_core\nexus_thought_core_backup.py:76:42: F821 undefined name 'NexusThoughtCore'
schwabot\lantern_core\nexus_thought_core_backup.py:95:15: F821 undefined name 'NexusThoughtCore'
schwabot\lantern_core\nexus_thought_core_backup.py:110:15: F821 undefined name 'NexusThoughtCore'
schwabot\lantern_core\nexus_thought_core_backup.py:161:15: F821 undefined name 'NexusThoughtCore'
schwabot\lantern_core\nexus_thought_core_backup.py:212:15: F821 undefined name 'NexusThoughtCore'
schwabot\lantern_core\nexus_thought_core_backup.py:235:15: F821 undefined name 'NexusThoughtCore'
schwabot\lantern_core\nexus_thought_core_backup.py:260:43: F821 undefined name 'NexusThoughtCore'
schwabot\lantern_core\nexus_thought_core_backup.py:273:38: F821 undefined name 'NexusThoughtCore'
schwabot\lantern_core\semantic_interpreter.py:1:1: D205 1 blank line required between summary line and description
schwabot\lantern_core\semantic_interpreter.py:1:1: D400 First line should end with a period
schwabot\lantern_core\semantic_interpreter.py:25:1: D400 First line should end with a period
schwabot\lantern_core\semantic_interpreter.py:41:1: D400 First line should end with a period
schwabot\lantern_core\semantic_interpreter.py:55:17: ANN101 Missing type annotation for self in method
schwabot\lantern_core\semantic_interpreter.py:56:1: D400 First line should end with a period
schwabot\lantern_core\semantic_interpreter.py:73:1: D400 First line should end with a period
schwabot\lantern_core\semantic_interpreter.py:80:1: D107 Missing docstring in __init__
schwabot\lantern_core\semantic_interpreter.py:80:18: ANN101 Missing type annotation for self in method
schwabot\lantern_core\semantic_interpreter.py:81:0: ANN204 Missing return type annotation for special method
schwabot\lantern_core\semantic_interpreter.py:91:39: ANN101 Missing type annotation for self in method
schwabot\lantern_core\semantic_interpreter.py:92:1: D400 First line should end with a period
schwabot\lantern_core\semantic_interpreter.py:138:32: ANN101 Missing type annotation for self in method
schwabot\lantern_core\semantic_interpreter.py:139:1: D400 First line should end with a period
schwabot\lantern_core\semantic_interpreter.py:213:39: ANN101 Missing type annotation for self in method
schwabot\lantern_core\semantic_interpreter.py:214:1: D400 First line should end with a period
schwabot\lantern_core\semantic_interpreter.py:254:42: ANN101 Missing type annotation for self in method
schwabot\lantern_core\semantic_interpreter.py:255:1: D400 First line should end with a period
schwabot\lantern_core\semantic_interpreter.py:298:34: ANN101 Missing type annotation for self in method
schwabot\lantern_core\semantic_interpreter.py:299:1: D400 First line should end with a period
schwabot\lantern_core\semantic_interpreter.py:303:27: B007 Loop control variable 'template' not used within the loop body. If this is intended, start the name with an underscore.
schwabot\lantern_core\semantic_interpreter.py:315:9: ANN101 Missing type annotation for self in method
schwabot\lantern_core\semantic_interpreter.py:364:9: ANN101 Missing type annotation for self in method
schwabot\lantern_core\semantic_interpreter.py:369:1: D400 First line should end with a period
schwabot\lantern_core\semantic_interpreter.py:416:9: ANN101 Missing type annotation for self in method
schwabot\lantern_core\semantic_interpreter.py:418:1: D400 First line should end with a period
schwabot\lantern_core\semantic_interpreter.py:465:9: ANN101 Missing type annotation for self in method
schwabot\lantern_core\semantic_interpreter.py:467:1: D400 First line should end with a period
schwabot\lantern_core\semantic_interpreter.py:489:9: ANN101 Missing type annotation for self in method
schwabot\lantern_core\semantic_interpreter.py:491:1: D400 First line should end with a period
schwabot\lantern_core\semantic_interpreter.py:520:39: ANN101 Missing type annotation for self in method
schwabot\lantern_core\semantic_interpreter.py:521:1: D400 First line should end with a period
schwabot\lantern_core\semantic_interpreter.py:535:9: ANN101 Missing type annotation for self in method
schwabot\lantern_core\semantic_interpreter.py:540:1: D400 First line should end with a period
schwabot\lantern_core\semantic_interpreter.py:600:39: ANN101 Missing type annotation for self in method
schwabot\lantern_core\semantic_interpreter.py:601:1: D400 First line should end with a period
schwabot\lantern_core\truth_scorer.py:30:17: ANN101 Missing type annotation for self in method
schwabot\lantern_core\truth_scorer.py:51:18: ANN101 Missing type annotation for self in method
schwabot\lantern_core\truth_scorer.py:68:24: ANN101 Missing type annotation for self in method
schwabot\lantern_core\truth_scorer.py:86:9: ANN101 Missing type annotation for self in method
schwabot\lantern_core\truth_scorer.py:135:40: ANN101 Missing type annotation for self in method
schwabot\lantern_core\truth_scorer.py:159:33: ANN101 Missing type annotation for self in method
schwabot\lantern_core\truth_scorer.py:182:41: ANN101 Missing type annotation for self in method
schwabot\lantern_core\truth_scorer.py:215:40: ANN101 Missing type annotation for self in method
schwabot\lantern_core\truth_scorer.py:246:9: ANN101 Missing type annotation for self in method
schwabot\lantern_core\truth_scorer.py:282:26: ANN101 Missing type annotation for self in method
schwabot\lantern_core\truth_scorer.py:298:39: ANN101 Missing type annotation for self in method
schwabot\lantern_core\truth_scorer.py:317:9: ANN101 Missing type annotation for self in method
schwabot\lantern_core\truth_scorer.py:342:9: ANN101 Missing type annotation for self in method
schwabot\lantern_core\truth_scorer.py:362:9: ANN101 Missing type annotation for self in method
schwabot\lantern_core\truth_scorer.py:379:37: ANN101 Missing type annotation for self in method
schwabot\lantern_core\truth_scorer.py:389:35: ANN101 Missing type annotation for self in method
schwabot\lantern_core\truth_scorer.py:405:13: B007 Loop control variable 'category' not used within the loop body. If this is intended, start the name with an underscore.
schwabot\lantern_core\truth_scorer.py:418:31: ANN101 Missing type annotation for self in method
schwabot\lantern_core\truth_scorer.py:422:31: ANN101 Missing type annotation for self in method
schwabot\lantern_core\truth_scorer.py:461:101: E501 line too long (104 > 100 characters)
schwabot\launch.py:1:1: D100 Missing docstring in public module
schwabot\launch.py:35:1: I202 Additional newline in a group of imports. 'from importlib import import_module' is identified as Stdlib and 'import sys' is identified as Stdlib.
schwabot\launch.py:37:1: I202 Additional newline in a group of imports. 'from types import ModuleType' is identified as Stdlib and 'from importlib import import_module' is identified as Stdlib.
schwabot\launch.py:39:1: I202 Additional newline in a group of imports. 'from typing import Callable' is identified as Stdlib and 'from types import ModuleType' is identified as Stdlib.
schwabot\launch.py:50:1: D202 No blank lines allowed after function docstring
schwabot\launch.py:50:1: D400 First line should end with a period
schwabot\launch.py:72:23: ANN001 Missing type annotation for function argument 'exc'
schwabot\launch.py:98:1: D202 No blank lines allowed after function docstring
schwabot\launch.py:98:1: D205 1 blank line required between summary line and description
schwabot\main.py:3:1: D400 First line should end with a period
schwabot\main.py:34:1: I202 Additional newline in a group of imports. 'import asyncio' is identified as Stdlib and 'import argparse' is identified as Stdlib.
schwabot\main.py:36:1: I202 Additional newline in a group of imports. 'import logging' is identified as Stdlib and 'import asyncio' is identified as Stdlib.
schwabot\main.py:38:1: I202 Additional newline in a group of imports. 'import sys' is identified as Stdlib and 'import logging' is identified as Stdlib.
schwabot\main.py:40:1: I202 Additional newline in a group of imports. 'from datetime import datetime' is identified as Stdlib and 'import sys' is identified as Stdlib.
schwabot\main.py:42:1: I202 Additional newline in a group of imports. 'from typing import Any, Dict, List' is identified as Stdlib and 'from datetime import datetime' is identified as Stdlib.
schwabot\main.py:82:1: D202 No blank lines allowed after function docstring
schwabot\main.py:82:1: D401 First line should be in imperative mood; try rephrasing
schwabot\main.py:95:1: D202 No blank lines allowed after function docstring
schwabot\main.py:144:1: D202 No blank lines allowed after function docstring
schwabot\main.py:144:1: D205 1 blank line required between summary line and description
schwabot\main.py:144:1: D412 No blank lines allowed between a section header and its content
schwabot\main.py:172:101: E501 line too long (104 > 100 characters)
schwabot\main.py:245:1: D202 No blank lines allowed after function docstring
schwabot\main.py:245:1: D205 1 blank line required between summary line and description
schwabot\main.py:245:1: D412 No blank lines allowed between a section header and its content
schwabot\main.py:297:1: D202 No blank lines allowed after function docstring
schwabot\main.py:297:1: D205 1 blank line required between summary line and description
schwabot\main.py:297:1: D412 No blank lines allowed between a section header and its content
schwabot\main.py:341:1: D202 No blank lines allowed after function docstring
schwabot\main.py:341:1: D205 1 blank line required between summary line and description
schwabot\main.py:341:1: D412 No blank lines allowed between a section header and its content
schwabot\main.py:401:1: D202 No blank lines allowed after function docstring
schwabot\main.py:401:1: D401 First line should be in imperative mood; try rephrasing
schwabot\mathcore\__init__.py:1:1: D104 Missing docstring in public package
schwabot\mathcore\entropy_analysis.py:1:1: D100 Missing docstring in public module
schwabot\mathcore\entropy_analysis.py:2:1: I201 Missing newline between import groups. 'from scipy.stats import entropy' is identified as Third Party and 'import numpy' is identified as Third Party.
schwabot\mathcore\ghost_filter.py:1:1: D100 Missing docstring in public module
schwabot\mathcore\hash_memory.py:1:1: D100 Missing docstring in public module
schwabot\mathcore\hashing.py:1:1: D100 Missing docstring in public module
schwabot\mathcore\hashing.py:5:1: D401 First line should be in imperative mood
schwabot\mathcore\hashing.py:11:1: D401 First line should be in imperative mood
schwabot\mathcore\profit_vector.py:1:1: D100 Missing docstring in public module
schwabot\mathcore\recursive_engine.py:1:1: D100 Missing docstring in public module
schwabot\mathcore\tick_cycle.py:1:1: D100 Missing docstring in public module
schwabot\mathcore\vault_math.py:1:1: D100 Missing docstring in public module
schwabot\mathlib\line_render_engine.py:1:1: D100 Missing docstring in public module
schwabot\mathlib\line_render_engine.py:6:1: I201 Missing newline between import groups. 'from utils.safe_print import safe_print' is identified as Third Party and 'import numpy' is identified as Third Party.
schwabot\mathlib\line_render_engine.py:8:1: I100 Import statements are in the wrong order. 'from core.unified_math_system import unified_math' should be before 'from utils.safe_print import safe_print' and in a different group.
schwabot\mathlib\line_render_engine.py:18:1: D101 Missing docstring in public class
schwabot\mathlib\line_render_engine.py:19:1: D107 Missing docstring in __init__
schwabot\mathlib\line_render_engine.py:19:18: ANN101 Missing type annotation for self in method
schwabot\mathlib\line_render_engine.py:19:24: ANN001 Missing type annotation for function argument 'max_points'
schwabot\mathlib\line_render_engine.py:19:40: ANN204 Missing return type annotation for special method
schwabot\mathlib\line_render_engine.py:23:9: ANN101 Missing type annotation for self in method
schwabot\mathlib\line_render_engine.py:25:1: D401 First line should be in imperative mood
schwabot\mathlib\line_render_engine.py:55:9: ANN101 Missing type annotation for self in method
schwabot\mathlib\line_render_engine.py:57:1: D401 First line should be in imperative mood
schwabot\mathlib\line_render_engine.py:82:37: ANN101 Missing type annotation for self in method
schwabot\mathlib\line_render_engine.py:83:1: D401 First line should be in imperative mood
schwabot\mathlib\line_render_engine.py:116:1: D401 First line should be in imperative mood; try rephrasing
schwabot\mathlib\line_render_engine.py:123:1: D401 First line should be in imperative mood; try rephrasing
schwabot\mathlib\line_render_engine.py:127:11: ANN201 Missing return type annotation for public function
schwabot\mathlib\line_render_engine.py:128:1: D401 First line should be in imperative mood; try rephrasing
schwabot\mathlib\matrix_fault_resolver.py:1:1: D100 Missing docstring in public module
schwabot\mathlib\matrix_fault_resolver.py:6:1: I201 Missing newline between import groups. 'from utils.safe_print import safe_print' is identified as Third Party and 'import numpy' is identified as Third Party.
schwabot\mathlib\matrix_fault_resolver.py:8:1: I100 Import statements are in the wrong order. 'from core.unified_math_system import unified_math' should be before 'from utils.safe_print import safe_print' and in a different group.
schwabot\mathlib\matrix_fault_resolver.py:17:1: D101 Missing docstring in public class
schwabot\mathlib\matrix_fault_resolver.py:18:1: D107 Missing docstring in __init__
schwabot\mathlib\matrix_fault_resolver.py:18:18: ANN101 Missing type annotation for self in method
schwabot\mathlib\matrix_fault_resolver.py:18:24: ANN001 Missing type annotation for function argument 'max_condition_number'
schwabot\mathlib\matrix_fault_resolver.py:18:51: ANN001 Missing type annotation for function argument 'epsilon'
schwabot\mathlib\matrix_fault_resolver.py:18:65: ANN204 Missing return type annotation for special method
schwabot\mathlib\matrix_fault_resolver.py:22:31: ANN101 Missing type annotation for self in method
schwabot\mathlib\matrix_fault_resolver.py:23:1: D401 First line should be in imperative mood
schwabot\mathlib\matrix_fault_resolver.py:70:9: ANN101 Missing type annotation for self in method
schwabot\mathlib\matrix_fault_resolver.py:72:1: D401 First line should be in imperative mood
schwabot\mathlib\matrix_fault_resolver.py:83:28: ANN101 Missing type annotation for self in method
schwabot\mathlib\matrix_fault_resolver.py:84:1: D401 First line should be in imperative mood
schwabot\mathlib\matrix_fault_resolver.py:100:9: ANN101 Missing type annotation for self in method
schwabot\mathlib\matrix_fault_resolver.py:100:16: N803 argument name 'A' should be lowercase
schwabot\mathlib\matrix_fault_resolver.py:100:31: N803 argument name 'B' should be lowercase
schwabot\mathlib\matrix_fault_resolver.py:102:1: D401 First line should be in imperative mood
schwabot\mathlib\matrix_fault_resolver.py:108:22: N806 variable 'B' in function should be lowercase
schwabot\mathlib\matrix_fault_resolver.py:112:22: N806 variable 'A' in function should be lowercase
schwabot\mathlib\matrix_fault_resolver.py:117:22: N806 variable 'A_truncated' in function should be lowercase
schwabot\mathlib\matrix_fault_resolver.py:118:22: N806 variable 'B_truncated' in function should be lowercase
schwabot\mathlib\matrix_fault_resolver.py:141:9: ANN101 Missing type annotation for self in method
schwabot\mathlib\matrix_fault_resolver.py:143:1: D401 First line should be in imperative mood
schwabot\mathlib\matrix_fault_resolver.py:158:18: N806 variable 'U' in function should be lowercase
schwabot\mathlib\matrix_fault_resolver.py:158:18: N806 variable 'Vh' in function should be lowercase
schwabot\mathlib\matrix_fault_resolver.py:178:33: ANN101 Missing type annotation for self in method
schwabot\mathlib\matrix_fault_resolver.py:179:1: D401 First line should be in imperative mood
schwabot\mathlib\matrix_fault_resolver.py:226:1: D401 First line should be in imperative mood; try rephrasing
schwabot\mathlib\matrix_fault_resolver.py:231:1: D401 First line should be in imperative mood; try rephrasing
schwabot\mathlib\matrix_fault_resolver.py:236:1: D401 First line should be in imperative mood; try rephrasing
schwabot\mathlib\matrix_fault_resolver.py:240:11: ANN201 Missing return type annotation for public function
schwabot\mathlib\matrix_fault_resolver.py:241:1: D401 First line should be in imperative mood; try rephrasing
schwabot\price_feed_integration.py:3:1: D400 First line should end with a period
schwabot\price_feed_integration.py:40:1: I202 Additional newline in a group of imports. 'import logging' is identified as Stdlib and 'import asyncio' is identified as Stdlib.
schwabot\price_feed_integration.py:42:1: I202 Additional newline in a group of imports. 'import os' is identified as Stdlib and 'import logging' is identified as Stdlib.
schwabot\price_feed_integration.py:44:1: I202 Additional newline in a group of imports. 'import time' is identified as Stdlib and 'import os' is identified as Stdlib.
schwabot\price_feed_integration.py:46:1: I202 Additional newline in a group of imports. 'from dataclasses import dataclass, field' is identified as Stdlib and 'import time' is identified as Stdlib.
schwabot\price_feed_integration.py:48:1: I202 Additional newline in a group of imports. 'from datetime import datetime' is identified as Stdlib and 'from dataclasses import dataclass, field' is identified as Stdlib.
schwabot\price_feed_integration.py:50:1: I202 Additional newline in a group of imports. 'from enum import Enum' is identified as Stdlib and 'from datetime import datetime' is identified as Stdlib.
schwabot\price_feed_integration.py:52:1: I202 Additional newline in a group of imports. 'from typing import Any, Dict, List, Optional, Tuple' is identified as Stdlib and 'from enum import Enum' is identified as Stdlib.
schwabot\price_feed_integration.py:57:1: I202 Additional newline in a group of imports. 'from core.price_event import EventOrigin, PriceEvent' is identified as Third Party and 'from core.decimals_autotuner import autotune_loop' is identified as Third Party.
schwabot\price_feed_integration.py:59:1: I202 Additional newline in a group of imports. 'from core.price_event_registry import record' is identified as Third Party and 'from core.price_event import EventOrigin, PriceEvent' is identified as Third Party.
schwabot\price_feed_integration.py:61:1: I202 Additional newline in a group of imports. 'from core.price_precision_utils import format_price, get_active_decimals, get_active_hash_bits, hash_price' is identified as Third Party and 'from core.price_event_registry import record' is identified as Third Party.
schwabot\price_feed_integration.py:155:1: D107 Missing docstring in __init__
schwabot\price_feed_integration.py:155:18: ANN101 Missing type annotation for self in method
schwabot\price_feed_integration.py:156:0: ANN204 Missing return type annotation for special method
schwabot\price_feed_integration.py:163:26: ANN101 Missing type annotation for self in method
schwabot\price_feed_integration.py:164:1: D202 No blank lines allowed after function docstring
schwabot\price_feed_integration.py:176:24: ANN101 Missing type annotation for self in method
schwabot\price_feed_integration.py:176:29: ANN201 Missing return type annotation for public function
schwabot\price_feed_integration.py:177:1: D202 No blank lines allowed after function docstring
schwabot\price_feed_integration.py:181:30: ANN101 Missing type annotation for self in method
schwabot\price_feed_integration.py:181:35: ANN201 Missing return type annotation for public function
schwabot\price_feed_integration.py:182:1: D202 No blank lines allowed after function docstring
schwabot\price_feed_integration.py:192:1: D107 Missing docstring in __init__
schwabot\price_feed_integration.py:192:18: ANN101 Missing type annotation for self in method
schwabot\price_feed_integration.py:193:0: ANN204 Missing return type annotation for special method
schwabot\price_feed_integration.py:200:13: ANN101 Missing type annotation for self in method
schwabot\price_feed_integration.py:201:1: D202 No blank lines allowed after function docstring
schwabot\price_feed_integration.py:217:13: ANN101 Missing type annotation for self in method
schwabot\price_feed_integration.py:217:54: ANN201 Missing return type annotation for public function
schwabot\price_feed_integration.py:218:1: D202 No blank lines allowed after function docstring
schwabot\price_feed_integration.py:230:15: ANN101 Missing type annotation for self in method
schwabot\price_feed_integration.py:230:20: ANN201 Missing return type annotation for public function
schwabot\price_feed_integration.py:231:1: D202 No blank lines allowed after function docstring
schwabot\price_feed_integration.py:239:1: D107 Missing docstring in __init__
schwabot\price_feed_integration.py:239:18: ANN101 Missing type annotation for self in method
schwabot\price_feed_integration.py:240:0: ANN204 Missing return type annotation for special method
schwabot\price_feed_integration.py:267:31: ANN101 Missing type annotation for self in method
schwabot\price_feed_integration.py:267:36: ANN202 Missing return type annotation for protected function
schwabot\price_feed_integration.py:268:1: D202 No blank lines allowed after function docstring
schwabot\price_feed_integration.py:297:25: ANN101 Missing type annotation for self in method
schwabot\price_feed_integration.py:298:1: D202 No blank lines allowed after function docstring
schwabot\price_feed_integration.py:353:1: D107 Missing docstring in __init__
schwabot\price_feed_integration.py:353:18: ANN101 Missing type annotation for self in method
schwabot\price_feed_integration.py:354:0: ANN204 Missing return type annotation for special method
schwabot\price_feed_integration.py:373:25: ANN101 Missing type annotation for self in method
schwabot\price_feed_integration.py:374:1: D202 No blank lines allowed after function docstring
schwabot\price_feed_integration.py:441:1: D107 Missing docstring in __init__
schwabot\price_feed_integration.py:441:18: ANN101 Missing type annotation for self in method
schwabot\price_feed_integration.py:442:0: ANN204 Missing return type annotation for special method
schwabot\price_feed_integration.py:453:25: ANN101 Missing type annotation for self in method
schwabot\price_feed_integration.py:454:1: D202 No blank lines allowed after function docstring
schwabot\price_feed_integration.py:531:1: D107 Missing docstring in __init__
schwabot\price_feed_integration.py:531:18: ANN101 Missing type annotation for self in method
schwabot\price_feed_integration.py:532:0: ANN204 Missing return type annotation for special method
schwabot\price_feed_integration.py:546:25: ANN101 Missing type annotation for self in method
schwabot\price_feed_integration.py:547:1: D202 No blank lines allowed after function docstring
schwabot\price_feed_integration.py:557:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\price_feed_integration.py:568:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\price_feed_integration.py:587:1: D107 Missing docstring in __init__
schwabot\price_feed_integration.py:587:18: ANN101 Missing type annotation for self in method
schwabot\price_feed_integration.py:588:0: ANN204 Missing return type annotation for special method
schwabot\price_feed_integration.py:634:9: ANN101 Missing type annotation for self in method
schwabot\price_feed_integration.py:636:1: D202 No blank lines allowed after function docstring
schwabot\price_feed_integration.py:708:25: ANN101 Missing type annotation for self in method
schwabot\price_feed_integration.py:708:53: ANN202 Missing return type annotation for protected function
schwabot\price_feed_integration.py:709:1: D202 No blank lines allowed after function docstring
schwabot\price_feed_integration.py:761:35: ANN101 Missing type annotation for self in method
schwabot\price_feed_integration.py:762:1: D202 No blank lines allowed after function docstring
schwabot\price_feed_integration.py:784:27: ANN101 Missing type annotation for self in method
schwabot\price_feed_integration.py:785:1: D202 No blank lines allowed after function docstring
schwabot\price_feed_integration.py:789:39: ANN101 Missing type annotation for self in method
schwabot\price_feed_integration.py:790:1: D202 No blank lines allowed after function docstring
schwabot\price_feed_integration.py:822:28: ANN201 Missing return type annotation for public function
schwabot\price_feed_integration.py:823:1: D202 No blank lines allowed after function docstring
schwabot\recursive_engine\echo_hash_engine.py:1:1: D100 Missing docstring in public module
schwabot\recursive_engine\echo_hash_engine.py:9:1: D101 Missing docstring in public class
schwabot\recursive_engine\echo_hash_engine.py:10:1: D102 Missing docstring in public method
schwabot\recursive_engine\echo_hash_engine.py:11:9: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\echo_hash_engine.py:28:1: D205 1 blank line required between summary line and description
schwabot\recursive_engine\echo_hash_engine.py:28:1: D401 First line should be in imperative mood
schwabot\recursive_engine\echo_hash_engine.py:41:101: E501 line too long (108 > 100 characters)
schwabot\recursive_engine\echo_hash_engine.py:42:101: E501 line too long (102 > 100 characters)
schwabot\recursive_engine\echo_hash_engine.py:66:1: D107 Missing docstring in __init__
schwabot\recursive_engine\echo_hash_engine.py:66:18: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\echo_hash_engine.py:70:23: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\echo_hash_engine.py:71:1: D401 First line should be in imperative mood
schwabot\recursive_engine\echo_hash_engine.py:93:32: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\echo_hash_engine.py:97:13: B007 Loop control variable 'sha_key' not used within the loop body. If this is intended, start the name with an underscore.
schwabot\recursive_engine\echo_hash_engine.py:112:1: D205 1 blank line required between summary line and description
schwabot\recursive_engine\echo_hash_engine.py:117:1: D107 Missing docstring in __init__
schwabot\recursive_engine\echo_hash_engine.py:118:9: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\echo_hash_engine.py:119:9: ANN401 Dynamically typed expressions (typing.Any) are disallowed
schwabot\recursive_engine\echo_hash_engine.py:126:34: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\echo_hash_engine.py:127:1: D205 1 blank line required between summary line and description
schwabot\recursive_engine\echo_hash_engine.py:127:1: D401 First line should be in imperative mood
schwabot\recursive_engine\echo_hash_engine.py:148:9: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\echo_hash_engine.py:154:1: D200 One-line docstring should fit on one line with quotes
schwabot\recursive_engine\echo_hash_engine.py:154:1: D401 First line should be in imperative mood
schwabot\recursive_engine\echo_hash_engine.py:201:101: E501 line too long (102 > 100 characters)
schwabot\recursive_engine\recursive_registry.py:1:1: D100 Missing docstring in public module
schwabot\recursive_engine\recursive_registry.py:15:1: D107 Missing docstring in __init__
schwabot\recursive_engine\recursive_registry.py:15:18: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\recursive_registry.py:23:13: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\recursive_registry.py:29:29: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\recursive_registry.py:66:1: D107 Missing docstring in __init__
schwabot\recursive_engine\recursive_registry.py:66:18: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\recursive_registry.py:73:35: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\recursive_registry.py:106:33: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\recursive_registry.py:119:1: D205 1 blank line required between summary line and description
schwabot\recursive_engine\recursive_registry.py:124:1: D107 Missing docstring in __init__
schwabot\recursive_engine\recursive_registry.py:124:18: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\recursive_registry.py:133:9: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\recursive_registry.py:135:1: D401 First line should be in imperative mood
schwabot\recursive_engine\recursive_registry.py:135:101: E501 line too long (101 > 100 characters)
schwabot\recursive_engine\recursive_registry.py:145:24: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\recursive_registry.py:146:1: D401 First line should be in imperative mood
schwabot\recursive_engine\recursive_registry.py:149:37: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\recursive_registry.py:150:1: D401 First line should be in imperative mood
schwabot\recursive_engine\recursive_registry.py:164:24: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\recursive_registry.py:165:1: D401 First line should be in imperative mood
schwabot\recursive_engine\recursive_registry.py:168:26: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\recursive_registry.py:169:1: D401 First line should be in imperative mood
schwabot\recursive_engine\recursive_registry.py:175:29: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\recursive_registry.py:176:1: D401 First line should be in imperative mood
schwabot\recursive_engine\recursive_strategy_handler.py:1:1: D100 Missing docstring in public module
schwabot\recursive_engine\recursive_strategy_handler.py:12:1: D205 1 blank line required between summary line and description
schwabot\recursive_engine\recursive_strategy_handler.py:14:101: E501 line too long (106 > 100 characters)
schwabot\recursive_engine\recursive_strategy_handler.py:17:1: D107 Missing docstring in __init__
schwabot\recursive_engine\recursive_strategy_handler.py:18:9: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\recursive_strategy_handler.py:29:9: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\recursive_strategy_handler.py:31:1: D205 1 blank line required between summary line and description
schwabot\recursive_engine\recursive_strategy_handler.py:31:1: D401 First line should be in imperative mood
schwabot\recursive_engine\recursive_strategy_handler.py:60:9: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\recursive_strategy_handler.py:66:1: D205 1 blank line required between summary line and description
schwabot\recursive_engine\recursive_strategy_handler.py:66:1: D401 First line should be in imperative mood
schwabot\recursive_engine\recursive_strategy_handler.py:104:101: E501 line too long (102 > 100 characters)
schwabot\recursive_engine\test_recursive_engine_integration.py:1:1: D100 Missing docstring in public module
schwabot\recursive_engine\test_recursive_engine_integration.py:18:1: D101 Missing docstring in public class
schwabot\recursive_engine\test_recursive_engine_integration.py:19:1: D102 Missing docstring in public method
schwabot\recursive_engine\test_recursive_engine_integration.py:19:15: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\test_recursive_engine_integration.py:24:1: D102 Missing docstring in public method
schwabot\recursive_engine\test_recursive_engine_integration.py:24:48: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\test_recursive_engine_integration.py:33:1: D102 Missing docstring in public method
schwabot\recursive_engine\test_recursive_engine_integration.py:33:44: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\test_recursive_engine_integration.py:47:1: D102 Missing docstring in public method
schwabot\recursive_engine\test_recursive_engine_integration.py:47:54: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\test_recursive_engine_integration.py:64:1: D102 Missing docstring in public method
schwabot\recursive_engine\test_recursive_engine_integration.py:64:56: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\test_recursive_engine_integration.py:95:1: D102 Missing docstring in public method
schwabot\recursive_engine\test_recursive_engine_integration.py:95:50: ANN101 Missing type annotation for self in method
schwabot\recursive_engine\test_recursive_engine_integration.py:126:101: E501 line too long (101 > 100 characters)
schwabot\recursive_engine\test_recursive_engine_integration.py:151:101: E501 line too long (109 > 100 characters)
schwabot\session_context.py:1:1: D100 Missing docstring in public module
schwabot\session_context.py:33:1: I202 Additional newline in a group of imports. 'import time' is identified as Stdlib and 'import asyncio' is identified as Stdlib.
schwabot\session_context.py:35:1: I202 Additional newline in a group of imports. 'import uuid' is identified as Stdlib and 'import time' is identified as Stdlib.
schwabot\session_context.py:37:1: I202 Additional newline in a group of imports. 'from contextvars import ContextVar, copy_context' is identified as Stdlib and 'import uuid' is identified as Stdlib.
schwabot\session_context.py:39:1: I202 Additional newline in a group of imports. 'from dataclasses import dataclass, field' is identified as Stdlib and 'from contextvars import ContextVar, copy_context' is identified as Stdlib.
schwabot\session_context.py:41:1: I202 Additional newline in a group of imports. 'from enum import Enum' is identified as Stdlib and 'from dataclasses import dataclass, field' is identified as Stdlib.
schwabot\session_context.py:43:1: I202 Additional newline in a group of imports. 'from typing import Any, Callable, Dict, List, Optional' is identified as Stdlib and 'from enum import Enum' is identified as Stdlib.
schwabot\session_context.py:50:1: D400 First line should end with a period
schwabot\session_context.py:63:1: D400 First line should end with a period
schwabot\session_context.py:89:17: ANN101 Missing type annotation for self in method
schwabot\session_context.py:90:1: D202 No blank lines allowed after function docstring
schwabot\session_context.py:90:1: D400 First line should end with a period
schwabot\session_context.py:108:1: D200 One-line docstring should fit on one line with quotes
schwabot\session_context.py:108:1: D400 First line should end with a period
schwabot\session_context.py:114:1: D107 Missing docstring in __init__
schwabot\session_context.py:114:18: ANN101 Missing type annotation for self in method
schwabot\session_context.py:117:0: ANN204 Missing return type annotation for special method
schwabot\session_context.py:137:9: ANN101 Missing type annotation for self in method
schwabot\session_context.py:146:1: D200 One-line docstring should fit on one line with quotes
schwabot\session_context.py:146:1: D202 No blank lines allowed after function docstring
schwabot\session_context.py:146:1: D400 First line should end with a period
schwabot\session_context.py:211:29: ANN101 Missing type annotation for self in method
schwabot\session_context.py:212:1: D202 No blank lines allowed after function docstring
schwabot\session_context.py:212:1: D400 First line should end with a period
schwabot\session_context.py:216:21: ANN101 Missing type annotation for self in method
schwabot\session_context.py:217:1: D202 No blank lines allowed after function docstring
schwabot\session_context.py:217:1: D400 First line should end with a period
schwabot\session_context.py:221:24: ANN101 Missing type annotation for self in method
schwabot\session_context.py:221:32: ANN003 Missing type annotation for **updates
schwabot\session_context.py:222:1: D202 No blank lines allowed after function docstring
schwabot\session_context.py:222:1: D400 First line should end with a period
schwabot\session_context.py:252:35: ANN101 Missing type annotation for self in method
schwabot\session_context.py:253:1: D202 No blank lines allowed after function docstring
schwabot\session_context.py:253:1: D400 First line should end with a period
schwabot\session_context.py:269:22: ANN101 Missing type annotation for self in method
schwabot\session_context.py:270:1: D202 No blank lines allowed after function docstring
schwabot\session_context.py:270:1: D400 First line should end with a period
schwabot\session_context.py:300:23: ANN101 Missing type annotation for self in method
schwabot\session_context.py:301:1: D202 No blank lines allowed after function docstring
schwabot\session_context.py:301:1: D400 First line should end with a period
schwabot\session_context.py:349:32: ANN101 Missing type annotation for self in method
schwabot\session_context.py:349:92: ANN401 Dynamically typed expressions (typing.Any) are disallowed
schwabot\session_context.py:350:1: D200 One-line docstring should fit on one line with quotes
schwabot\session_context.py:350:1: D202 No blank lines allowed after function docstring
schwabot\session_context.py:350:1: D400 First line should end with a period
schwabot\session_context.py:368:31: ANN101 Missing type annotation for self in method
schwabot\session_context.py:369:1: D202 No blank lines allowed after function docstring
schwabot\session_context.py:369:1: D400 First line should end with a period
schwabot\session_context.py:450:1: D202 No blank lines allowed after function docstring
schwabot\session_context.py:450:1: D400 First line should end with a period
schwabot\session_context.py:465:60: ANN003 Missing type annotation for **kwargs
schwabot\session_context.py:467:1: D202 No blank lines allowed after function docstring
schwabot\session_context.py:467:1: D400 First line should end with a period
schwabot\session_context.py:479:1: D202 No blank lines allowed after function docstring
schwabot\session_context.py:479:1: D400 First line should end with a period
schwabot\session_context.py:484:41: ANN003 Missing type annotation for **data
schwabot\session_context.py:485:1: D202 No blank lines allowed after function docstring
schwabot\session_context.py:485:1: D400 First line should end with a period
schwabot\session_context.py:490:22: ANN003 Missing type annotation for **updates
schwabot\session_context.py:491:1: D202 No blank lines allowed after function docstring
schwabot\session_context.py:491:1: D400 First line should end with a period
schwabot\session_context.py:496:86: ANN401 Dynamically typed expressions (typing.Any) are disallowed
schwabot\session_context.py:497:1: D202 No blank lines allowed after function docstring
schwabot\session_context.py:497:1: D400 First line should end with a period
schwabot\talib_fallback.py:1:1: D205 1 blank line required between summary line and description
schwabot\talib_fallback.py:1:1: D400 First line should end with a period
schwabot\talib_fallback.py:15:1: I202 Additional newline in a group of imports. 'from typing import Union' is identified as Stdlib and 'import logging' is identified as Stdlib.
schwabot\talib_fallback.py:47:10: N802 function name 'SMA' should be lowercase
schwabot\talib_fallback.py:48:1: D202 No blank lines allowed after function docstring
schwabot\talib_fallback.py:48:1: D401 First line should be in imperative mood; try rephrasing
schwabot\talib_fallback.py:65:10: N802 function name 'EMA' should be lowercase
schwabot\talib_fallback.py:66:1: D202 No blank lines allowed after function docstring
schwabot\talib_fallback.py:83:10: N802 function name 'RSI' should be lowercase
schwabot\talib_fallback.py:84:1: D202 No blank lines allowed after function docstring
schwabot\talib_fallback.py:109:10: N802 function name 'MACD' should be lowercase
schwabot\talib_fallback.py:115:1: D202 No blank lines allowed after function docstring
schwabot\talib_fallback.py:140:10: N802 function name 'BBANDS' should be lowercase
schwabot\talib_fallback.py:146:1: D202 No blank lines allowed after function docstring
schwabot\test_complete_system.py:3:1: D205 1 blank line required between summary line and description
schwabot\test_complete_system.py:22:1: D202 No blank lines allowed after function docstring
schwabot\test_complete_system.py:40:1: S101 Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
schwabot\test_complete_system.py:42:1: S101 Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
schwabot\test_complete_system.py:44:1: S101 Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
schwabot\test_complete_system.py:46:1: S101 Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
schwabot\test_complete_system.py:66:1: D202 No blank lines allowed after function docstring
schwabot\test_complete_system.py:137:1: D202 No blank lines allowed after function docstring
schwabot\test_complete_system.py:165:1: S101 Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
schwabot\test_complete_system.py:167:1: S101 Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
schwabot\test_complete_system.py:169:1: S101 Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
schwabot\test_complete_system.py:171:1: S101 Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
schwabot\test_complete_system.py:201:1: D202 No blank lines allowed after function docstring
schwabot\test_complete_system.py:265:1: D202 No blank lines allowed after function docstring
schwabot\test_enhanced.py:1:1: D100 Missing docstring in public module
schwabot\test_trade_entry_exit.py:3:1: D400 First line should end with a period
schwabot\test_trade_entry_exit.py:36:1: I202 Additional newline in a group of imports. 'import logging' is identified as Stdlib and 'import asyncio' is identified as Stdlib.
schwabot\test_trade_entry_exit.py:38:1: I202 Additional newline in a group of imports. 'import os' is identified as Stdlib and 'import logging' is identified as Stdlib.
schwabot\test_trade_entry_exit.py:40:1: I202 Additional newline in a group of imports. 'import sys' is identified as Stdlib and 'import os' is identified as Stdlib.
schwabot\test_trade_entry_exit.py:42:1: I202 Additional newline in a group of imports. 'import time' is identified as Stdlib and 'import sys' is identified as Stdlib.
schwabot\test_trade_entry_exit.py:44:1: I202 Additional newline in a group of imports. 'import unittest' is identified as Stdlib and 'import time' is identified as Stdlib.
schwabot\test_trade_entry_exit.py:46:1: I202 Additional newline in a group of imports. 'from decimal import Decimal' is identified as Stdlib and 'import unittest' is identified as Stdlib.
schwabot\test_trade_entry_exit.py:48:1: I202 Additional newline in a group of imports. 'from typing import Any, Dict, Optional' is identified as Stdlib and 'from decimal import Decimal' is identified as Stdlib.
schwabot\test_trade_entry_exit.py:82:1: D107 Missing docstring in __init__
schwabot\test_trade_entry_exit.py:82:18: ANN101 Missing type annotation for self in method
schwabot\test_trade_entry_exit.py:83:0: ANN204 Missing return type annotation for special method
schwabot\test_trade_entry_exit.py:102:1: D107 Missing docstring in __init__
schwabot\test_trade_entry_exit.py:102:18: ANN101 Missing type annotation for self in method
schwabot\test_trade_entry_exit.py:103:0: ANN204 Missing return type annotation for special method
schwabot\test_trade_entry_exit.py:110:25: ANN101 Missing type annotation for self in method
schwabot\test_trade_entry_exit.py:111:1: D202 No blank lines allowed after function docstring
schwabot\test_trade_entry_exit.py:137:30: ANN101 Missing type annotation for self in method
schwabot\test_trade_entry_exit.py:137:52: ANN201 Missing return type annotation for public function
schwabot\test_trade_entry_exit.py:138:1: D202 No blank lines allowed after function docstring
schwabot\test_trade_entry_exit.py:142:27: ANN101 Missing type annotation for self in method
schwabot\test_trade_entry_exit.py:142:47: ANN201 Missing return type annotation for public function
schwabot\test_trade_entry_exit.py:143:1: D202 No blank lines allowed after function docstring
schwabot\test_trade_entry_exit.py:151:1: D107 Missing docstring in __init__
schwabot\test_trade_entry_exit.py:151:18: ANN101 Missing type annotation for self in method
schwabot\test_trade_entry_exit.py:152:0: ANN204 Missing return type annotation for special method
schwabot\test_trade_entry_exit.py:162:9: ANN101 Missing type annotation for self in method
schwabot\test_trade_entry_exit.py:164:1: D202 No blank lines allowed after function docstring
schwabot\test_trade_entry_exit.py:269:9: ANN101 Missing type annotation for self in method
schwabot\test_trade_entry_exit.py:271:1: D202 No blank lines allowed after function docstring
schwabot\test_trade_entry_exit.py:364:25: ANN101 Missing type annotation for self in method
schwabot\test_trade_entry_exit.py:365:1: D202 No blank lines allowed after function docstring
schwabot\test_trade_entry_exit.py:393:29: ANN101 Missing type annotation for self in method
schwabot\test_trade_entry_exit.py:394:1: D202 No blank lines allowed after function docstring
schwabot\test_trade_entry_exit.py:408:15: ANN101 Missing type annotation for self in method
schwabot\test_trade_entry_exit.py:408:20: ANN201 Missing return type annotation for public function
schwabot\test_trade_entry_exit.py:409:1: D202 No blank lines allowed after function docstring
schwabot\test_trade_entry_exit.py:415:40: ANN101 Missing type annotation for self in method
schwabot\test_trade_entry_exit.py:415:45: ANN201 Missing return type annotation for public function
schwabot\test_trade_entry_exit.py:421:0: ANN201 Missing return type annotation for public function
schwabot\test_trade_entry_exit.py:469:40: ANN101 Missing type annotation for self in method
schwabot\test_trade_entry_exit.py:469:45: ANN201 Missing return type annotation for public function
schwabot\test_trade_entry_exit.py:475:0: ANN201 Missing return type annotation for public function
schwabot\test_trade_entry_exit.py:497:34: ANN101 Missing type annotation for self in method
schwabot\test_trade_entry_exit.py:497:39: ANN201 Missing return type annotation for public function
schwabot\test_trade_entry_exit.py:503:0: ANN201 Missing return type annotation for public function
schwabot\test_trade_entry_exit.py:526:46: ANN101 Missing type annotation for self in method
schwabot\test_trade_entry_exit.py:526:51: ANN201 Missing return type annotation for public function
schwabot\test_trade_entry_exit.py:532:0: ANN201 Missing return type annotation for public function
schwabot\test_trade_entry_exit.py:546:39: ANN101 Missing type annotation for self in method
schwabot\test_trade_entry_exit.py:546:44: ANN201 Missing return type annotation for public function
schwabot\test_trade_entry_exit.py:552:0: ANN201 Missing return type annotation for public function
schwabot\test_trade_entry_exit.py:565:42: ANN101 Missing type annotation for self in method
schwabot\test_trade_entry_exit.py:565:47: ANN201 Missing return type annotation for public function
schwabot\test_trade_entry_exit.py:566:1: D202 No blank lines allowed after function docstring
schwabot\test_trade_entry_exit.py:575:0: ANN201 Missing return type annotation for public function
schwabot\test_trade_entry_exit.py:586:36: ANN101 Missing type annotation for self in method
schwabot\test_trade_entry_exit.py:586:41: ANN201 Missing return type annotation for public function
schwabot\test_trade_entry_exit.py:592:0: ANN201 Missing return type annotation for public function
schwabot\test_trade_entry_exit.py:619:15: ANN101 Missing type annotation for self in method
schwabot\test_trade_entry_exit.py:619:20: ANN201 Missing return type annotation for public function
schwabot\test_trade_entry_exit.py:620:1: D202 No blank lines allowed after function docstring
schwabot\test_trade_entry_exit.py:628:37: ANN101 Missing type annotation for self in method
schwabot\test_trade_entry_exit.py:628:42: ANN201 Missing return type annotation for public function
schwabot\test_trade_entry_exit.py:629:1: D202 No blank lines allowed after function docstring
schwabot\test_trade_entry_exit.py:654:40: ANN101 Missing type annotation for self in method
schwabot\test_trade_entry_exit.py:654:45: ANN201 Missing return type annotation for public function
schwabot\test_trade_entry_exit.py:655:1: D202 No blank lines allowed after function docstring
schwabot\test_trade_entry_exit.py:680:42: ANN101 Missing type annotation for self in method
schwabot\test_trade_entry_exit.py:680:47: ANN201 Missing return type annotation for public function
schwabot\test_trade_entry_exit.py:681:1: D202 No blank lines allowed after function docstring
schwabot\test_trade_entry_exit.py:689:13: B007 Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.
schwabot\test_trade_entry_exit.py:707:30: ANN201 Missing return type annotation for public function
schwabot\test_trade_entry_exit.py:708:1: D202 No blank lines allowed after function docstring
schwabot\tray.py:1:1: D100 Missing docstring in public module
schwabot\tray.py:35:1: S404 Consider possible security implications associated with the subprocess module.
schwabot\tray.py:37:1: I202 Additional newline in a group of imports. 'import sys' is identified as Stdlib and 'import subprocess' is identified as Stdlib.
schwabot\tray.py:39:1: I202 Additional newline in a group of imports. 'import threading' is identified as Stdlib and 'import sys' is identified as Stdlib.
schwabot\tray.py:41:1: I202 Additional newline in a group of imports. 'from pathlib import Path' is identified as Stdlib and 'import threading' is identified as Stdlib.
schwabot\tray.py:86:1: D202 No blank lines allowed after function docstring
schwabot\tray.py:88:1: S603 subprocess call - check for execution of untrusted input.
schwabot\tray.py:92:1: D202 No blank lines allowed after function docstring
schwabot\tray.py:105:1: D202 No blank lines allowed after function docstring
schwabot\ufs_app.py:1:1: D100 Missing docstring in public module
schwabot\ufs_app.py:17:11: ANN201 Missing return type annotation for public function
schwabot\ufs_app.py:18:1: D202 No blank lines allowed after function docstring
schwabot\ufs_app.py:18:1: D401 First line should be in imperative mood; try rephrasing
schwabot\update.py:1:1: D100 Missing docstring in public module
schwabot\update.py:19:1: I202 Additional newline in a group of imports. 'import pathlib' is identified as Stdlib and 'import hashlib' is identified as Stdlib.
schwabot\update.py:21:1: S404 Consider possible security implications associated with the subprocess module.
schwabot\update.py:21:1: I202 Additional newline in a group of imports. 'import subprocess' is identified as Stdlib and 'import pathlib' is identified as Stdlib.
schwabot\update.py:23:1: I202 Additional newline in a group of imports. 'import sys' is identified as Stdlib and 'import subprocess' is identified as Stdlib.
schwabot\update.py:42:1: S603 subprocess call - check for execution of untrusted input.
schwabot\update.py:46:1: D202 No blank lines allowed after function docstring
schwabot\update.py:52:1: S607 Starting a process with a partial executable path
schwabot\update.py:52:1: S603 subprocess call - check for execution of untrusted input.
schwabot\visualizer\__init__.py:1:1: D205 1 blank line required between summary line and description
schwabot\visualizer\__init__.py:1:1: D400 First line should end with a period
schwabot\visualizer\core_visualizer.py:1:1: D100 Missing docstring in public module
schwabot\visualizer\core_visualizer.py:13:1: D400 First line should end with a period
schwabot\visualizer\core_visualizer.py:21:1: D102 Missing docstring in public method
schwabot\visualizer\core_visualizer.py:21:17: ANN101 Missing type annotation for self in method
schwabot\visualizer\core_visualizer.py:34:9: ANN101 Missing type annotation for self in method
schwabot\visualizer\core_visualizer.py:40:6: ANN204 Missing return type annotation for special method
schwabot\visualizer\core_visualizer.py:83:19: ANN101 Missing type annotation for self in method
schwabot\visualizer\core_visualizer.py:83:97: ANN201 Missing return type annotation for public function
schwabot\visualizer\core_visualizer.py:108:24: ANN101 Missing type annotation for self in method
schwabot\visualizer\core_visualizer.py:108:46: ANN401 Dynamically typed expressions (typing.Any) are disallowed
schwabot\visualizer\core_visualizer.py:108:82: ANN201 Missing return type annotation for public function
schwabot\visualizer\core_visualizer.py:109:1: D400 First line should end with a period
schwabot\visualizer\core_visualizer.py:122:9: ANN101 Missing type annotation for self in method
schwabot\visualizer\core_visualizer.py:123:6: ANN201 Missing return type annotation for public function
schwabot\visualizer\core_visualizer.py:124:1: D400 First line should end with a period
schwabot\visualizer\core_visualizer.py:140:23: ANN101 Missing type annotation for self in method
schwabot\visualizer\core_visualizer.py:140:85: ANN201 Missing return type annotation for public function
schwabot\visualizer\core_visualizer.py:141:1: D400 First line should end with a period
schwabot\visualizer\core_visualizer.py:154:30: ANN101 Missing type annotation for self in method
schwabot\visualizer\core_visualizer.py:154:84: ANN201 Missing return type annotation for public function
schwabot\visualizer\core_visualizer.py:155:1: D400 First line should end with a period
schwabot\visualizer\core_visualizer.py:165:29: ANN101 Missing type annotation for self in method
schwabot\visualizer\core_visualizer.py:201:41: ANN101 Missing type annotation for self in method
schwabot\visualizer\core_visualizer.py:201:66: ANN201 Missing return type annotation for public function
schwabot\visualizer\core_visualizer.py:202:1: D400 First line should end with a period
schwabot\visualizer\core_visualizer.py:205:42: ANN101 Missing type annotation for self in method
schwabot\visualizer\core_visualizer.py:205:67: ANN202 Missing return type annotation for protected function
schwabot\visualizer\core_visualizer.py:206:1: D400 First line should end with a period
schwabot\visualizer\core_visualizer.py:213:21: ANN101 Missing type annotation for self in method
schwabot\visualizer\core_visualizer.py:213:26: ANN201 Missing return type annotation for public function
schwabot\visualizer\core_visualizer.py:214:1: D400 First line should end with a period
schwabot\visualizer\core_visualizer.py:222:20: ANN101 Missing type annotation for self in method
schwabot\visualizer\core_visualizer.py:222:25: ANN201 Missing return type annotation for public function
schwabot\visualizer\core_visualizer.py:223:1: D400 First line should end with a period
schwabot\visualizer\core_visualizer.py:233:28: ANN101 Missing type annotation for self in method
schwabot\visualizer\core_visualizer.py:233:33: ANN202 Missing return type annotation for protected function
schwabot\visualizer\core_visualizer.py:234:1: D400 First line should end with a period
schwabot\visualizer\core_visualizer.py:234:1: D401 First line should be in imperative mood; try rephrasing
schwabot\visualizer\core_visualizer.py:256:37: ANN101 Missing type annotation for self in method
schwabot\visualizer\core_visualizer.py:256:42: ANN202 Missing return type annotation for protected function
schwabot\visualizer\core_visualizer.py:257:1: D400 First line should end with a period
schwabot\visualizer\core_visualizer.py:267:21: ANN101 Missing type annotation for self in method
schwabot\visualizer\data_aggregator.py:1:1: D100 Missing docstring in public module
schwabot\visualizer\data_aggregator.py:20:18: ANN101 Missing type annotation for self in method
schwabot\visualizer\data_aggregator.py:20:24: ANN001 Missing type annotation for function argument 'visualizer'
schwabot\visualizer\data_aggregator.py:20:40: ANN204 Missing return type annotation for special method
schwabot\visualizer\data_aggregator.py:48:23: ANN101 Missing type annotation for self in method
schwabot\visualizer\data_aggregator.py:48:45: ANN401 Dynamically typed expressions (typing.Any) are disallowed
schwabot\visualizer\data_aggregator.py:48:81: ANN201 Missing return type annotation for public function
schwabot\visualizer\data_aggregator.py:49:1: D400 First line should end with a period
schwabot\visualizer\data_aggregator.py:68:9: ANN101 Missing type annotation for self in method
schwabot\visualizer\data_aggregator.py:75:6: ANN201 Missing return type annotation for public function
schwabot\visualizer\data_aggregator.py:76:1: D400 First line should end with a period
schwabot\visualizer\data_aggregator.py:97:22: ANN101 Missing type annotation for self in method
schwabot\visualizer\data_aggregator.py:97:84: ANN201 Missing return type annotation for public function
schwabot\visualizer\data_aggregator.py:98:1: D400 First line should end with a period
schwabot\visualizer\data_aggregator.py:117:9: ANN101 Missing type annotation for self in method
schwabot\visualizer\data_aggregator.py:118:6: ANN201 Missing return type annotation for public function
schwabot\visualizer\data_aggregator.py:119:1: D400 First line should end with a period
schwabot\visualizer\data_aggregator.py:140:30: ANN101 Missing type annotation for self in method
schwabot\visualizer\data_aggregator.py:140:62: ANN201 Missing return type annotation for public function
schwabot\visualizer\data_aggregator.py:141:1: D400 First line should end with a period
schwabot\visualizer\data_aggregator.py:150:34: ANN101 Missing type annotation for self in method
schwabot\visualizer\data_aggregator.py:151:1: D400 First line should end with a period
schwabot\visualizer\data_aggregator.py:174:37: ANN101 Missing type annotation for self in method
schwabot\visualizer\data_aggregator.py:175:1: D400 First line should end with a period
schwabot\visualizer\data_aggregator.py:202:33: ANN101 Missing type annotation for self in method
schwabot\visualizer\data_aggregator.py:203:1: D400 First line should end with a period
schwabot\visualizer\data_aggregator.py:228:38: ANN101 Missing type annotation for self in method
schwabot\visualizer\data_aggregator.py:229:1: D400 First line should end with a period
schwabot\visualizer\data_aggregator.py:252:33: ANN101 Missing type annotation for self in method
schwabot\visualizer\data_aggregator.py:253:1: D400 First line should end with a period
schwabot\visualizer\data_aggregator.py:270:32: ANN101 Missing type annotation for self in method
schwabot\visualizer\data_aggregator.py:270:57: ANN201 Missing return type annotation for public function
schwabot\visualizer\data_aggregator.py:271:1: D400 First line should end with a period
schwabot\visualizer\data_aggregator.py:274:21: ANN101 Missing type annotation for self in method
schwabot\visualizer\data_aggregator.py:274:26: ANN201 Missing return type annotation for public function
schwabot\visualizer\data_aggregator.py:275:1: D400 First line should end with a period
schwabot\visualizer\data_aggregator.py:283:20: ANN101 Missing type annotation for self in method
schwabot\visualizer\data_aggregator.py:283:25: ANN201 Missing return type annotation for public function
schwabot\visualizer\data_aggregator.py:284:1: D400 First line should end with a period
schwabot\visualizer\data_aggregator.py:294:33: ANN101 Missing type annotation for self in method
schwabot\visualizer\data_aggregator.py:294:38: ANN202 Missing return type annotation for protected function
schwabot\visualizer\data_aggregator.py:295:1: D400 First line should end with a period
schwabot\visualizer\data_aggregator.py:295:1: D401 First line should be in imperative mood; try rephrasing
schwabot\visualizer\data_aggregator.py:316:24: ANN101 Missing type annotation for self in method
schwabot\visualizer\data_aggregator.py:316:58: ANN201 Missing return type annotation for public function
schwabot\visualizer\data_aggregator.py:317:1: D400 First line should end with a period
schwabot\visualizer\math_visualizer.py:1:1: D100 Missing docstring in public module
schwabot\visualizer\math_visualizer.py:22:9: ANN101 Missing type annotation for self in method
schwabot\visualizer\math_visualizer.py:27:6: ANN204 Missing return type annotation for special method
schwabot\visualizer\math_visualizer.py:65:9: ANN101 Missing type annotation for self in method
schwabot\visualizer\math_visualizer.py:68:9: ANN401 Dynamically typed expressions (typing.Any) are disallowed
schwabot\visualizer\math_visualizer.py:71:6: ANN201 Missing return type annotation for public function
schwabot\visualizer\math_visualizer.py:72:1: D400 First line should end with a period
schwabot\visualizer\math_visualizer.py:95:9: ANN101 Missing type annotation for self in method
schwabot\visualizer\math_visualizer.py:101:6: ANN201 Missing return type annotation for public function
schwabot\visualizer\math_visualizer.py:102:1: D400 First line should end with a period
schwabot\visualizer\math_visualizer.py:125:9: ANN101 Missing type annotation for self in method
schwabot\visualizer\math_visualizer.py:131:6: ANN201 Missing return type annotation for public function
schwabot\visualizer\math_visualizer.py:132:1: D400 First line should end with a period
schwabot\visualizer\math_visualizer.py:152:9: ANN101 Missing type annotation for self in method
schwabot\visualizer\math_visualizer.py:153:6: ANN201 Missing return type annotation for public function
schwabot\visualizer\math_visualizer.py:154:1: D400 First line should end with a period
schwabot\visualizer\math_visualizer.py:168:31: ANN101 Missing type annotation for self in method
schwabot\visualizer\math_visualizer.py:169:1: D400 First line should end with a period
schwabot\visualizer\math_visualizer.py:172:13: B007 Loop control variable 'key' not used within the loop body. If this is intended, start the name with an underscore.
schwabot\visualizer\math_visualizer.py:185:9: ANN101 Missing type annotation for self in method
schwabot\visualizer\math_visualizer.py:187:1: D400 First line should end with a period
schwabot\visualizer\math_visualizer.py:202:9: ANN101 Missing type annotation for self in method
schwabot\visualizer\math_visualizer.py:203:6: ANN202 Missing return type annotation for protected function
schwabot\visualizer\math_visualizer.py:204:1: D400 First line should end with a period
schwabot\visualizer\math_visualizer.py:216:41: ANN101 Missing type annotation for self in method
schwabot\visualizer\math_visualizer.py:217:1: D400 First line should end with a period
schwabot\visualizer\math_visualizer.py:226:33: ANN101 Missing type annotation for self in method
schwabot\visualizer\math_visualizer.py:227:1: D400 First line should end with a period
schwabot\visualizer\math_visualizer.py:248:28: ANN101 Missing type annotation for self in method
schwabot\visualizer\math_visualizer.py:249:1: D400 First line should end with a period
schwabot\visualizer\math_visualizer.py:275:31: ANN101 Missing type annotation for self in method
schwabot\visualizer\math_visualizer.py:276:1: D400 First line should end with a period
schwabot\visualizer\math_visualizer.py:300:29: ANN101 Missing type annotation for self in method
schwabot\visualizer\math_visualizer.py:301:1: D400 First line should end with a period
schwabot\visualizer\math_visualizer.py:321:32: ANN101 Missing type annotation for self in method
schwabot\visualizer\math_visualizer.py:322:1: D400 First line should end with a period
schwabot\visualizer\math_visualizer.py:335:44: C401 Unnecessary generator - rewrite as a set comprehension.
schwabot\visualizer\math_visualizer.py:341:27: ANN101 Missing type annotation for self in method
schwabot\visualizer\math_visualizer.py:342:1: D400 First line should end with a period
schwabot\visualizer\math_visualizer.py:353:32: ANN101 Missing type annotation for self in method
schwabot\visualizer\math_visualizer.py:353:57: ANN201 Missing return type annotation for public function
schwabot\visualizer\math_visualizer.py:354:1: D400 First line should end with a period
schwabot\visualizer\math_visualizer.py:357:33: ANN101 Missing type annotation for self in method
schwabot\visualizer\math_visualizer.py:357:77: ANN202 Missing return type annotation for protected function
schwabot\visualizer\math_visualizer.py:358:1: D400 First line should end with a period
schwabot\visualizer\math_visualizer.py:365:21: ANN101 Missing type annotation for self in method
schwabot\visualizer\math_visualizer.py:365:26: ANN201 Missing return type annotation for public function
schwabot\visualizer\math_visualizer.py:366:1: D400 First line should end with a period
schwabot\visualizer\math_visualizer.py:374:20: ANN101 Missing type annotation for self in method
schwabot\visualizer\math_visualizer.py:374:25: ANN201 Missing return type annotation for public function
schwabot\visualizer\math_visualizer.py:375:1: D400 First line should end with a period
schwabot\visualizer\math_visualizer.py:385:28: ANN101 Missing type annotation for self in method
schwabot\visualizer\math_visualizer.py:385:33: ANN202 Missing return type annotation for protected function
schwabot\visualizer\math_visualizer.py:386:1: D400 First line should end with a period
schwabot\visualizer\math_visualizer.py:386:1: D401 First line should be in imperative mood; try rephrasing
schwabot\visualizer\math_visualizer.py:407:25: ANN101 Missing type annotation for self in method
schwabot\visualizer\math_visualizer.py:408:1: D400 First line should end with a period
schwabot\visualizer\math_visualizer.py:425:101: E501 line too long (124 > 100 characters)
schwabot\visualizer\math_visualizer.py:444:101: E501 line too long (124 > 100 characters)
schwabot\visualizer\performance_monitor.py:1:1: D100 Missing docstring in public module
schwabot\visualizer\performance_monitor.py:24:9: ANN101 Missing type annotation for self in method
schwabot\visualizer\performance_monitor.py:28:6: ANN204 Missing return type annotation for special method
schwabot\visualizer\performance_monitor.py:88:30: ANN101 Missing type annotation for self in method
schwabot\visualizer\performance_monitor.py:88:35: ANN202 Missing return type annotation for protected function
schwabot\visualizer\performance_monitor.py:89:1: D400 First line should end with a period
schwabot\visualizer\performance_monitor.py:101:26: ANN101 Missing type annotation for self in method
schwabot\visualizer\performance_monitor.py:102:1: D400 First line should end with a period
schwabot\visualizer\performance_monitor.py:129:29: ANN101 Missing type annotation for self in method
schwabot\visualizer\performance_monitor.py:130:1: D400 First line should end with a period
schwabot\visualizer\performance_monitor.py:158:30: ANN101 Missing type annotation for self in method
schwabot\visualizer\performance_monitor.py:159:1: D400 First line should end with a period
schwabot\visualizer\performance_monitor.py:175:24: ANN101 Missing type annotation for self in method
schwabot\visualizer\performance_monitor.py:175:29: ANN201 Missing return type annotation for public function
schwabot\visualizer\performance_monitor.py:176:1: D400 First line should end with a period
schwabot\visualizer\performance_monitor.py:232:29: ANN101 Missing type annotation for self in method
schwabot\visualizer\performance_monitor.py:233:1: D400 First line should end with a period
schwabot\visualizer\performance_monitor.py:240:32: ANN101 Missing type annotation for self in method
schwabot\visualizer\performance_monitor.py:241:1: D400 First line should end with a period
schwabot\visualizer\performance_monitor.py:263:33: ANN101 Missing type annotation for self in method
schwabot\visualizer\performance_monitor.py:264:1: D400 First line should end with a period
schwabot\visualizer\performance_monitor.py:266:29: ANN001 Missing type annotation for function argument 'data_list'
schwabot\visualizer\performance_monitor.py:266:40: ANN001 Missing type annotation for function argument 'key'
schwabot\visualizer\performance_monitor.py:266:52: ANN201 Missing return type annotation for public function
schwabot\visualizer\performance_monitor.py:300:34: ANN101 Missing type annotation for self in method
schwabot\visualizer\performance_monitor.py:300:59: ANN201 Missing return type annotation for public function
schwabot\visualizer\performance_monitor.py:301:1: D400 First line should end with a period
schwabot\visualizer\performance_monitor.py:304:21: ANN101 Missing type annotation for self in method
schwabot\visualizer\performance_monitor.py:304:26: ANN201 Missing return type annotation for public function
schwabot\visualizer\performance_monitor.py:305:1: D400 First line should end with a period
schwabot\visualizer\performance_monitor.py:313:20: ANN101 Missing type annotation for self in method
schwabot\visualizer\performance_monitor.py:313:25: ANN201 Missing return type annotation for public function
schwabot\visualizer\performance_monitor.py:314:1: D400 First line should end with a period
schwabot\visualizer\performance_monitor.py:324:29: ANN101 Missing type annotation for self in method
schwabot\visualizer\performance_monitor.py:324:34: ANN202 Missing return type annotation for protected function
schwabot\visualizer\performance_monitor.py:325:1: D400 First line should end with a period
schwabot\visualizer\performance_monitor.py:325:1: D401 First line should be in imperative mood; try rephrasing
schwabot\visualizer\performance_monitor.py:347:20: ANN101 Missing type annotation for self in method
schwabot\visualizer\performance_monitor.py:348:1: D400 First line should end with a period
schwabot\visualizer\performance_monitor.py:380:101: E501 line too long (103 > 100 characters)
schwabot\visualizer\trading_visualizer.py:1:1: D100 Missing docstring in public module
schwabot\visualizer\trading_visualizer.py:21:9: ANN101 Missing type annotation for self in method
schwabot\visualizer\trading_visualizer.py:26:6: ANN204 Missing return type annotation for special method
schwabot\visualizer\trading_visualizer.py:63:29: ANN101 Missing type annotation for self in method
schwabot\visualizer\trading_visualizer.py:63:83: ANN201 Missing return type annotation for public function
schwabot\visualizer\trading_visualizer.py:64:1: D400 First line should end with a period
schwabot\visualizer\trading_visualizer.py:83:9: ANN101 Missing type annotation for self in method
schwabot\visualizer\trading_visualizer.py:90:6: ANN201 Missing return type annotation for public function
schwabot\visualizer\trading_visualizer.py:91:1: D400 First line should end with a period
schwabot\visualizer\trading_visualizer.py:112:25: ANN101 Missing type annotation for self in method
schwabot\visualizer\trading_visualizer.py:112:65: ANN201 Missing return type annotation for public function
schwabot\visualizer\trading_visualizer.py:113:1: D400 First line should end with a period
schwabot\visualizer\trading_visualizer.py:122:34: ANN101 Missing type annotation for self in method
schwabot\visualizer\trading_visualizer.py:122:91: ANN201 Missing return type annotation for public function
schwabot\visualizer\trading_visualizer.py:123:1: D400 First line should end with a period
schwabot\visualizer\trading_visualizer.py:128:35: ANN101 Missing type annotation for self in method
schwabot\visualizer\trading_visualizer.py:128:93: ANN201 Missing return type annotation for public function
schwabot\visualizer\trading_visualizer.py:129:1: D400 First line should end with a period
schwabot\visualizer\trading_visualizer.py:160:36: ANN101 Missing type annotation for self in method
schwabot\visualizer\trading_visualizer.py:160:94: ANN202 Missing return type annotation for protected function
schwabot\visualizer\trading_visualizer.py:161:1: D400 First line should end with a period
schwabot\visualizer\trading_visualizer.py:161:1: D401 First line should be in imperative mood; try rephrasing
schwabot\visualizer\trading_visualizer.py:164:32: ANN101 Missing type annotation for self in method
schwabot\visualizer\trading_visualizer.py:165:1: D400 First line should end with a period
schwabot\visualizer\trading_visualizer.py:190:29: ANN101 Missing type annotation for self in method
schwabot\visualizer\trading_visualizer.py:191:1: D400 First line should end with a period
schwabot\visualizer\trading_visualizer.py:217:31: ANN101 Missing type annotation for self in method
schwabot\visualizer\trading_visualizer.py:218:1: D400 First line should end with a period
schwabot\visualizer\trading_visualizer.py:235:28: ANN101 Missing type annotation for self in method
schwabot\visualizer\trading_visualizer.py:236:1: D400 First line should end with a period
schwabot\visualizer\trading_visualizer.py:252:42: ANN101 Missing type annotation for self in method
schwabot\visualizer\trading_visualizer.py:253:1: D400 First line should end with a period
schwabot\visualizer\trading_visualizer.py:269:30: ANN101 Missing type annotation for self in method
schwabot\visualizer\trading_visualizer.py:270:1: D400 First line should end with a period
schwabot\visualizer\trading_visualizer.py:281:35: ANN101 Missing type annotation for self in method
schwabot\visualizer\trading_visualizer.py:281:60: ANN201 Missing return type annotation for public function
schwabot\visualizer\trading_visualizer.py:282:1: D400 First line should end with a period
schwabot\visualizer\trading_visualizer.py:285:36: ANN101 Missing type annotation for self in method
schwabot\visualizer\trading_visualizer.py:285:80: ANN202 Missing return type annotation for protected function
schwabot\visualizer\trading_visualizer.py:286:1: D400 First line should end with a period
schwabot\visualizer\trading_visualizer.py:293:21: ANN101 Missing type annotation for self in method
schwabot\visualizer\trading_visualizer.py:293:26: ANN201 Missing return type annotation for public function
schwabot\visualizer\trading_visualizer.py:294:1: D400 First line should end with a period
schwabot\visualizer\trading_visualizer.py:302:20: ANN101 Missing type annotation for self in method
schwabot\visualizer\trading_visualizer.py:302:25: ANN201 Missing return type annotation for public function
schwabot\visualizer\trading_visualizer.py:303:1: D400 First line should end with a period
schwabot\visualizer\trading_visualizer.py:313:28: ANN101 Missing type annotation for self in method
schwabot\visualizer\trading_visualizer.py:313:33: ANN202 Missing return type annotation for protected function
schwabot\visualizer\trading_visualizer.py:314:1: D400 First line should end with a period
schwabot\visualizer\trading_visualizer.py:314:1: D401 First line should be in imperative mood; try rephrasing
schwabot\visualizer\trading_visualizer.py:335:28: ANN101 Missing type annotation for self in method
schwabot\visualizer\trading_visualizer.py:336:1: D400 First line should end with a period
schwabot\visualizer\trading_visualizer.py:351:101: E501 line too long (112 > 100 characters)
schwabot\visualizer_example.py:3:1: D400 First line should end with a period
schwabot\visualizer_example.py:22:1: I202 Additional newline in a group of imports. 'import logging' is identified as Stdlib and 'import asyncio' is identified as Stdlib.
schwabot\visualizer_example.py:24:1: I202 Additional newline in a group of imports. 'import random' is identified as Stdlib and 'import logging' is identified as Stdlib.
schwabot\visualizer_example.py:26:1: I202 Additional newline in a group of imports. 'import time' is identified as Stdlib and 'import random' is identified as Stdlib.
schwabot\visualizer_example.py:28:1: I202 Additional newline in a group of imports. 'from typing import Any, Dict' is identified as Stdlib and 'import time' is identified as Stdlib.
schwabot\visualizer_example.py:42:1: D200 One-line docstring should fit on one line with quotes
schwabot\visualizer_example.py:48:18: ANN101 Missing type annotation for self in method
schwabot\visualizer_example.py:48:23: ANN204 Missing return type annotation for special method
schwabot\visualizer_example.py:49:1: D202 No blank lines allowed after function docstring
schwabot\visualizer_example.py:49:1: D400 First line should end with a period
schwabot\visualizer_example.py:55:35: ANN101 Missing type annotation for self in method
schwabot\visualizer_example.py:55:40: ANN201 Missing return type annotation for public function
schwabot\visualizer_example.py:56:1: D202 No blank lines allowed after function docstring
schwabot\visualizer_example.py:56:1: D400 First line should end with a period
schwabot\visualizer_example.py:86:32: ANN101 Missing type annotation for self in method
schwabot\visualizer_example.py:86:76: ANN201 Missing return type annotation for public function
schwabot\visualizer_example.py:87:1: D202 No blank lines allowed after function docstring
schwabot\visualizer_example.py:87:1: D400 First line should end with a period
schwabot\visualizer_example.py:97:26: ANN101 Missing type annotation for self in method
schwabot\visualizer_example.py:97:70: ANN201 Missing return type annotation for public function
schwabot\visualizer_example.py:98:1: D202 No blank lines allowed after function docstring
schwabot\visualizer_example.py:98:1: D400 First line should end with a period
schwabot\visualizer_example.py:112:23: ANN101 Missing type annotation for self in method
schwabot\visualizer_example.py:112:67: ANN201 Missing return type annotation for public function
schwabot\visualizer_example.py:113:1: D202 No blank lines allowed after function docstring
schwabot\visualizer_example.py:113:1: D400 First line should end with a period
schwabot\visualizer_example.py:118:101: E501 line too long (104 > 100 characters)
schwabot\visualizer_example.py:127:30: ANN101 Missing type annotation for self in method
schwabot\visualizer_example.py:127:60: ANN201 Missing return type annotation for public function
schwabot\visualizer_example.py:128:1: D202 No blank lines allowed after function docstring
schwabot\visualizer_example.py:128:1: D400 First line should end with a period
schwabot\visualizer_example.py:137:41: ANN101 Missing type annotation for self in method
schwabot\visualizer_example.py:137:66: ANN201 Missing return type annotation for public function
schwabot\visualizer_example.py:138:1: D202 No blank lines allowed after function docstring
schwabot\visualizer_example.py:138:1: D400 First line should end with a period
schwabot\visualizer_example.py:150:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\visualizer_example.py:152:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\visualizer_example.py:154:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\visualizer_example.py:156:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\visualizer_example.py:156:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\visualizer_example.py:172:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\visualizer_example.py:173:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\visualizer_example.py:181:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\visualizer_example.py:183:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\visualizer_example.py:187:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\visualizer_example.py:191:50: ANN101 Missing type annotation for self in method
schwabot\visualizer_example.py:191:75: ANN201 Missing return type annotation for public function
schwabot\visualizer_example.py:192:1: D202 No blank lines allowed after function docstring
schwabot\visualizer_example.py:192:1: D400 First line should end with a period
schwabot\visualizer_example.py:209:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\visualizer_example.py:211:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\visualizer_example.py:211:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\visualizer_example.py:213:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\visualizer_example.py:215:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\visualizer_example.py:227:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\visualizer_example.py:227:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\visualizer_example.py:229:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\visualizer_example.py:229:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\visualizer_example.py:236:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\visualizer_example.py:244:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\visualizer_example.py:245:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\visualizer_example.py:247:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\visualizer_example.py:248:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\visualizer_example.py:251:1: S311 Standard pseudo-random generators are not suitable for security/cryptographic purposes.
schwabot\visualizer_example.py:255:33: ANN101 Missing type annotation for self in method
schwabot\visualizer_example.py:255:59: ANN201 Missing return type annotation for public function
schwabot\visualizer_example.py:256:1: D202 No blank lines allowed after function docstring
schwabot\visualizer_example.py:256:1: D400 First line should end with a period
schwabot\visualizer_example.py:288:101: E501 line too long (121 > 100 characters)
schwabot\visualizer_example.py:292:101: E501 line too long (124 > 100 characters)
schwabot\visualizer_example.py:296:101: E501 line too long (119 > 100 characters)
schwabot\visualizer_example.py:312:17: ANN201 Missing return type annotation for public function
schwabot\visualizer_example.py:313:1: D202 No blank lines allowed after function docstring
schwabot\visualizer_example.py:313:1: D400 First line should end with a period
schwabot\visualizer_example.py:313:1: D401 First line should be in imperative mood; try rephrasing
schwabot\vortex_security.py:1:1: D100 Missing docstring in public module
schwabot\vortex_security.py:37:1: I202 Additional newline in a group of imports. 'import math' is identified as Stdlib and 'import hashlib' is identified as Stdlib.
schwabot\vortex_security.py:39:1: I202 Additional newline in a group of imports. 'import time' is identified as Stdlib and 'import math' is identified as Stdlib.
schwabot\vortex_security.py:41:1: I202 Additional newline in a group of imports. 'from contextvars import ContextVar' is identified as Stdlib and 'import time' is identified as Stdlib.
schwabot\vortex_security.py:43:1: I202 Additional newline in a group of imports. 'from dataclasses import dataclass' is identified as Stdlib and 'from contextvars import ContextVar' is identified as Stdlib.
schwabot\vortex_security.py:45:1: I202 Additional newline in a group of imports. 'from enum import Enum' is identified as Stdlib and 'from dataclasses import dataclass' is identified as Stdlib.
schwabot\vortex_security.py:47:1: I202 Additional newline in a group of imports. 'from typing import Any, Callable, Dict, List, Optional, Set' is identified as Stdlib and 'from enum import Enum' is identified as Stdlib.
schwabot\vortex_security.py:54:1: D400 First line should end with a period
schwabot\vortex_security.py:67:1: D400 First line should end with a period
schwabot\vortex_security.py:87:1: D105 Missing docstring in magic method
schwabot\vortex_security.py:87:18: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:88:0: ANN204 Missing return type annotation for special method
schwabot\vortex_security.py:93:1: D400 First line should end with a period
schwabot\vortex_security.py:101:1: D107 Missing docstring in __init__
schwabot\vortex_security.py:101:18: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:102:0: ANN204 Missing return type annotation for special method
schwabot\vortex_security.py:107:28: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:107:34: ANN401 Dynamically typed expressions (typing.Any) are disallowed
schwabot\vortex_security.py:108:1: D202 No blank lines allowed after function docstring
schwabot\vortex_security.py:108:1: D400 First line should end with a period
schwabot\vortex_security.py:120:37: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:121:1: D202 No blank lines allowed after function docstring
schwabot\vortex_security.py:121:1: D400 First line should end with a period
schwabot\vortex_security.py:127:13: B007 Loop control variable 'i' not used within the loop body. If this is intended, start the name with an underscore.
schwabot\vortex_security.py:139:1: D400 First line should end with a period
schwabot\vortex_security.py:147:1: D107 Missing docstring in __init__
schwabot\vortex_security.py:147:18: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:148:0: ANN204 Missing return type annotation for special method
schwabot\vortex_security.py:154:9: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:160:1: D200 One-line docstring should fit on one line with quotes
schwabot\vortex_security.py:160:1: D202 No blank lines allowed after function docstring
schwabot\vortex_security.py:160:1: D400 First line should end with a period
schwabot\vortex_security.py:195:1: D400 First line should end with a period
schwabot\vortex_security.py:205:1: D200 One-line docstring should fit on one line with quotes
schwabot\vortex_security.py:205:1: D202 No blank lines allowed after function docstring
schwabot\vortex_security.py:205:1: D400 First line should end with a period
schwabot\vortex_security.py:213:33: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:214:1: D200 One-line docstring should fit on one line with quotes
schwabot\vortex_security.py:214:1: D202 No blank lines allowed after function docstring
schwabot\vortex_security.py:214:1: D400 First line should end with a period
schwabot\vortex_security.py:236:19: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:237:1: D202 No blank lines allowed after function docstring
schwabot\vortex_security.py:237:1: D400 First line should end with a period
schwabot\vortex_security.py:241:18: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:242:1: D202 No blank lines allowed after function docstring
schwabot\vortex_security.py:242:1: D400 First line should end with a period
schwabot\vortex_security.py:246:19: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:247:1: D202 No blank lines allowed after function docstring
schwabot\vortex_security.py:247:1: D400 First line should end with a period
schwabot\vortex_security.py:253:1: D400 First line should end with a period
schwabot\vortex_security.py:261:1: D107 Missing docstring in __init__
schwabot\vortex_security.py:261:18: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:262:0: ANN204 Missing return type annotation for special method
schwabot\vortex_security.py:269:22: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:270:1: D200 One-line docstring should fit on one line with quotes
schwabot\vortex_security.py:270:1: D202 No blank lines allowed after function docstring
schwabot\vortex_security.py:270:1: D400 First line should end with a period
schwabot\vortex_security.py:291:9: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:293:1: D200 One-line docstring should fit on one line with quotes
schwabot\vortex_security.py:293:1: D202 No blank lines allowed after function docstring
schwabot\vortex_security.py:293:1: D400 First line should end with a period
schwabot\vortex_security.py:319:1: D400 First line should end with a period
schwabot\vortex_security.py:327:1: D107 Missing docstring in __init__
schwabot\vortex_security.py:327:18: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:328:0: ANN204 Missing return type annotation for special method
schwabot\vortex_security.py:338:9: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:340:1: D200 One-line docstring should fit on one line with quotes
schwabot\vortex_security.py:340:1: D202 No blank lines allowed after function docstring
schwabot\vortex_security.py:340:1: D400 First line should end with a period
schwabot\vortex_security.py:370:23: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:371:1: D200 One-line docstring should fit on one line with quotes
schwabot\vortex_security.py:371:1: D202 No blank lines allowed after function docstring
schwabot\vortex_security.py:371:1: D400 First line should end with a period
schwabot\vortex_security.py:419:1: D200 One-line docstring should fit on one line with quotes
schwabot\vortex_security.py:419:1: D400 First line should end with a period
schwabot\vortex_security.py:425:1: D107 Missing docstring in __init__
schwabot\vortex_security.py:425:18: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:428:0: ANN204 Missing return type annotation for special method
schwabot\vortex_security.py:457:27: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:458:1: D202 No blank lines allowed after function docstring
schwabot\vortex_security.py:458:1: D400 First line should end with a period
schwabot\vortex_security.py:464:29: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:465:1: D202 No blank lines allowed after function docstring
schwabot\vortex_security.py:465:1: D400 First line should end with a period
schwabot\vortex_security.py:475:22: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:475:29: ANN002 Missing type annotation for *args
schwabot\vortex_security.py:476:1: D202 No blank lines allowed after function docstring
schwabot\vortex_security.py:476:1: D400 First line should end with a period
schwabot\vortex_security.py:482:28: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:483:1: D200 One-line docstring should fit on one line with quotes
schwabot\vortex_security.py:483:1: D202 No blank lines allowed after function docstring
schwabot\vortex_security.py:483:1: D400 First line should end with a period
schwabot\vortex_security.py:515:38: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:516:1: D200 One-line docstring should fit on one line with quotes
schwabot\vortex_security.py:516:1: D202 No blank lines allowed after function docstring
schwabot\vortex_security.py:516:1: D400 First line should end with a period
schwabot\vortex_security.py:530:26: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:531:1: D200 One-line docstring should fit on one line with quotes
schwabot\vortex_security.py:531:1: D202 No blank lines allowed after function docstring
schwabot\vortex_security.py:531:1: D400 First line should end with a period
schwabot\vortex_security.py:548:9: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:550:1: D200 One-line docstring should fit on one line with quotes
schwabot\vortex_security.py:550:1: D202 No blank lines allowed after function docstring
schwabot\vortex_security.py:550:1: D400 First line should end with a period
schwabot\vortex_security.py:640:31: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:641:1: D200 One-line docstring should fit on one line with quotes
schwabot\vortex_security.py:641:1: D202 No blank lines allowed after function docstring
schwabot\vortex_security.py:641:1: D400 First line should end with a period
schwabot\vortex_security.py:685:33: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:686:1: D200 One-line docstring should fit on one line with quotes
schwabot\vortex_security.py:686:1: D202 No blank lines allowed after function docstring
schwabot\vortex_security.py:686:1: D400 First line should end with a period
schwabot\vortex_security.py:754:35: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:754:82: ANN201 Missing return type annotation for public function
schwabot\vortex_security.py:755:1: D200 One-line docstring should fit on one line with quotes
schwabot\vortex_security.py:755:1: D202 No blank lines allowed after function docstring
schwabot\vortex_security.py:755:1: D400 First line should end with a period
schwabot\vortex_security.py:809:32: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:810:1: D200 One-line docstring should fit on one line with quotes
schwabot\vortex_security.py:810:1: D202 No blank lines allowed after function docstring
schwabot\vortex_security.py:810:1: D400 First line should end with a period
schwabot\vortex_security.py:868:35: ANN101 Missing type annotation for self in method
schwabot\vortex_security.py:869:1: D200 One-line docstring should fit on one line with quotes
schwabot\vortex_security.py:869:1: D202 No blank lines allowed after function docstring
schwabot\vortex_security.py:869:1: D400 First line should end with a period
schwabot\vortex_security.py:907:1: D202 No blank lines allowed after function docstring
schwabot\vortex_security.py:907:1: D400 First line should end with a period
utils\__init__.py:3:1: D205 1 blank line required between summary line and description
utils\__init__.py:3:1: D400 First line should end with a period
utils\file_integrity_checker.py:2:1: D205 1 blank line required between summary line and description
utils\file_integrity_checker.py:2:1: D400 First line should end with a period
utils\file_integrity_checker.py:38:18: ANN101 Missing type annotation for self in method
utils\file_integrity_checker.py:38:23: ANN204 Missing return type annotation for special method
utils\file_integrity_checker.py:47:33: ANN101 Missing type annotation for self in method
utils\file_integrity_checker.py:63:9: ANN101 Missing type annotation for self in method
utils\file_integrity_checker.py:143:9: ANN101 Missing type annotation for self in method
utils\file_integrity_checker.py:175:32: ANN101 Missing type annotation for self in method
utils\file_integrity_checker.py:199:31: ANN101 Missing type annotation for self in method
utils\file_integrity_checker.py:229:34: ANN101 Missing type annotation for self in method
utils\file_integrity_checker.py:243:26: ANN101 Missing type annotation for self in method
utils\file_integrity_checker.py:257:26: ANN101 Missing type annotation for self in method
utils\file_integrity_checker.py:276:1: D401 First line should be in imperative mood; try rephrasing
utils\fractal_injection.py:2:1: D205 1 blank line required between summary line and description
utils\fractal_injection.py:2:1: D400 First line should end with a period
utils\fractal_injection.py:44:18: ANN101 Missing type annotation for self in method
utils\fractal_injection.py:44:23: ANN204 Missing return type annotation for special method
utils\fractal_injection.py:54:9: ANN101 Missing type annotation for self in method
utils\fractal_injection.py:103:34: ANN101 Missing type annotation for self in method
utils\fractal_injection.py:114:37: ANN101 Missing type annotation for self in method
utils\fractal_injection.py:124:32: ANN101 Missing type annotation for self in method
utils\fractal_injection.py:130:37: ANN101 Missing type annotation for self in method
utils\fractal_injection.py:135:35: ANN101 Missing type annotation for self in method
utils\fractal_injection.py:149:31: ANN101 Missing type annotation for self in method
utils\fractal_injection.py:187:30: ANN101 Missing type annotation for self in method
utils\fractal_injection.py:230:34: ANN101 Missing type annotation for self in method
utils\hash_validator.py:2:1: D205 1 blank line required between summary line and description
utils\hash_validator.py:2:1: D400 First line should end with a period
utils\hash_validator.py:35:18: ANN101 Missing type annotation for self in method
utils\hash_validator.py:35:23: ANN204 Missing return type annotation for special method
utils\hash_validator.py:44:33: ANN101 Missing type annotation for self in method
utils\hash_validator.py:86:33: ANN101 Missing type annotation for self in method
utils\hash_validator.py:118:32: ANN101 Missing type annotation for self in method
utils\hash_validator.py:135:35: ANN101 Missing type annotation for self in method
utils\historical_data_downloader.py:2:1: D205 1 blank line required between summary line and description
utils\historical_data_downloader.py:2:1: D400 First line should end with a period
utils\historical_data_downloader.py:17:1: I201 Missing newline between import groups. 'import pandas' is identified as Third Party and 'import aiohttp' is identified as Third Party.
utils\historical_data_downloader.py:62:1: D202 No blank lines allowed after function docstring
utils\historical_data_downloader.py:140:1: D103 Missing docstring in public function
utils\historical_data_downloader.py:141:0: ANN201 Missing return type annotation for public function
utils\logging_setup.py:28:1: D401 First line should be in imperative mood; try rephrasing
utils\logging_setup.py:43:7: ANN401 Dynamically typed expressions (typing.Any) are disallowed
utils\logging_setup.py:81:1: D401 First line should be in imperative mood; try rephrasing
utils\market_data_utils.py:1:1: D100 Missing docstring in public module
utils\market_data_utils.py:19:1: D205 1 blank line required between summary line and description
utils\market_data_utils.py:19:1: D401 First line should be in imperative mood
utils\market_data_utils.py:41:1: D205 1 blank line required between summary line and description
utils\market_data_utils.py:41:1: D401 First line should be in imperative mood
utils\market_data_utils.py:63:1: D200 One-line docstring should fit on one line with quotes
utils\market_data_utils.py:84:1: D205 1 blank line required between summary line and description
utils\market_data_utils.py:84:1: D401 First line should be in imperative mood
utils\market_data_utils.py:93:1: D205 1 blank line required between summary line and description
utils\market_data_utils.py:125:54: ANN201 Missing return type annotation for public function
utils\market_data_utils.py:162:1: D200 One-line docstring should fit on one line with quotes
utils\math_utils.py:39:1: D401 First line should be in imperative mood; try rephrasing
utils\price_bridge.py:2:1: D205 1 blank line required between summary line and description
utils\price_bridge.py:2:1: D400 First line should end with a period
utils\price_bridge.py:61:23: ANN101 Missing type annotation for self in method
utils\price_bridge.py:61:28: ANN204 Missing return type annotation for special method
utils\price_bridge.py:68:30: ANN101 Missing type annotation for self in method
utils\price_bridge.py:73:37: ANN101 Missing type annotation for self in method
utils\price_bridge.py:86:17: ANN101 Missing type annotation for self in method
utils\price_bridge.py:125:18: ANN101 Missing type annotation for self in method
utils\price_bridge.py:125:60: ANN204 Missing return type annotation for special method
utils\price_bridge.py:184:22: ANN101 Missing type annotation for self in method
utils\price_bridge.py:192:25: ANN101 Missing type annotation for self in method
utils\price_bridge.py:201:23: ANN101 Missing type annotation for self in method
utils\price_bridge.py:201:64: ANN202 Missing return type annotation for protected function
utils\price_bridge.py:208:39: ANN101 Missing type annotation for self in method
utils\price_bridge.py:220:101: E501 line too long (127 > 100 characters)
utils\price_bridge.py:226:101: E501 line too long (128 > 100 characters)
utils\price_bridge.py:268:35: ANN101 Missing type annotation for self in method
utils\price_bridge.py:271:101: E501 line too long (107 > 100 characters)
utils\price_bridge.py:309:25: ANN101 Missing type annotation for self in method
utils\price_bridge.py:342:35: ANN101 Missing type annotation for self in method
utils\price_bridge.py:361:26: ANN101 Missing type annotation for self in method
utils\price_bridge.py:375:21: ANN101 Missing type annotation for self in method
utils\price_bridge.py:375:26: ANN201 Missing return type annotation for public function
utils\price_bridge.py:397:5: F811 redefinition of unused 'asyncio' from line 14
utils\price_bridge.py:399:1: D103 Missing docstring in public function
utils\price_bridge.py:399:34: ANN201 Missing return type annotation for public function
utils\safe_print.py:3:1: D205 1 blank line required between summary line and description
utils\safe_print.py:3:1: D400 First line should end with a period
utils\safe_print.py:22:17: ANN002 Missing type annotation for *args
utils\safe_print.py:22:25: ANN003 Missing type annotation for **kwargs
utils\safe_print.py:50:11: ANN002 Missing type annotation for *args
utils\safe_print.py:50:19: ANN003 Missing type annotation for **kwargs
utils\safe_print.py:60:11: ANN002 Missing type annotation for *args
utils\safe_print.py:60:19: ANN003 Missing type annotation for **kwargs
utils\safe_print.py:70:12: ANN002 Missing type annotation for *args
utils\safe_print.py:70:20: ANN003 Missing type annotation for **kwargs
utils\safe_print.py:80:14: ANN002 Missing type annotation for *args
utils\safe_print.py:80:22: ANN003 Missing type annotation for **kwargs
utils\safe_print.py:90:12: ANN002 Missing type annotation for *args
utils\safe_print.py:90:20: ANN003 Missing type annotation for **kwargs
utils\safe_print.py:100:15: ANN002 Missing type annotation for *args
utils\safe_print.py:100:23: ANN003 Missing type annotation for **kwargs
utils\secure_config_manager.py:1:1: D100 Missing docstring in public module
utils\secure_config_manager.py:13:1: D205 1 blank line required between summary line and description
utils\secure_config_manager.py:18:18: ANN101 Missing type annotation for self in method
utils\secure_config_manager.py:18:46: ANN204 Missing return type annotation for special method
utils\secure_config_manager.py:34:32: ANN101 Missing type annotation for self in method
utils\secure_config_manager.py:34:37: ANN202 Missing return type annotation for protected function
utils\secure_config_manager.py:47:23: ANN101 Missing type annotation for self in method
utils\secure_config_manager.py:53:23: ANN101 Missing type annotation for self in method
utils\secure_config_manager.py:57:23: ANN101 Missing type annotation for self in method
utils\secure_config_manager.py:61:22: ANN101 Missing type annotation for self in method
utils\secure_config_manager.py:62:1: D205 1 blank line required between summary line and description
utils\secure_config_manager.py:89:23: ANN101 Missing type annotation for self in method
utils\secure_config_manager.py:90:1: D200 One-line docstring should fit on one line with quotes
utils\secure_config_manager.py:113:21: ANN101 Missing type annotation for self in method
utils\secure_config_manager.py:114:1: D200 One-line docstring should fit on one line with quotes
utils\secure_config_manager.py:132:30: ANN101 Missing type annotation for self in method
utils\secure_config_manager.py:137:24: ANN101 Missing type annotation for self in method
utils\secure_config_manager.py:151:22: ANN101 Missing type annotation for self in method
utils\secure_config_manager.py:162:22: ANN101 Missing type annotation for self in method
utils\secure_config_manager.py:162:51: ANN202 Missing return type annotation for protected function
utils\secure_config_manager.py:167:29: ANN101 Missing type annotation for self in method
utils\secure_config_manager.py:168:1: D205 1 blank line required between summary line and description


FAILED - black core schwabot utils config --check --line-length=100 --target-version py311
  STDERR:
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\adaptive_profit_cycle_function.py: Cannot parse for target version Python 3.11: 3:9: Adaptive Profit Cycle Function (APCF) - Dynamic Profit Optimization System
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\adaptive_trainer.py: Cannot parse for target version Python 3.11: 5:9: Adaptive Trainer for Schwabot AI Models
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\cli.py: Cannot parse for target version Python 3.11: 210:0:             try:
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\backup_validator.py: Cannot parse for target version Python 3.11: 7:4: The original file failed to parse; a stub was generated so the package
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\common.py: Cannot parse for target version Python 3.11: 55:84:     def __init__(self, component_id: str, name: str, component_type: ComponentType,)
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\config\__init__.py: Cannot parse for target version Python 3.11: 4:21: Mathematical/Trading Configuration Package Stub
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\config\defaults.py: Cannot parse for target version Python 3.11: 4:21: Mathematical/Trading Configuration Defaults Stub
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\crystalline_uplink_field.py: Cannot parse for target version Python 3.11: 3:12: Crystalline Uplink Field (CUF) Bridge
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\dlt_waveform_engine.py: Cannot parse for target version Python 3.11: 3:4: DLT Waveform Engine
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\dlt_waveform_visualization.py: Cannot parse for target version Python 3.11: 5:4: DLT Waveform Visualization Module.
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\dualistic_thought_engines.py: Cannot parse for target version Python 3.11: 3:10: Dualistic Thought Engines - Core Mathematical Framework for Schwabot
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\fallback_logic.py: Cannot parse for target version Python 3.11: 5:9: Fallback Logic Module
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\ferris_rde.py: Cannot parse for target version Python 3.11: 5:7: Ferris RDE (Recursive Dualistic Engine) Module
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\ghost_field_stabilizer.py: Cannot parse for target version Python 3.11: 5:6: Ghost Field Stabilizer Module
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\greyscale_collapse_matrix.py: Cannot parse for target version Python 3.11: 3:10: Greyscale Collapse Matrix
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\glyph_vm.py: Cannot parse for target version Python 3.11: 5:6: Glyph VM (Virtual Machine) Module
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\fractal_core.py: Cannot parse for target version Python 3.11: 5:8: Fractal Core Module
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\matrix_fault_resolver.py: Cannot parse for target version Python 3.11: 5:7: Matrix Fault Resolver Module
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\matrix_map_logic.py: Cannot parse for target version Python 3.11: 5:7: Matrix Map Logic Module
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\overlay\aleph_overlay_mapper.py: Cannot parse for target version Python 3.11: 3:6: Aleph Overlay Mapper Module
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\phase\bit_wave_propagator.py: Cannot parse for target version Python 3.11: 3:9: Bit-Wave Propagator Module
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\phase\drift_phase_weighter.py: Cannot parse for target version Python 3.11: 3:12: Drift-Phase Weighter Module
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\phase\phase_transition_monitor.py: Cannot parse for target version Python 3.11: 3:6: Phase Transition Monitor Module
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\portfolio_integration.py: Cannot parse for target version Python 3.11: 5:10: Portfolio Integration Module
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\profit_cycle_allocator.py: Cannot parse for target version Python 3.11: 5:7: Profit Cycle Allocator Module
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\trading_execution_engine.py: Cannot parse for target version Python 3.11: 3:8: Trading Execution Engine - Order Execution and Position Management
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\truth_lattice_math.py: Cannot parse for target version Python 3.11: 5:6: Truth Lattice Math (Consensus Engine) Module
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\truth_matrix_engine.py: Cannot parse for target version Python 3.11: 3:6: Truth Matrix Engine
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\wallet_tracker.py: Cannot parse for target version Python 3.11: 3:7: Wallet Tracker Module
error: cannot format C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\lantern_core\main_loop.py: Cannot parse for target version Python 3.11: 353:0:                 if self.market_data_callback:

Oh no! \U0001f4a5 \U0001f494 \U0001f4a5
294 files would be left unchanged, 30 files would fail to reformat.


FAILED - isort core schwabot utils config --check-only --profile black
  STDERR:
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\launch.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\main.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\price_feed_integration.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\session_context.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\talib_fallback.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\test_complete_system.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\test_trade_entry_exit.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\tray.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\ufs_app.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\update.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\visualizer_example.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\vortex_security.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\__init__.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\ai_oracles\profit_oracle.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\adaptive_profit_cycle_function.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\adaptive_trainer.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\advanced_settings_engine.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\advanced_tensor_algebra.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\ccxt_trading_executor.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\clean_math_foundation.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\clean_profit_vectorization.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\clean_trading_pipeline.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\clean_unified_math.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\common.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\crystalline_uplink_field.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\dlt_waveform_engine.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\dlt_waveform_visualization.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\dualistic_thought_engines.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\fallback_logic.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\ferris_rde.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\fractal_core.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\ghost_field_stabilizer.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\glyph_vm.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\greyscale_collapse_matrix.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\matrix_fault_resolver.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\matrix_map_logic.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\portfolio_integration.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\profit_cycle_allocator.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\pure_profit_calculator.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\speed_lattice_trading_integration.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\strategy_mapper.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\trading_engine_integration.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\trading_execution_engine.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\truth_lattice_math.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\truth_matrix_engine.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\unified_math_system.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\core\unified_trading_pipeline.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\mathlib\line_render_engine.py Imports are incorrectly sorted and/or formatted.
ERROR: C:\Users\maxde\Downloads\clonerepo\AOI_Base_Files_Schwabot\schwabot\mathlib\matrix_fault_resolver.py Imports are incorrectly sorted and/or formatted.

