# -*- coding: utf-8 -*-
# =========================================================
# SCHWABOT MASTER INTEGRATION CONFIGURATION
# =========================================================
# This YAML defines the complete 8-layer integration pipeline
# for Schwabot's trading system with proper API management
# and secure cross-layer communication.

version: "1.0.0"
integration_name: "schwabot_unified_pipeline"
created_at: "2024-01-15"
description: "Master configuration for complete Schwabot integration"

# =============================================================================
# LAYER 1: MARKET DATA INGESTION LAYER
# =============================================================================
market_data_layer:
  enabled: true
  priority: 1
  apis:
    coingecko:
      enabled: true
      endpoint: "https://api.coingecko.com/api/v3"
      rate_limit: 10  # requests per minute
      timeout: 30
      retry_attempts: 3
      cache_duration: 60  # seconds
      
    coinmarketcap:
      enabled: true
      endpoint: "https://pro-api.coinmarketcap.com/v1"
      api_key_env: "CMC_API_KEY"
      rate_limit: 30
      timeout: 30
      retry_attempts: 3
      cache_duration: 120
      
    news_feeds:
      enabled: true
      sources:
        - "coindesk"
        - "cointelegraph" 
        - "bitcoin_magazine"
      update_interval: 300  # 5 minutes
      sentiment_analysis: true
      
  processing:
    data_validation: true
    anomaly_detection: true
    cross_reference_validation: true
    historical_correlation: true

# =============================================================================
# LAYER 2: BRAIN TRADING ENGINE LAYER (AI DECISION CORE)
# =============================================================================
brain_engine_layer:
  enabled: true
  priority: 2
  depends_on: ["market_data_layer"]
  
  brain_config:
    base_profit_rate: 0.002
    confidence_threshold: 0.7
    enhancement_range: [0.8, 2.0]
    max_history_size: 1000
    learning_enabled: true
    
  processing_modes:
    real_time: true
    batch_processing: true
    simulation_mode: true
    
  integration_points:
    market_data_input: "market_data_layer.processed_data"
    symbolic_router_output: "symbolic_profit_layer.glyph_signals"
    math_system_input: "unified_math_layer.optimization_results"
    
  glyph_mapping:
    brain_symbols: ["[BRAIN]", "üß†", "‚ö°", "üîÆ"]
    profit_symbols: ["üí∞", "üí∏", "üìà", "üéØ"]
    warning_symbols: ["‚ö†Ô∏è", "üõë", "üî¥"]
    action_symbols: ["üü¢", "üü°", "üîÑ"]

# =============================================================================
# LAYER 3: SYMBOLIC PROFIT ROUTER LAYER (GLYPH PROCESSING)
# =============================================================================
symbolic_profit_layer:
  enabled: true
  priority: 3
  depends_on: ["brain_engine_layer"]
  
  glyph_processing:
    unicode_tier_mapping: true
    sha256_hash_integration: true
    bit_flip_state_analysis: true
    recursive_trigger_detection: true
    
  profit_tiers:
    tier_1: 0.005   # 0.5% minimum
    tier_2: 0.02    # 2% mid-term
    tier_3: 0.075   # 7.5% momentum
    tier_4: 0.15    # 15% macro
    
  vault_integration:
    profit_threshold: 0.05
    recursive_storage: true
    hash_pattern_matching: true
    cross_glyph_correlation: true

# =============================================================================
# LAYER 4: UNIFIED MATH SYSTEM LAYER (MATHEMATICAL CORE)
# =============================================================================
unified_math_layer:
  enabled: true
  priority: 4
  depends_on: ["brain_engine_layer", "symbolic_profit_layer"]
  
  mathematical_systems:
    drift_field_computation: true
    entropy_calculation: true
    recursive_functions: true
    tensor_operations: true
    quantum_enhancement: true
    
  optimization_algorithms:
    profit_maximization: true
    risk_adjustment: true
    portfolio_optimization: true
    confidence_scoring: true
    
  integration_bridges:
    brain_signal_processing: "brain_engine_layer.signals"
    symbolic_profit_calculation: "symbolic_profit_layer.profit_scores"
    market_data_analysis: "market_data_layer.processed_data"

# =============================================================================
# LAYER 5: API MANAGEMENT & SECURITY LAYER
# =============================================================================
api_security_layer:
  enabled: true
  priority: 5
  depends_on: ["market_data_layer"]
  
  security_protocols:
    api_key_encryption: true
    secret_key_hashing: true
    internal_authentication: true
    rate_limiting: true
    
  key_management:
    encryption_algorithm: "AES-256"
    hash_algorithm: "SHA-256"
    key_rotation_interval: 86400  # 24 hours
    secure_storage_path: "secure/"
    
  trading_apis:
    coinbase_pro:
      enabled: false  # Set to true when ready for live trading
      api_key_env: "COINBASE_API_KEY"
      secret_env: "COINBASE_SECRET"
      passphrase_env: "COINBASE_PASSPHRASE"
      sandbox: true
      
    binance:
      enabled: false
      api_key_env: "BINANCE_API_KEY"
      secret_env: "BINANCE_SECRET"
      testnet: true

# =============================================================================
# LAYER 6: LANTERN EYE VISUALIZATION LAYER
# =============================================================================
visualization_layer:
  enabled: true
  priority: 6
  depends_on: ["brain_engine_layer", "symbolic_profit_layer", "unified_math_layer"]
  
  visual_components:
    drift_matrix: true
    profit_resonance: true
    brain_signal_display: true
    glyph_tier_visualization: true
    real_time_charts: true
    
  update_intervals:
    real_time_charts: 1     # 1 second
    brain_signals: 5        # 5 seconds
    profit_analysis: 10     # 10 seconds
    system_status: 30       # 30 seconds
    
  integration_data:
    brain_signals: "brain_engine_layer.processed_signals"
    profit_tiers: "symbolic_profit_layer.tier_visualizations"
    mathematical_state: "unified_math_layer.system_state"

# =============================================================================
# LAYER 7: RISK MANAGEMENT & PORTFOLIO LAYER
# =============================================================================
risk_management_layer:
  enabled: true
  priority: 7
  depends_on: ["brain_engine_layer", "api_security_layer"]
  
  risk_parameters:
    max_position_size: 0.1        # 10% max per trade
    stop_loss_threshold: 0.05     # 5% stop loss
    take_profit_threshold: 0.15   # 15% take profit
    daily_loss_limit: 0.02        # 2% daily loss limit
    
  portfolio_management:
    diversification_enabled: true
    correlation_analysis: true
    position_sizing: "confidence_based"
    rebalancing_frequency: 3600   # 1 hour
    
  safety_mechanisms:
    circuit_breaker: true
    emergency_stop: true
    anomaly_detection: true
    manual_override: true

# =============================================================================
# LAYER 8: INTEGRATION PIPELINE & ORCHESTRATION LAYER
# =============================================================================
orchestration_layer:
  enabled: true
  priority: 8
  depends_on: ["all_layers"]
  
  pipeline_coordination:
    async_processing: true
    layer_synchronization: true
    error_propagation: true
    fallback_mechanisms: true
    
  data_flow:
    market_data_to_brain: true
    brain_to_symbolic: true
    symbolic_to_math: true
    math_to_visualization: true
    brain_to_risk: true
    risk_to_execution: true
    
  monitoring:
    layer_health_checks: true
    performance_monitoring: true
    bottleneck_detection: true
    auto_scaling: true

# =============================================================================
# CROSS-LAYER COMMUNICATION PROTOCOLS
# =============================================================================
communication_protocols:
  message_format: "json"
  encryption: true
  compression: true
  acknowledgment_required: true
  
  layer_interfaces:
    market_to_brain:
      data_types: ["price", "volume", "sentiment"]
      update_frequency: "real_time"
      
    brain_to_symbolic:
      data_types: ["signals", "confidence", "decisions"]
      update_frequency: "per_signal"
      
    symbolic_to_math:
      data_types: ["profit_scores", "glyph_tiers", "hash_patterns"]
      update_frequency: "per_calculation"
      
    math_to_visualization:
      data_types: ["optimized_results", "entropy_states", "drift_fields"]
      update_frequency: "periodic"
      
    brain_to_risk:
      data_types: ["trading_decisions", "confidence_levels", "position_requests"]
      update_frequency: "per_decision"

# =============================================================================
# SYSTEM INTEGRATION SETTINGS
# =============================================================================
system_integration:
  startup_sequence:
    - "market_data_layer"
    - "api_security_layer"
    - "unified_math_layer"
    - "brain_engine_layer"
    - "symbolic_profit_layer"
    - "risk_management_layer"
    - "visualization_layer"
    - "orchestration_layer"
    
  shutdown_sequence:
    - "orchestration_layer"
    - "visualization_layer"
    - "risk_management_layer"
    - "symbolic_profit_layer"
    - "brain_engine_layer"
    - "unified_math_layer"
    - "api_security_layer"
    - "market_data_layer"
    
  health_monitoring:
    enabled: true
    check_interval: 30
    alert_thresholds:
      cpu_usage: 80
      memory_usage: 85
      error_rate: 0.05
      response_time: 5000  # milliseconds
      
  backup_and_recovery:
    auto_backup: true
    backup_interval: 3600  # 1 hour
    backup_retention: 168  # 1 week
    recovery_testing: true

# =============================================================================
# DEVELOPMENT AND TESTING CONFIGURATIONS
# =============================================================================
development:
  testing_mode: false
  debug_logging: true
  performance_profiling: false
  mock_apis: false
  
  test_scenarios:
    unit_tests: true
    integration_tests: true
    performance_tests: true
    stress_tests: false
    
  simulation_settings:
    historical_data_testing: true
    paper_trading: true
    backtesting_enabled: true
    forward_testing: true

# =============================================================================
# EMERGENCY AND FAILOVER CONFIGURATIONS  
# =============================================================================
emergency_protocols:
  emergency_stop:
    enabled: true
    triggers: ["manual", "system_error", "risk_threshold"]
    
  failover:
    enabled: true
    backup_systems: true
    graceful_degradation: true
    
  recovery:
    auto_recovery: true
    recovery_timeout: 300  # 5 minutes
    manual_intervention_required: false

# =============================================================================
# LOGGING AND MONITORING
# =============================================================================
logging:
  level: "INFO"
  layers:
    market_data: "INFO"
    brain_engine: "DEBUG"
    symbolic_profit: "INFO"
    unified_math: "WARNING"
    api_security: "WARNING"
    visualization: "ERROR"
    risk_management: "INFO"
    orchestration: "DEBUG"
    
  outputs:
    console: true
    file: true
    database: false
    remote: false
    
  rotation:
    max_size: "100MB"
    max_files: 10
    compression: true 