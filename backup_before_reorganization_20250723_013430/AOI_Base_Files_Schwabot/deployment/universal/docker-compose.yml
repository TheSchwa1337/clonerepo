version: '3.8'

services:
  # Main Schwabot Trading System
  schwabot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: schwabot-trading
    restart: unless-stopped
    environment:
      - SCHWABOT_ENVIRONMENT=production
      - SCHWABOT_TRADING_MODE=sandbox
      - SCHWABOT_LOG_LEVEL=INFO
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
      - ./registry:/app/registry
    ports:
      - "5000:5000"  # API server
      - "8080:8080"  # Web interface
    depends_on:
      - redis
      - postgres
    networks:
      - schwabot-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and real-time data
  redis:
    image: redis:7-alpine
    container_name: schwabot-redis
    restart: unless-stopped
    command: redis-server --requirepass ${SCHWABOT_REDIS_PASSWORD:-schwabot_redis_pass}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - schwabot-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL for persistent data storage
  postgres:
    image: postgres:15-alpine
    container_name: schwabot-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${SCHWABOT_DB_NAME:-schwabot_production}
      POSTGRES_USER: ${SCHWABOT_DB_USER:-schwabot_user}
      POSTGRES_PASSWORD: ${SCHWABOT_DB_PASSWORD:-schwabot_db_pass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - schwabot-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${SCHWABOT_DB_USER:-schwabot_user}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: schwabot-nginx
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - schwabot
    networks:
      - schwabot-network

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: schwabot-prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - schwabot-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: schwabot-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - schwabot-network

  # Backup service
  backup:
    image: alpine:latest
    container_name: schwabot-backup
    restart: "no"
    volumes:
      - ./scripts:/scripts
      - ./data:/data
      - ./backups:/backups
    environment:
      - BACKUP_RETENTION_DAYS=30
    networks:
      - schwabot-network
    command: ["/scripts/backup.sh"]

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  schwabot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 