name: Python CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  core-validation:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install TA-Lib dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential wget
        sudo apt-get install -y libta-lib0-dev || \
        sudo apt-get install -y libta-lib-dev || \
        {
          echo "Installing TA-Lib from source..."
          wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
          tar -xzf ta-lib-0.4.0-src.tar.gz
          cd ta-lib/
          ./configure --prefix=/usr
          make
          sudo make install
          cd ..
          rm -rf ta-lib ta-lib-0.4.0-src.tar.gz
        }
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools
        pip install -r requirements.txt
    
    - name: Run Flake8 syntax and style checks
      run: |
        flake8 core/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 core/ --count --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run Black code formatting check
      run: |
        black --check --diff core/
    
    - name: Run MyPy type checks
      run: |
        mypy core/
    
    - name: Run Pytest unit and integration tests
      run: |
        pytest test/
    
    # - name: Minimal import check
    #   run: |
    #     python -c "import core, utils, backtesting; print('✅ Core modules imported successfully')"
    
    # - name: Test CLI help (optional)
    #   run: |
    #     python main.py --help || echo "⚠️ CLI help may fail in CI" 