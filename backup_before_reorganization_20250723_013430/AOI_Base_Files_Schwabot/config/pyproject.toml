[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "schwabot"
version = "1.0.0"
description = "Advanced cryptocurrency trading bot with unified mathematics framework"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Schwabot Development Team", email = "dev@schwabot.ai"}
]
maintainers = [
    {name = "Schwabot Development Team", email = "dev@schwabot.ai"}
]
keywords = [
    "trading",
    "cryptocurrency",
    "bitcoin", 
    "algorithmic-trading",
    "quantitative-finance",
    "machine-learning",
    "mathematics"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0,<2.0.0",
    "scipy>=1.9.0,<2.0.0",
    "aiohttp>=3.8.0,<4.0.0",
    "requests>=2.28.0,<3.0.0",
    "pandas>=1.5.0,<3.0.0",
    "matplotlib>=3.5.0,<4.0.0",
    "flask>=2.2.0,<3.0.0",
    "pyyaml>=6.0,<7.0",
    "pydantic>=1.10.0,<3.0.0",
    "psutil>=5.9.0,<6.0.0",
    "cryptography>=37.0.0,<42.0.0",
    "websockets>=10.4,<11.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "black>=22.0.0,<24.0.0",
    "isort>=5.10.0,<6.0.0",
    "flake8>=5.0.0,<7.0.0",
    "mypy>=1.0.0,<2.0.0",
    "pre-commit>=2.20.0,<4.0.0"
]
ml = [
    "scikit-learn>=1.1.0,<2.0.0",
    "torch>=1.12.0,<3.0.0",
    "tensorflow>=2.9.0,<3.0.0"
]
viz = [
    "plotly>=5.10.0,<6.0.0",
    "bokeh>=2.4.0,<4.0.0",
    "seaborn>=0.11.0,<1.0.0"
]
crypto = [
    "ccxt>=4.0.0,<5.0.0"
]
docs = [
    "sphinx>=5.0.0,<8.0.0",
    "sphinx-rtd-theme>=1.2.0,<2.0.0",
    "myst-parser>=0.18.0,<2.0.0"
]

[project.urls]
"Homepage" = "https://github.com/schwabot/schwabot"
"Bug Reports" = "https://github.com/schwabot/schwabot/issues"
"Source" = "https://github.com/schwabot/schwabot"
"Documentation" = "https://schwabot.readthedocs.io/"

[project.scripts]
schwabot = "schwabot_enhanced_launcher:main"
schwabot-test = "test_schwabot_integration:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["core*", "utils*", "schwabot*"]
exclude = ["tests*", "docs*", "build*", "dist*"]

[tool.black]
line-length = 120
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''
skip-string-normalization = true
skip-magic-trailing-comma = false
preview = false

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 120
known_first_party = ["core", "config", "schwabot"]

[tool.flake8]
max-line-length = 120
extend-ignore = "E203, W503"
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.pyc",
    "*.egg-info",
    ".cache",
    ".eggs"
]

[tool.pylint.master]
ignore-patterns = '^\..*'
ignore-paths = [
    '^\.git',
    '^\.hg',
    '^\.mypy_cache',
    '^\.tox',
    '^\.venv',
    '^build',
    '^dist'
]

[tool.pylint.messages_control]
disable = [
    'C0111',  # missing-docstring
    'R0903',  # too-few-public-methods
    'W0311',  # bad-indentation
]

[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true
disallow_any_generics = true
warn_unreachable = true
warn_unused_configs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
exclude = [
    '^\.git',
    '^\.hg',
    '^\.mypy_cache',
    '^\.tox',
    '^\.venv',
    '^build',
    '^dist'
]

[tool.bandit]
exclude_dirs = [
    '.git',
    '.hg',
    '.mypy_cache',
    '.tox',
    '.venv',
    'build',
    'dist'
]
skips = ['B101']  # Skip assert statements

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--cov=core",
    "--cov=utils",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["core", "utils", "."]
omit = [
    "tests/*",
    "venv/*",
    ".venv/*",
    "build/*",
    "dist/*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
] 